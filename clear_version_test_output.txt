=== ORIGINAL CONTENT ===
theorem complex_have_chain (n : ℕ) (h : n > 0) : n + n ≥ n := by
  have h1 : n ≥ 1 := by
    omega
  have h2 : n + n ≥ n + 1 := by
    have h3 : n ≥ 1 := h1
    have h4 : n + n = n + n := rfl
    have h5 : n + 1 ≤ n + n := by
      omega
    exact h5
  have h6 : n + 1 ≥ n := by
    omega
  omega

=== HOLE VERSION (RAW) ===
theorem complex_have_chain (n : ℕ) (h : n > 0) : n + n ≥ n := by
  have h1 : n ≥ 1 := by
    hole_2
  have h2 : n + n ≥ n + 1 := by
    have h3 : n ≥ 1 := h1
    have h4 : n + n = n + n := rfl
    have h5 : n + 1 ≤ n + n := by
      hole_4
    hole_3
  have h6 : n + 1 ≥ n := by
    hole_5
  hole_1

=== CLEAR VERSION (RAW) ===
theorem complex_have_chain (n : ℕ) (h : n > 0) : n + n ≥ n := by
  have h1 : n ≥ 1 := by
    hole_2
  clear h1
  have h1 : n ≥ 1 := skip_hole
  have h2 : n + n ≥ n + 1 := by
    have h3 : n ≥ 1 := h1
    have h4 : n + n = n + n := rfl
    have h5 : n + 1 ≤ n + n := by
      hole_4
    clear h5
    have h5 : n + 1 ≤ n + n := skip_hole
    hole_3
  clear h2
  have h2 : n + n ≥ n + 1 := skip_hole
  have h6 : n + 1 ≥ n := by
    hole_5
  clear h6
  have h6 : n + 1 ≥ n := skip_hole
  hole_1

=== HOLE VERSION (WITH MACROS) ===
macro "hole_2" : tactic => `(tactic| admit)
macro "hole_4" : tactic => `(tactic| admit)
macro "hole_3" : tactic => `(tactic| admit)
macro "hole_5" : tactic => `(tactic| admit)
macro "hole_1" : tactic => `(tactic| admit)

theorem complex_have_chain (n : ℕ) (h : n > 0) : n + n ≥ n := by
  have h1 : n ≥ 1 := by
    hole_2
  have h2 : n + n ≥ n + 1 := by
    have h3 : n ≥ 1 := h1
    have h4 : n + n = n + n := rfl
    have h5 : n + 1 ≤ n + n := by
      hole_4
    hole_3
  have h6 : n + 1 ≥ n := by
    hole_5
  hole_1

=== CLEAR VERSION (WITH MACROS) ===
macro "hole_2" : tactic => `(tactic| admit)
macro "hole_4" : tactic => `(tactic| admit)
macro "hole_3" : tactic => `(tactic| admit)
macro "hole_5" : tactic => `(tactic| admit)
macro "hole_1" : tactic => `(tactic| admit)
macro "skip_hole" : term => `(sorry)

theorem complex_have_chain (n : ℕ) (h : n > 0) : n + n ≥ n := by
  have h1 : n ≥ 1 := by
    hole_2
  clear h1
  have h1 : n ≥ 1 := skip_hole
  have h2 : n + n ≥ n + 1 := by
    have h3 : n ≥ 1 := h1
    have h4 : n + n = n + n := rfl
    have h5 : n + 1 ≤ n + n := by
      hole_4
    clear h5
    have h5 : n + 1 ≤ n + n := skip_hole
    hole_3
  clear h2
  have h2 : n + n ≥ n + 1 := skip_hole
  have h6 : n + 1 ≥ n := by
    hole_5
  clear h6
  have h6 : n + 1 ≥ n := skip_hole
  hole_1

=== HOLE LIST ===
{'hole_id': 'hole_2', 'original_proof': 'omega', 'have_statement': 'have h1 : n ≥ 1 := by omega', 'position': 4, 'have_name': 'h1', 'have_type': 'n ≥ 1', 'have_start_pos': Pos(line=2, column=2)}
{'hole_id': 'hole_4', 'original_proof': 'omega', 'have_statement': 'have h5 : n + 1 ≤ n + n := by omega', 'position': 3, 'have_name': 'h5', 'have_type': 'n + 1 ≤ n + n', 'have_start_pos': Pos(line=7, column=4)}
{'hole_id': 'hole_3', 'original_proof': 'exact h5', 'have_statement': 'have h2 : n + n ≥ n + 1 := by\n  have h3 : n ≥ 1 := h1\n  have h4 : n + n = n + n := rfl\n  have h5 : n + 1 ≤ n + n := by omega\n  exact h5', 'position': 2, 'have_name': 'h2', 'have_type': 'n + n ≥ n + 1', 'have_start_pos': Pos(line=4, column=2)}
{'hole_id': 'hole_5', 'original_proof': 'omega', 'have_statement': 'have h6 : n + 1 ≥ n := by omega', 'position': 1, 'have_name': 'h6', 'have_type': 'n + 1 ≥ n', 'have_start_pos': Pos(line=10, column=2)}
{'hole_id': 'hole_1', 'original_proof': 'omega', 'have_statement': 'have complex_have_chain (n : ℕ) (h : n > 0) : n + n ≥ n :=\n  by\n  have h1 : n ≥ 1 := by omega\n  have h2 : n + n ≥ n + 1 := by\n    have h3 : n ≥ 1 := h1\n    have h4 : n + n = n + n := rfl\n    have h5 : n + 1 ≤ n + n := by omega\n    exact h5\n  have h6 : n + 1 ≥ n := by omega\n  omega', 'position': 0, 'have_name': 'h1', 'have_type': 'n ≥ 1', 'have_start_pos': Pos(line=2, column=2)}


=== VERIFICATION RESULTS ===
Original: PASS
Hole: PASS
Clear: PASS
