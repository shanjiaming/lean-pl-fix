enum Theorem {
    "Antitone.const_mul",
    "Antitone.mul",
    "Antitone.mul_const",
    "Antitone.mul_strictAnti",
    "AntitoneOn.const_mul",
    "AntitoneOn.mul",
    "AntitoneOn.mul_const",
    "AntitoneOn.mul_strictAnti",
    "Continuous.sqrt",
    "ContinuousOn.sqrt",
    "Contravariant.MulLECancellable",
    "Filter.Tendsto.sqrt",
    "Left.mul_le_one",
    "Left.mul_lt_mul",
    "Left.mul_lt_one",
    "Left.mul_lt_one_of_le_of_lt",
    "Left.mul_lt_one_of_lt_of_le",
    "Left.one_le_mul",
    "Left.one_lt_mul",
    "Left.one_lt_mul_of_le_of_lt",
    "Left.one_lt_mul_of_lt_of_le",
    "Monotone.const_mul",
    "Monotone.mul",
    "Monotone.mul_const",
    "Monotone.mul_strictMono",
    "MonotoneOn.const_mul",
    "MonotoneOn.mul",
    "MonotoneOn.mul_const",
    "MonotoneOn.mul_strictMono",
    "MulLeftStrictMono.toIsLeftCancelMul",
    "MulRightStrictMono.toIsRightCancelMul",
    "Right.mul_le_one",
    "Right.mul_lt_mul",
    "Right.mul_lt_one",
    "Right.mul_lt_one_of_le_of_lt",
    "Right.mul_lt_one_of_lt_of_le",
    "Right.one_le_mul",
    "Right.one_lt_mul",
    "Right.one_lt_mul_of_le_of_lt",
    "Right.one_lt_mul_of_lt_of_le",
    "StrictAnti.const_mul",
    "StrictAnti.mul",
    "StrictAnti.mul_antitone",
    "StrictAnti.mul_const",
    "StrictAntiOn.const_mul",
    "StrictAntiOn.mul",
    "StrictAntiOn.mul_antitone",
    "StrictAntiOn.mul_const",
    "StrictMono.const_mul",
    "StrictMono.mul",
    "StrictMono.mul_const",
    "StrictMono.mul_monotone",
    "StrictMonoOn.const_mul",
    "StrictMonoOn.mul",
    "StrictMonoOn.mul_const",
    "StrictMonoOn.mul_monotone",
    "Subset.antisymm",
    "Subset.antisymm_iff",
    "Subset.refl",
    "Subset.trans",
    "Superset.trans",
    "abs_le_sqrt",
    "add_lt_add_iff_left",
    "cauchy_add",
    "cauchy_intCast",
    "cauchy_inv",
    "cauchy_mul",
    "cauchy_natCast",
    "cauchy_neg",
    "cauchy_nnratCast",
    "cauchy_one",
    "cauchy_ratCast",
    "cauchy_sub",
    "cauchy_zero",
    "cmp_mul_left",
    "cmp_mul_right",
    "coe_coeEmb",
    "coe_inj",
    "coe_injective",
    "coe_mem",
    "coe_sort_coe",
    "coe_sqrt",
    "coe_ssubset",
    "coe_subset",
    "continuous_sqrt",
    "div_sqrt",
    "eq_of_veq",
    "eq_one_of_mul_le_one_left",
    "eq_one_of_mul_le_one_right",
    "eq_one_of_one_le_mul_left",
    "eq_one_of_one_le_mul_right",
    "eq_or_lt_of_le",
    "exists_of_ssubset",
    "exists_square_le",
    "ext",
    "ext_cauchy",
    "ext_cauchy_iff",
    "floor_real_sqrt_eq_nat_sqrt",
    "gt_irrefl",
    "le_antisymm",
    "le_antisymm_iff",
    "le_eq_subset",
    "le_iff_lt_or_eq",
    "le_iff_subset",
    "le_mk_of_forall_le",
    "le_mul_iff_one_le_left",
    "le_mul_iff_one_le_right",
    "le_mul_of_le_mul_left",
    "le_mul_of_le_mul_right",
    "le_mul_of_le_of_one_le",
    "le_mul_of_one_le_left",
    "le_mul_of_one_le_of_le",
    "le_mul_of_one_le_right",
    "le_of_eq",
    "le_of_eq_or_lt",
    "le_of_le_mul_of_le_one_left",
    "le_of_le_mul_of_le_one_right",
    "le_of_lt",
    "le_of_lt_or_eq",
    "le_of_mul_le_mul_left",
    "le_of_mul_le_mul_right",
    "le_of_mul_le_of_one_le_left",
    "le_of_mul_le_of_one_le_right",
    "le_one_of_mul_le_left",
    "le_one_of_mul_le_right",
    "le_rfl",
    "le_sqrt",
    "le_sqrt_iff_sq_le",
    "le_sqrt_of_sq_le",
    "lt_add_one",
    "lt_asymm",
    "lt_cauchy",
    "lt_eq_subset",
    "lt_iff_le_not_le",
    "lt_iff_ssubset",
    "lt_irrefl",
    "lt_mul_iff_one_lt_left",
    "lt_mul_iff_one_lt_right",
    "lt_mul_of_le_of_one_lt",
    "lt_mul_of_lt_mul_left",
    "lt_mul_of_lt_mul_right",
    "lt_mul_of_lt_of_one_le",
    "lt_mul_of_lt_of_one_lt",
    "lt_mul_of_one_le_of_lt",
    "lt_mul_of_one_lt_left",
    "lt_mul_of_one_lt_of_le",
    "lt_mul_of_one_lt_of_lt",
    "lt_mul_of_one_lt_right",
    "lt_of_le_not_le",
    "lt_of_le_of_ne",
    "lt_of_lt_mul_of_le_one_left",
    "lt_of_lt_mul_of_le_one_right",
    "lt_of_mul_lt_mul_left",
    "lt_of_mul_lt_mul_right",
    "lt_of_mul_lt_of_one_le_left",
    "lt_of_mul_lt_of_one_le_right",
    "lt_one_add",
    "lt_one_of_mul_lt_left",
    "lt_one_of_mul_lt_right",
    "lt_or_eq_of_le",
    "lt_sq_of_sqrt_lt",
    "lt_sqrt",
    "lt_sqrt_of_sq_lt",
    "max_mul",
    "max_mul_mul_le_max_mul_max",
    "mem_coe",
    "mem_def",
    "mem_mk",
    "mem_of_subset",
    "mem_val",
    "min_mul",
    "min_mul_min_le_min_mul_mul",
    "mk_add",
    "mk_coe",
    "mk_const",
    "mk_eq",
    "mk_inf",
    "mk_le",
    "mk_le_of_forall_le",
    "mk_lt",
    "mk_mul",
    "mk_near_of_forall_near",
    "mk_neg",
    "mk_one",
    "mk_pos",
    "mk_sup",
    "mk_zero",
    "mulLECancellable_mul",
    "mulLECancellable_one",
    "mul_add_one_le_add_one_pow",
    "mul_eq_one_iff_of_one_le",
    "mul_le_iff_le_one_left",
    "mul_le_iff_le_one_right",
    "mul_le_mul",
    "mul_le_mul_iff_left",
    "mul_le_mul_iff_right",
    "mul_le_mul_left",
    "mul_le_mul_right",
    "mul_le_mul_three",
    "mul_le_of_le_of_le_one",
    "mul_le_of_le_one_left",
    "mul_le_of_le_one_of_le",
    "mul_le_of_le_one_right",
    "mul_le_of_mul_le_left",
    "mul_le_of_mul_le_right",
    "mul_left_cancel",
    "mul_left_inj_of_comparable",
    "mul_left_mono",
    "mul_left_strictMono",
    "mul_lt_iff_lt_one_left",
    "mul_lt_iff_lt_one_right",
    "mul_lt_mul_iff_left",
    "mul_lt_mul_iff_right",
    "mul_lt_mul_left",
    "mul_lt_mul_of_le_of_lt",
    "mul_lt_mul_of_lt_of_le",
    "mul_lt_mul_of_lt_of_lt",
    "mul_lt_mul_right",
    "mul_lt_of_le_of_lt_one",
    "mul_lt_of_le_one_of_lt",
    "mul_lt_of_lt_of_le_one",
    "mul_lt_of_lt_of_lt_one",
    "mul_lt_of_lt_one_left",
    "mul_lt_of_lt_one_of_le",
    "mul_lt_of_lt_one_of_lt",
    "mul_lt_of_lt_one_right",
    "mul_lt_of_mul_lt_left",
    "mul_lt_of_mul_lt_right",
    "mul_max",
    "mul_min",
    "mul_right_cancel",
    "mul_right_inj_of_comparable",
    "mul_right_mono",
    "mul_right_strictMono",
    "mul_self_sqrt",
    "nat_floor_real_sqrt_eq_nat_sqrt",
    "nat_sqrt_le_real_sqrt",
    "ne_of_gt",
    "ne_of_lt",
    "ne_of_ne_of_eq",
    "neg_sqrt_le_of_sq_le",
    "neg_sqrt_lt_of_sq_lt",
    "nonneg_of_isNat",
    "nonneg_of_isRat",
    "not_le_of_gt",
    "not_le_of_lt",
    "not_lt_of_ge",
    "not_lt_of_le",
    "not_mem_mono",
    "not_subset",
    "nz_of_isNegNat",
    "nz_of_isRat",
    "ofCauchy_add",
    "ofCauchy_div",
    "ofCauchy_inf",
    "ofCauchy_intCast",
    "ofCauchy_inv",
    "ofCauchy_mul",
    "ofCauchy_natCast",
    "ofCauchy_neg",
    "ofCauchy_nnratCast",
    "ofCauchy_one",
    "ofCauchy_ratCast",
    "ofCauchy_sub",
    "ofCauchy_sup",
    "ofCauchy_zero",
    "ofRat_rat",
    "one_le_of_le_mul_left",
    "one_le_of_le_mul_right",
    "one_le_two",
    "one_lt_of_lt_mul_left",
    "one_lt_of_lt_mul_right",
    "one_lt_two",
    "pairwise_subtype_iff_pairwise_finset",
    "pos_of_isNat",
    "pos_of_isRat",
    "ratCast_lt",
    "real_sqrt_le_nat_sqrt_succ",
    "real_sqrt_lt_nat_sqrt_succ",
    "setOf_mem",
    "sq_le",
    "sq_lt",
    "sq_sqrt",
    "sqrt_div",
    "sqrt_div_self",
    "sqrt_eq_cases",
    "sqrt_eq_iff_eq_sq",
    "sqrt_eq_iff_mul_self_eq",
    "sqrt_eq_iff_mul_self_eq_of_pos",
    "sqrt_eq_one",
    "sqrt_eq_zero",
    "sqrt_eq_zero_of_nonpos",
    "sqrt_inj",
    "sqrt_inv",
    "sqrt_le_iff",
    "sqrt_le_iff_le_sq",
    "sqrt_le_left",
    "sqrt_le_sqrt",
    "sqrt_le_sqrt_iff",
    "sqrt_lt",
    "sqrt_lt_sqrt",
    "sqrt_lt_sqrt_iff",
    "sqrt_lt_sqrt_iff_of_pos",
    "sqrt_mul",
    "sqrt_mul_self",
    "sqrt_mul_self_eq_abs",
    "sqrt_ne_zero",
    "sqrt_one",
    "sqrt_one_add_le",
    "sqrt_pos",
    "sqrt_sq",
    "sqrt_sq_eq_abs",
    "sqrt_zero",
    "ssubset_def",
    "ssubset_iff_of_subset",
    "ssubset_iff_subset_ne",
    "ssubset_of_ssubset_of_subset",
    "ssubset_of_subset_of_ssubset",
    "subset_def",
    "subset_iff",
    "subset_of_le",
    "sum_mul_le_sqrt_mul_sqrt",
    "sum_sqrt_mul_sqrt_le",
    "val_inj",
    "val_injective",
    "val_le_iff",
    "val_lt_iff",
    "val_strictMono",
    "zero_le_four",
    "zero_le_one",
    "zero_le_three",
    "zero_le_two",
    "zero_lt_four",
    "zero_lt_one",
    "zero_lt_three",
    "zero_lt_two"
}

enum OnelineTactic {
    "simp",
    "field_simp",
    "norm_num",
    "ring",
    "ring_nf",
    "omega",
    "linarith",
    "nlinarith"
}

enum AtTactic {
    "rw",
    "rwhat"
}

enum Place {
    "here",
    "before"
}

enum Int {
    "2",
    "3"
}


enum NULL{
    "NULL"
}

value Empty;
value Stmt;
value Bool;


program Lean() -> Bool;
func use_theorem_tactic: Stmt -> AtTactic, Theorem;
func oneline: Stmt -> OnelineTactic;
func delete: Stmt -> NULL;
func nth_rw: Stmt -> Int;
func unfold: Stmt -> NULL;
func checker: Bool -> Stmt, Place;
func empty: Empty -> Empty;
