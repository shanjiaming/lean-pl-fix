enum Theorem {
    "Antitone.const_mul_of_nonpos",
    "Antitone.mul",
    "Antitone.mul_const_of_nonpos",
    "Antitone.mul_monotone",
    "CommMagma.IsLeftCancelMul.toIsCancelMul",
    "CommMagma.IsLeftCancelMul.toIsRightCancelMul",
    "CommMagma.IsRightCancelMul.toIsCancelMul",
    "CommMagma.IsRightCancelMul.toIsLeftCancelMul",
    "Monotone.const_mul_of_nonpos",
    "Monotone.mul_antitone",
    "Monotone.mul_const_of_nonpos",
    "MulOneClass.ext",
    "StrictAnti.const_mul_of_neg",
    "StrictAnti.mul_const_of_neg",
    "StrictMono.const_mul_of_neg",
    "StrictMono.mul_const_of_neg",
    "Units.inv_neg",
    "Units.inv_pos",
    "add_le_mul",
    "add_le_mul_of_left_le_right",
    "add_le_mul_of_right_le_left",
    "add_le_mul_two_add",
    "add_lt_add_iff_left",
    "add_mul_self_eq",
    "add_one_le_two_mul",
    "add_one_mul",
    "add_sq",
    "antitone_mul_left",
    "antitone_mul_right",
    "boole_mul",
    "cauchy_add",
    "cauchy_intCast",
    "cauchy_inv",
    "cauchy_mul",
    "cauchy_natCast",
    "cauchy_neg",
    "cauchy_nnratCast",
    "cauchy_one",
    "cauchy_ratCast",
    "cauchy_sub",
    "cauchy_zero",
    "cmp_mul_neg_left",
    "cmp_mul_neg_right",
    "cmp_mul_pos_left",
    "cmp_mul_pos_right",
    "comp_mul_left",
    "comp_mul_right",
    "conj_eq_one_iff",
    "distrib_three_right",
    "dite_pow",
    "div_div",
    "div_div_cancel",
    "div_div_cancel_left",
    "div_div_div_cancel_left",
    "div_div_div_cancel_right",
    "div_div_div_comm",
    "div_div_div_eq",
    "div_div_eq_mul_div",
    "div_div_self",
    "div_eq_div_iff_comm",
    "div_eq_div_iff_div_eq_div",
    "div_eq_div_iff_mul_eq_mul",
    "div_eq_div_mul_div",
    "div_eq_iff_eq_mul",
    "div_eq_inv_mul",
    "div_eq_inv_self",
    "div_eq_mul_inv",
    "div_eq_mul_one_div",
    "div_eq_of_eq_mul",
    "div_eq_one",
    "div_eq_self",
    "div_inv_eq_mul",
    "div_left_inj",
    "div_left_injective",
    "div_mul",
    "div_mul_cancel",
    "div_mul_cancel_left",
    "div_mul_cancel_right",
    "div_mul_comm",
    "div_mul_div_cancel",
    "div_mul_div_comm",
    "div_mul_eq_div_div",
    "div_mul_eq_div_div_swap",
    "div_mul_eq_div_mul_one_div",
    "div_mul_eq_mul_div",
    "div_mul_mul_cancel",
    "div_ne_one",
    "div_ne_one_of_ne",
    "div_one",
    "div_pow",
    "div_right_comm",
    "div_right_inj",
    "div_right_injective",
    "div_self",
    "div_zpow",
    "eq_div_iff_mul_eq",
    "eq_div_of_mul_eq",
    "eq_iff_eq_of_div_eq_div",
    "eq_inv_iff_mul_eq_one",
    "eq_inv_mul_iff_mul_eq",
    "eq_inv_mul_of_mul_eq",
    "eq_inv_of_mul_eq_one_left",
    "eq_inv_of_mul_eq_one_right",
    "eq_mul_inv_iff_mul_eq",
    "eq_mul_inv_of_mul_eq",
    "eq_mul_of_div_eq",
    "eq_mul_of_inv_mul_eq",
    "eq_mul_of_mul_inv_eq",
    "eq_of_div_eq_one",
    "eq_of_inv_mul_eq_one",
    "eq_of_mul_inv_eq_one",
    "eq_of_one_div_eq_one_div",
    "eq_one_div_of_mul_eq_one_left",
    "eq_one_div_of_mul_eq_one_right",
    "eq_one_iff_eq_one_of_mul_eq_one",
    "eq_zero_of_mul_self_add_mul_self_eq_zero",
    "exists_zpow_surjective",
    "ext_cauchy",
    "ext_cauchy_iff",
    "four_mul_le_sq_add",
    "hom_coe_pow",
    "inv_comp_inv",
    "inv_div",
    "inv_div_inv",
    "inv_div_left",
    "inv_eq_iff_eq_inv",
    "inv_eq_iff_mul_eq_one",
    "inv_eq_of_mul_eq_one_left",
    "inv_eq_of_mul_eq_one_right",
    "inv_eq_one",
    "inv_eq_one_div",
    "inv_inj",
    "inv_injective",
    "inv_inv",
    "inv_inv_div_inv",
    "inv_involutive",
    "inv_mul",
    "inv_mul_cancel",
    "inv_mul_cancel_left",
    "inv_mul_cancel_right",
    "inv_mul_eq_div",
    "inv_mul_eq_iff_eq_mul",
    "inv_mul_eq_of_eq_mul",
    "inv_mul_eq_one",
    "inv_ne_one",
    "inv_one",
    "inv_pow",
    "inv_pow_sub",
    "inv_surjective",
    "inv_unique",
    "inv_zpow",
    "ite_mul_one",
    "ite_one_mul",
    "ite_pow",
    "ite_zero_mul",
    "ite_zero_mul_ite_zero",
    "le_mk_of_forall_le",
    "le_mul_of_le_one_left",
    "le_mul_of_le_one_right",
    "le_of_mul_le_of_one_le",
    "leftInverse_div_mul_left",
    "leftInverse_inv",
    "leftInverse_inv_mul_mul_right",
    "leftInverse_mul_left_div",
    "leftInverse_mul_right_inv_mul",
    "left_distrib",
    "left_eq_mul",
    "left_ne_mul",
    "lt_cauchy",
    "lt_mul_of_lt_one_left",
    "lt_mul_of_lt_one_right",
    "lt_of_mul_lt_mul_of_nonpos_left",
    "lt_of_mul_lt_mul_of_nonpos_right",
    "lt_two_mul_self",
    "max_mul_mul_le_max_mul_max",
    "max_mul_of_nonneg",
    "min_mul_of_nonneg",
    "mk_add",
    "mk_const",
    "mk_eq",
    "mk_inf",
    "mk_le",
    "mk_le_of_forall_le",
    "mk_lt",
    "mk_mul",
    "mk_near_of_forall_near",
    "mk_neg",
    "mk_one",
    "mk_pos",
    "mk_sup",
    "mk_zero",
    "mul_add_mul_le_mul_add_mul",
    "mul_add_mul_lt_mul_add_mul",
    "mul_add_one",
    "mul_add_one_le_add_one_pow",
    "mul_assoc",
    "mul_boole",
    "mul_comm",
    "mul_comm_div",
    "mul_div",
    "mul_div_assoc",
    "mul_div_cancel",
    "mul_div_cancel_left",
    "mul_div_cancel_right",
    "mul_div_div_cancel",
    "mul_div_left_comm",
    "mul_div_mul_comm",
    "mul_div_mul_left_eq_div",
    "mul_div_mul_right_eq_div",
    "mul_div_right_comm",
    "mul_eq_left",
    "mul_eq_of_eq_div",
    "mul_eq_of_eq_inv_mul",
    "mul_eq_of_eq_mul_inv",
    "mul_eq_one_iff_eq_inv",
    "mul_eq_one_iff_inv_eq",
    "mul_eq_right",
    "mul_inv",
    "mul_inv_cancel",
    "mul_inv_cancel_comm",
    "mul_inv_cancel_left",
    "mul_inv_cancel_right",
    "mul_inv_eq_iff_eq_mul",
    "mul_inv_eq_of_eq_mul",
    "mul_inv_eq_one",
    "mul_inv_rev",
    "mul_ite_zero",
    "mul_le_mul_left_of_neg",
    "mul_le_mul_of_nonneg_of_nonpos",
    "mul_le_mul_of_nonpos_left",
    "mul_le_mul_of_nonpos_of_nonneg",
    "mul_le_mul_of_nonpos_of_nonpos",
    "mul_le_mul_of_nonpos_right",
    "mul_le_mul_right_of_neg",
    "mul_le_of_one_le_left",
    "mul_le_of_one_le_right",
    "mul_left_cancel",
    "mul_left_cancel_iff",
    "mul_left_comm",
    "mul_left_inj",
    "mul_left_injective",
    "mul_left_iterate",
    "mul_left_iterate_apply_one",
    "mul_left_surjective",
    "mul_lt_mul_left_of_neg",
    "mul_lt_mul_of_neg_left",
    "mul_lt_mul_of_neg_right",
    "mul_lt_mul_right_of_neg",
    "mul_lt_of_one_lt_left",
    "mul_lt_of_one_lt_right",
    "mul_max_of_nonneg",
    "mul_min_of_nonneg",
    "mul_mul_div_cancel",
    "mul_mul_inv_cancel",
    "mul_mul_mul_comm",
    "mul_ne_left",
    "mul_ne_mul_left",
    "mul_ne_mul_right",
    "mul_ne_right",
    "mul_neg",
    "mul_neg_iff",
    "mul_neg_one",
    "mul_nonneg_iff",
    "mul_nonneg_iff_left_nonneg_of_pos",
    "mul_nonneg_iff_neg_imp_nonpos",
    "mul_nonneg_iff_of_pos_left",
    "mul_nonneg_iff_of_pos_right",
    "mul_nonneg_iff_pos_imp_nonneg",
    "mul_nonneg_iff_right_nonneg_of_pos",
    "mul_nonneg_of_nonpos_of_nonpos",
    "mul_nonneg_of_three",
    "mul_nonpos_iff",
    "mul_nonpos_iff_neg_imp_nonneg",
    "mul_nonpos_iff_pos_imp_nonpos",
    "mul_one",
    "mul_one_add",
    "mul_one_div",
    "mul_one_eq_id",
    "mul_one_sub",
    "mul_pos_iff",
    "mul_pos_of_neg_of_neg",
    "mul_pow_sub_one",
    "mul_right_cancel",
    "mul_right_cancel_iff",
    "mul_right_comm",
    "mul_right_inj",
    "mul_right_injective",
    "mul_right_iterate",
    "mul_right_iterate_apply_one",
    "mul_right_surjective",
    "mul_rotate",
    "mul_self_add_mul_self_eq_zero",
    "mul_self_inj",
    "mul_self_le_mul_self_iff",
    "mul_self_le_mul_self_of_le_of_neg_le",
    "mul_self_lt_mul_self_iff",
    "mul_self_nonneg",
    "mul_self_pos",
    "mul_self_zpow",
    "mul_sub_left_distrib",
    "mul_sub_one",
    "mul_sub_right_distrib",
    "mul_two",
    "mul_zpow_neg_one",
    "mul_zpow_self",
    "multiplicative_of_isTotal",
    "multiplicative_of_symmetric_of_isTotal",
    "negSucc_zsmul",
    "neg_eq_neg_one_mul",
    "neg_iff_pos_of_mul_neg",
    "neg_mul",
    "neg_mul_comm",
    "neg_mul_eq_mul_neg",
    "neg_mul_eq_neg_mul",
    "neg_mul_neg",
    "neg_one_lt_zero",
    "neg_one_mul",
    "nonneg_and_nonneg_or_nonpos_and_nonpos_of_mul_nonneg",
    "nonneg_le_nonneg_of_sq_le_sq",
    "nonneg_of_mul_nonneg_left",
    "nonneg_of_mul_nonneg_right",
    "nonneg_of_mul_nonpos_left",
    "nonneg_of_mul_nonpos_right",
    "nonpos_of_mul_nonneg_left",
    "nonpos_of_mul_nonneg_right",
    "nonpos_of_mul_nonpos_left",
    "nonpos_of_mul_nonpos_right",
    "npowBinRec.go_spec",
    "npowRec",
    "npowRec_eq",
    "npowRec_eq_npowBinRec",
    "npow_eq_pow",
    "ofCauchy_add",
    "ofCauchy_div",
    "ofCauchy_inf",
    "ofCauchy_intCast",
    "ofCauchy_inv",
    "ofCauchy_mul",
    "ofCauchy_natCast",
    "ofCauchy_neg",
    "ofCauchy_nnratCast",
    "ofCauchy_one",
    "ofCauchy_ratCast",
    "ofCauchy_sub",
    "ofCauchy_sup",
    "ofCauchy_zero",
    "ofRat_rat",
    "one_add_mul",
    "one_div",
    "one_div_div",
    "one_div_mul_eq_div",
    "one_div_mul_one_div",
    "one_div_mul_one_div_rev",
    "one_div_one",
    "one_div_one_div",
    "one_div_pow",
    "one_div_zpow",
    "one_eq_inv",
    "one_mul",
    "one_mul_eq_id",
    "one_sub_mul",
    "one_zpow",
    "pos_iff_neg_of_mul_neg",
    "pos_of_mul_neg_left",
    "pos_of_mul_neg_right",
    "pow_add",
    "pow_boole",
    "pow_dite",
    "pow_eq_pow_mod",
    "pow_ite",
    "pow_iterate",
    "pow_mul",
    "pow_mul_comm",
    "pow_mul_pow_sub",
    "pow_natAbs_eq_one",
    "pow_one",
    "pow_right_comm",
    "pow_sub",
    "pow_sub_mul_pow",
    "pow_sub_one_mul",
    "pow_succ",
    "pow_three",
    "pow_zero",
    "ratCast_lt",
    "rightInverse_inv",
    "right_distrib",
    "right_eq_mul",
    "right_ne_mul",
    "sign_cases_of_C_mul_pow_nonneg",
    "sq_nonneg",
    "sq_nonpos_iff",
    "strictAnti_mul_left",
    "strictAnti_mul_right",
    "sub_one_lt",
    "sub_one_mul",
    "two_mul",
    "two_mul_le_add_of_sq_eq_mul",
    "two_mul_le_add_sq",
    "zpow_add",
    "zpow_add_one",
    "zpow_comm",
    "zpow_eq_zpow_emod",
    "zpow_induction_left",
    "zpow_induction_right",
    "zpow_iterate",
    "zpow_mul",
    "zpow_natCast",
    "zpow_natCast_sub_natCast",
    "zpow_natCast_sub_one",
    "zpow_neg",
    "zpow_negSucc",
    "zpow_neg_coe_of_pos",
    "zpow_neg_one",
    "zpow_ofNat",
    "zpow_one",
    "zpow_one_add",
    "zpow_one_sub_natCast",
    "zpow_sub_one"
}

enum OnelineTactic {
    "simp",
    "field_simp",
    "norm_num",
    "ring",
    "ring_nf",
    "omega",
    "linarith",
    "nlinarith"
}

enum AtTactic {
    "rw",
    "rwhat"
}

enum Place {
    "here",
    "before"
}

enum Int {
    "2",
    "3"
}


enum NULL{
    "NULL"
}

value Empty;
value Stmt;
value Bool;


program Lean() -> Bool;
func use_theorem_tactic: Stmt -> AtTactic, Theorem;
func oneline: Stmt -> OnelineTactic;
func delete: Stmt -> NULL;
func nth_rw: Stmt -> Int;
func unfold: Stmt -> NULL;
func checker: Bool -> Stmt, Place;
func empty: Empty -> Empty;
