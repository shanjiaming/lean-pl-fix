enum Theorem {
    "CommMagma.IsLeftCancelMul.toIsCancelMul",
    "CommMagma.IsLeftCancelMul.toIsRightCancelMul",
    "CommMagma.IsRightCancelMul.toIsCancelMul",
    "CommMagma.IsRightCancelMul.toIsLeftCancelMul",
    "IsGLB.mul_left",
    "IsGLB.mul_right",
    "IsLUB.mul_left",
    "IsLUB.mul_right",
    "MonoidWithZeroHom.ext_nat",
    "Monotone.div_const",
    "MulOneClass.ext",
    "Nat.castRingHom_nat",
    "Nat.cast_id",
    "NeZero.nat_of_neZero",
    "StrictMono.div_const",
    "Subset.antisymm",
    "Subset.antisymm_iff",
    "Subset.refl",
    "Subset.trans",
    "Sum.elim_natCast_natCast",
    "Superset.trans",
    "_root_.Even.natCast",
    "_root_.nsmul_eq_mul",
    "abs_def",
    "abs_div",
    "abs_inv",
    "abs_one_div",
    "add_choose",
    "add_choose_mul_factorial_mul_factorial",
    "add_div_two_lt_right",
    "add_lt_add_iff_left",
    "add_sub_div_two_lt",
    "add_thirds",
    "ascFactorial_eq_factorial_mul_choose",
    "cast_dvd_cast",
    "cast_pow",
    "cauchy_add",
    "cauchy_intCast",
    "cauchy_inv",
    "cauchy_mul",
    "cauchy_natCast",
    "cauchy_neg",
    "cauchy_nnratCast",
    "cauchy_one",
    "cauchy_ratCast",
    "cauchy_sub",
    "cauchy_zero",
    "choose_eq_asc_factorial_div_factorial",
    "choose_eq_choose_pred_add",
    "choose_eq_descFactorial_div_factorial",
    "choose_eq_factorial_div_factorial",
    "choose_eq_zero_iff",
    "choose_eq_zero_of_lt",
    "choose_le_add",
    "choose_le_choose",
    "choose_le_middle",
    "choose_le_succ",
    "choose_le_succ_of_lt_half_left",
    "choose_mono",
    "choose_mul",
    "choose_mul_factorial_mul_factorial",
    "choose_mul_succ_eq",
    "choose_one_right",
    "choose_pos",
    "choose_self",
    "choose_succ_left",
    "choose_succ_right",
    "choose_succ_right_eq",
    "choose_succ_self",
    "choose_succ_self_right",
    "choose_succ_succ",
    "choose_symm",
    "choose_symm_add",
    "choose_symm_half",
    "choose_symm_of_eq_add",
    "choose_two_right",
    "choose_zero_right",
    "choose_zero_succ",
    "coe_castAddMonoidHom",
    "coe_coeEmb",
    "coe_inj",
    "coe_injective",
    "coe_mem",
    "coe_sort_coe",
    "coe_ssubset",
    "coe_subset",
    "comp_mul_left",
    "comp_mul_right",
    "conj_eq_one_iff",
    "descFactorial_eq_factorial_mul_choose",
    "dite_pow",
    "div_div",
    "div_div_cancel",
    "div_div_cancel_left",
    "div_div_div_cancel_left",
    "div_div_div_cancel_right",
    "div_div_div_comm",
    "div_div_div_eq",
    "div_div_eq_mul_div",
    "div_div_self",
    "div_eq_div_iff_comm",
    "div_eq_div_iff_div_eq_div",
    "div_eq_div_iff_mul_eq_mul",
    "div_eq_div_mul_div",
    "div_eq_iff_eq_mul",
    "div_eq_inv_mul",
    "div_eq_inv_self",
    "div_eq_mul_inv",
    "div_eq_mul_one_div",
    "div_eq_of_eq_mul",
    "div_eq_one",
    "div_eq_self",
    "div_inv_eq_mul",
    "div_le_div",
    "div_le_div_iff",
    "div_le_div_left",
    "div_le_div_of_nonpos_of_le",
    "div_le_div_right",
    "div_le_div_right_of_neg",
    "div_le_iff_of_neg",
    "div_le_of_nonneg_of_le_mul",
    "div_le_one",
    "div_le_one_iff",
    "div_le_one_of_ge",
    "div_le_one_of_le",
    "div_le_one_of_neg",
    "div_le_self",
    "div_left_inj",
    "div_left_injective",
    "div_lt_div",
    "div_lt_div_iff",
    "div_lt_div_left",
    "div_lt_div_of_neg_of_lt",
    "div_lt_div_right",
    "div_lt_div_right_of_neg",
    "div_lt_iff",
    "div_lt_iff_of_neg",
    "div_lt_one",
    "div_lt_one_iff",
    "div_lt_one_of_neg",
    "div_lt_self",
    "div_mul",
    "div_mul_cancel",
    "div_mul_cancel_left",
    "div_mul_cancel_right",
    "div_mul_comm",
    "div_mul_div_cancel",
    "div_mul_div_comm",
    "div_mul_eq_div_div",
    "div_mul_eq_div_div_swap",
    "div_mul_eq_div_mul_one_div",
    "div_mul_eq_mul_div",
    "div_mul_le_div_mul_of_div_le_div",
    "div_mul_mul_cancel",
    "div_ne_one",
    "div_ne_one_of_ne",
    "div_neg_iff",
    "div_neg_of_neg_of_pos",
    "div_neg_of_pos_of_neg",
    "div_nonneg_iff",
    "div_nonneg_of_nonpos",
    "div_nonpos_iff",
    "div_one",
    "div_pos_iff",
    "div_pos_of_neg_of_neg",
    "div_pow",
    "div_right_comm",
    "div_right_inj",
    "div_right_injective",
    "div_self",
    "div_two_sub_self",
    "div_zpow",
    "eq_div_iff_mul_eq",
    "eq_div_of_mul_eq",
    "eq_iff_eq_of_div_eq_div",
    "eq_inv_iff_mul_eq_one",
    "eq_inv_mul_iff_mul_eq",
    "eq_inv_mul_of_mul_eq",
    "eq_inv_of_mul_eq_one_left",
    "eq_inv_of_mul_eq_one_right",
    "eq_mul_inv_iff_mul_eq",
    "eq_mul_inv_of_mul_eq",
    "eq_mul_of_div_eq",
    "eq_mul_of_inv_mul_eq",
    "eq_mul_of_mul_inv_eq",
    "eq_natCast",
    "eq_of_div_eq_one",
    "eq_of_inv_mul_eq_one",
    "eq_of_mul_inv_eq_one",
    "eq_of_one_div_eq_one_div",
    "eq_of_veq",
    "eq_one_div_of_mul_eq_one_left",
    "eq_one_div_of_mul_eq_one_right",
    "eq_one_iff_eq_one_of_mul_eq_one",
    "eq_or_lt_of_le",
    "exists_add_lt_and_pos_of_lt",
    "exists_of_ssubset",
    "exists_pos_lt_mul",
    "exists_pos_mul_lt",
    "exists_zpow_surjective",
    "ext",
    "ext_cauchy",
    "ext_cauchy_iff",
    "ext_nat",
    "factorial_dvd_ascFactorial",
    "factorial_dvd_descFactorial",
    "factorial_mul_factorial_dvd_factorial",
    "factorial_mul_factorial_dvd_factorial_add",
    "gt_irrefl",
    "half_le_self_iff",
    "half_lt_self_iff",
    "half_pos",
    "hom_coe_pow",
    "inf_sq_eq_mul_div_mabs_div",
    "inv_antitoneOn_Icc_left",
    "inv_antitoneOn_Icc_right",
    "inv_antitoneOn_Iio",
    "inv_antitoneOn_Ioi",
    "inv_comp_inv",
    "inv_div",
    "inv_div_inv",
    "inv_div_left",
    "inv_eq_iff_eq_inv",
    "inv_eq_iff_mul_eq_one",
    "inv_eq_of_mul_eq_one_left",
    "inv_eq_of_mul_eq_one_right",
    "inv_eq_one",
    "inv_eq_one_div",
    "inv_inj",
    "inv_injective",
    "inv_inv",
    "inv_inv_div_inv",
    "inv_involutive",
    "inv_le",
    "inv_le_inv",
    "inv_le_inv_of_le",
    "inv_le_inv_of_neg",
    "inv_le_of_inv_le",
    "inv_le_of_neg",
    "inv_le_one",
    "inv_le_one_iff",
    "inv_lt",
    "inv_lt_inv",
    "inv_lt_inv_of_lt",
    "inv_lt_inv_of_neg",
    "inv_lt_of_inv_lt",
    "inv_lt_of_neg",
    "inv_lt_one",
    "inv_lt_one_iff",
    "inv_lt_one_iff_of_pos",
    "inv_mul",
    "inv_mul_cancel",
    "inv_mul_cancel_left",
    "inv_mul_cancel_right",
    "inv_mul_eq_div",
    "inv_mul_eq_iff_eq_mul",
    "inv_mul_eq_of_eq_mul",
    "inv_mul_eq_one",
    "inv_mul_le_iff",
    "inv_mul_le_one_of_le",
    "inv_mul_lt_iff",
    "inv_ne_one",
    "inv_one",
    "inv_pos_le_iff_one_le_mul",
    "inv_pos_lt_iff_one_lt_mul",
    "inv_pow",
    "inv_pow_anti",
    "inv_pow_le_inv_pow_of_le",
    "inv_pow_lt_inv_pow_of_lt",
    "inv_pow_strictAnti",
    "inv_pow_sub",
    "inv_strictAntiOn",
    "inv_surjective",
    "inv_unique",
    "inv_zpow",
    "isSolid_solidClosure",
    "ite_mul_one",
    "ite_one_mul",
    "ite_pow",
    "le_antisymm",
    "le_antisymm_iff",
    "le_div_iff_of_neg",
    "le_div_self",
    "le_eq_subset",
    "le_iff_forall_one_lt_le_mul₀",
    "le_iff_lt_or_eq",
    "le_iff_subset",
    "le_inv",
    "le_inv_of_neg",
    "le_mk_of_forall_le",
    "le_mul_of_forall_lt₀",
    "le_of_eq",
    "le_of_eq_or_lt",
    "le_of_forall_sub_le",
    "le_of_lt",
    "le_of_lt_or_eq",
    "le_of_neg_of_one_div_le_one_div",
    "le_of_one_div_le_one_div",
    "le_one_div",
    "le_one_div_of_neg",
    "le_rfl",
    "leftInverse_div_mul_left",
    "leftInverse_inv",
    "leftInverse_inv_mul_mul_right",
    "leftInverse_mul_left_div",
    "leftInverse_mul_right_inv_mul",
    "left_eq_mul",
    "left_lt_add_div_two",
    "left_ne_mul",
    "lt_asymm",
    "lt_cauchy",
    "lt_div_iff",
    "lt_div_iff_of_neg",
    "lt_eq_subset",
    "lt_iff_le_not_le",
    "lt_iff_ssubset",
    "lt_inv",
    "lt_inv_of_neg",
    "lt_irrefl",
    "lt_of_le_not_le",
    "lt_of_le_of_ne",
    "lt_of_neg_of_one_div_lt_one_div",
    "lt_of_one_div_lt_one_div",
    "lt_one_div",
    "lt_one_div_of_neg",
    "lt_or_eq_of_le",
    "m_Birkhoff_inequalities",
    "mabs_div_sup_mul_mabs_div_inf",
    "mabs_mabs_div_mabs_le",
    "mabs_mul_le",
    "map_natCast",
    "map_ofNat",
    "max_div_div_right",
    "max_div_div_right_of_nonpos",
    "mem_coe",
    "mem_def",
    "mem_mk",
    "mem_of_subset",
    "mem_val",
    "min_div_div_right",
    "min_div_div_right_of_nonpos",
    "mk_add",
    "mk_coe",
    "mk_const",
    "mk_eq",
    "mk_inf",
    "mk_le",
    "mk_le_of_forall_le",
    "mk_lt",
    "mk_mul",
    "mk_near_of_forall_near",
    "mk_neg",
    "mk_one",
    "mk_pos",
    "mk_sup",
    "mk_zero",
    "monotone_div_right_of_nonneg",
    "mul_add_one_le_add_one_pow",
    "mul_assoc",
    "mul_comm",
    "mul_comm_div",
    "mul_div",
    "mul_div_assoc",
    "mul_div_cancel",
    "mul_div_cancel_left",
    "mul_div_cancel_right",
    "mul_div_div_cancel",
    "mul_div_left_comm",
    "mul_div_mul_comm",
    "mul_div_mul_left_eq_div",
    "mul_div_mul_right_eq_div",
    "mul_div_right_comm",
    "mul_eq_left",
    "mul_eq_of_eq_div",
    "mul_eq_of_eq_inv_mul",
    "mul_eq_of_eq_mul_inv",
    "mul_eq_one_iff_eq_inv",
    "mul_eq_one_iff_inv_eq",
    "mul_eq_right",
    "mul_inv",
    "mul_inv_cancel",
    "mul_inv_cancel_comm",
    "mul_inv_cancel_left",
    "mul_inv_cancel_right",
    "mul_inv_eq_iff_eq_mul",
    "mul_inv_eq_of_eq_mul",
    "mul_inv_eq_one",
    "mul_inv_le_iff",
    "mul_inv_le_one_of_le",
    "mul_inv_lt_iff",
    "mul_inv_rev",
    "mul_le_mul_of_mul_div_le",
    "mul_le_of_forall_lt_of_nonneg",
    "mul_le_of_nonneg_of_le_div",
    "mul_left_cancel",
    "mul_left_cancel_iff",
    "mul_left_comm",
    "mul_left_inj",
    "mul_left_injective",
    "mul_left_iterate",
    "mul_left_iterate_apply_one",
    "mul_left_surjective",
    "mul_mul_div_cancel",
    "mul_mul_inv_cancel",
    "mul_mul_mul_comm",
    "mul_ne_left",
    "mul_ne_mul_left",
    "mul_ne_mul_right",
    "mul_ne_right",
    "mul_one",
    "mul_one_div",
    "mul_one_eq_id",
    "mul_pow_sub_one",
    "mul_right_cancel",
    "mul_right_cancel_iff",
    "mul_right_comm",
    "mul_right_inj",
    "mul_right_injective",
    "mul_right_iterate",
    "mul_right_iterate_apply_one",
    "mul_right_surjective",
    "mul_rotate",
    "mul_self_inj_of_nonneg",
    "mul_self_zpow",
    "mul_sub_mul_div_mul_neg_iff",
    "mul_sub_mul_div_mul_nonpos_iff",
    "mul_zpow_neg_one",
    "mul_zpow_self",
    "multichoose_eq",
    "multichoose_one",
    "multichoose_one_right",
    "multichoose_succ_succ",
    "multichoose_two",
    "multichoose_zero_right",
    "multichoose_zero_succ",
    "multiplicative_of_isTotal",
    "multiplicative_of_symmetric_of_isTotal",
    "natCast_apply",
    "natCast_def",
    "ne_of_gt",
    "ne_of_lt",
    "negSucc_zsmul",
    "not_le_of_gt",
    "not_le_of_lt",
    "not_lt_of_ge",
    "not_lt_of_le",
    "not_mem_mono",
    "not_subset",
    "npowBinRec.go_spec",
    "npowRec",
    "npowRec_eq",
    "npowRec_eq_npowBinRec",
    "npow_eq_pow",
    "ofCauchy_add",
    "ofCauchy_div",
    "ofCauchy_inf",
    "ofCauchy_intCast",
    "ofCauchy_inv",
    "ofCauchy_mul",
    "ofCauchy_natCast",
    "ofCauchy_neg",
    "ofCauchy_nnratCast",
    "ofCauchy_one",
    "ofCauchy_ratCast",
    "ofCauchy_sub",
    "ofCauchy_sup",
    "ofCauchy_zero",
    "ofNat_apply",
    "ofNat_def",
    "ofRat_rat",
    "one_div",
    "one_div_div",
    "one_div_le",
    "one_div_le_neg_one",
    "one_div_le_of_neg",
    "one_div_le_one_div",
    "one_div_le_one_div_of_le",
    "one_div_le_one_div_of_neg",
    "one_div_le_one_div_of_neg_of_le",
    "one_div_lt",
    "one_div_lt_neg_one",
    "one_div_lt_of_neg",
    "one_div_lt_one_div",
    "one_div_lt_one_div_of_lt",
    "one_div_lt_one_div_of_neg",
    "one_div_lt_one_div_of_neg_of_lt",
    "one_div_mul_eq_div",
    "one_div_mul_one_div",
    "one_div_mul_one_div_rev",
    "one_div_one",
    "one_div_one_div",
    "one_div_pow",
    "one_div_pow_anti",
    "one_div_pow_le_one_div_pow_of_le",
    "one_div_pow_lt_one_div_pow_of_lt",
    "one_div_pow_strictAnti",
    "one_div_strictAntiOn",
    "one_div_zpow",
    "one_eq_inv",
    "one_half_lt_one",
    "one_half_pos",
    "one_le_div",
    "one_le_div_iff",
    "one_le_div_of_neg",
    "one_le_inv",
    "one_le_inv_iff",
    "one_le_one_div",
    "one_lt_div",
    "one_lt_div_iff",
    "one_lt_div_of_neg",
    "one_lt_inv",
    "one_lt_inv_iff",
    "one_lt_one_div",
    "one_mul",
    "one_mul_eq_id",
    "one_zpow",
    "pairwise_subtype_iff_pairwise_finset",
    "pow_add",
    "pow_boole",
    "pow_dite",
    "pow_eq_pow_mod",
    "pow_ite",
    "pow_iterate",
    "pow_mul",
    "pow_mul_comm",
    "pow_mul_pow_sub",
    "pow_natAbs_eq_one",
    "pow_one",
    "pow_right_comm",
    "pow_sub",
    "pow_sub_mul_pow",
    "pow_sub_one_mul",
    "pow_succ",
    "pow_three",
    "pow_zero",
    "ratCast_lt",
    "rightInverse_inv",
    "right_eq_mul",
    "right_ne_mul",
    "setOf_mem",
    "solidClosure_min",
    "ssubset_def",
    "ssubset_iff_of_subset",
    "ssubset_iff_subset_ne",
    "ssubset_of_ssubset_of_subset",
    "ssubset_of_subset_of_ssubset",
    "strictMono_div_right_of_pos",
    "sub_inv_antitoneOn_Icc_left",
    "sub_inv_antitoneOn_Icc_right",
    "sub_inv_antitoneOn_Iio",
    "sub_inv_antitoneOn_Ioi",
    "sub_one_div_inv_le_two",
    "sub_self_div_two",
    "subset_def",
    "subset_iff",
    "subset_of_le",
    "succ_mul_choose_eq",
    "sup_sq_eq_mul_mul_mabs_div",
    "triangle_succ",
    "two_inv_lt_one",
    "uniform_continuous_npow_on_bounded",
    "val_inj",
    "val_injective",
    "val_le_iff",
    "val_lt_iff",
    "val_strictMono",
    "zpow_add",
    "zpow_add_one",
    "zpow_comm",
    "zpow_eq_zpow_emod",
    "zpow_induction_left",
    "zpow_induction_right",
    "zpow_iterate",
    "zpow_mul",
    "zpow_natCast",
    "zpow_natCast_sub_natCast",
    "zpow_natCast_sub_one",
    "zpow_neg",
    "zpow_negSucc",
    "zpow_neg_coe_of_pos",
    "zpow_neg_one",
    "zpow_ofNat",
    "zpow_one",
    "zpow_one_add",
    "zpow_one_sub_natCast",
    "zpow_sub_one"
}

enum OnelineTactic {
    "simp",
    "field_simp",
    "norm_num",
    "ring",
    "ring_nf",
    "omega",
    "linarith",
    "nlinarith"
}

enum AtTactic {
    "rw",
    "rwhat"
}

enum Place {
    "here",
    "before"
}

enum Int {
    "2",
    "3"
}


enum NULL{
    "NULL"
}

value Empty;
value Stmt;
value Bool;


program Lean() -> Bool;
func use_theorem_tactic: Stmt -> AtTactic, Theorem;
func oneline: Stmt -> OnelineTactic;
func delete: Stmt -> NULL;
func nth_rw: Stmt -> Int;
func unfold: Stmt -> NULL;
func checker: Bool -> Stmt, Place;
func empty: Empty -> Empty;
