{
  "selected_library_modules": [
    "Mathlib.Algebra.Group.Basic",
    "Mathlib.Algebra.Group.Defs",
    "Mathlib.Algebra.Group.Even",
    "Mathlib.Algebra.Group.Nat.Even",
    "Mathlib.Algebra.GroupWithZero.Defs",
    "Mathlib.Algebra.Ring.Defs",
    "Mathlib.Algebra.Ring.Parity",
    "Mathlib.Analysis.InnerProductSpace.Defs",
    "Mathlib.Data.Real.Basic",
    "Mathlib.Logic.Basic",
    "Mathlib.Order.Defs.PartialOrder",
    "Mathlib.Order.Defs.Unbundled"
  ],
  "theorems": [
    "And.exists",
    "BAll.imp_left",
    "BAll.imp_right",
    "BEx.elim",
    "BEx.imp_left",
    "BEx.imp_right",
    "BEx.intro",
    "CommMagma.IsLeftCancelMul.toIsCancelMul",
    "CommMagma.IsLeftCancelMul.toIsRightCancelMul",
    "CommMagma.IsRightCancelMul.toIsCancelMul",
    "CommMagma.IsRightCancelMul.toIsLeftCancelMul",
    "Decidable.and_forall_ne",
    "Decidable.eq_or_ne",
    "Decidable.ne_or_eq",
    "Dvd.dvd.even",
    "Eq.rec_eq_cast",
    "Equivalence.reflexive",
    "Equivalence.symmetric",
    "Equivalence.transitive",
    "Even.add_odd",
    "Even.isSquare_pow",
    "Even.isSquare_zpow",
    "Even.neg_one_pow",
    "Even.neg_one_zpow",
    "Even.neg_zpow",
    "Even.odd_add",
    "Even.pow_of_ne_zero",
    "Even.sub_odd",
    "Even.trans_dvd",
    "Exists.fst",
    "Exists.snd",
    "Exists\u2082.imp",
    "Exists\u2083.imp",
    "Fact.elim",
    "Iff.ne_left",
    "Iff.ne_right",
    "Iff.not_left",
    "Iff.not_right",
    "Imp.swap",
    "InvImage.irreflexive",
    "InvImage.trans",
    "IsLeftCancelMulZero.to_isCancelMulZero",
    "IsLeftCancelMulZero.to_isRightCancelMulZero",
    "IsRightCancelMulZero.to_isCancelMulZero",
    "IsRightCancelMulZero.to_isLeftCancelMulZero",
    "IsSquare.div",
    "IsSquare.map",
    "IsSquare.mul",
    "IsSquare.one",
    "IsSquare.sq",
    "Maximal.le_of_ge",
    "Maximal.prop",
    "Minimal.le_of_le",
    "Minimal.prop",
    "MulOneClass.ext",
    "Ne.ne_or_ne",
    "Not.imp_symm",
    "Odd.add_even",
    "Odd.add_odd",
    "Odd.map",
    "Odd.natCast",
    "Odd.neg",
    "Odd.neg_pow",
    "Odd.of_mul_left",
    "Odd.of_mul_right",
    "Odd.pow",
    "Odd.pow_add_pow_eq_zero",
    "Odd.sub_even",
    "Odd.sub_odd",
    "Or.elim3",
    "Or.imp3",
    "Prop.exists_iff",
    "Prop.forall_iff",
    "_root_.Odd.not_two_dvd_nat",
    "add_lt_add_iff_left",
    "add_mul_self_eq",
    "add_one_lt_of_even",
    "add_one_mul",
    "add_sq",
    "and_forall_ne",
    "and_iff_not_or_not",
    "and_or_imp",
    "and_symm_left",
    "and_symm_right",
    "antisymm",
    "antisymm_iff",
    "antisymm_of",
    "apply_dite\u2082",
    "apply_ite\u2082",
    "asymm",
    "beq_eq_decide",
    "beq_ext",
    "bex_def",
    "boole_mul",
    "by_cases",
    "by_contradiction",
    "cast_heq_iff_heq",
    "cauchy_add",
    "cauchy_intCast",
    "cauchy_inv",
    "cauchy_mul",
    "cauchy_natCast",
    "cauchy_neg",
    "cauchy_nnratCast",
    "cauchy_one",
    "cauchy_ratCast",
    "cauchy_schwarz_aux",
    "cauchy_sub",
    "cauchy_zero",
    "choose_eq",
    "comm",
    "comm_of",
    "comp_mul_left",
    "comp_mul_right",
    "congr_arg_heq",
    "congr_arg_refl",
    "congr_fun_congr_arg",
    "congr_fun_rfl",
    "congr_heq",
    "congr_refl_left",
    "congr_refl_right",
    "conj_eq_one_iff",
    "dec_em",
    "distrib_three_right",
    "dite_apply",
    "dite_dite_comm",
    "dite_eq_iff",
    "dite_eq_or_eq",
    "dite_mem",
    "dite_ne_left_iff",
    "dite_ne_right_iff",
    "dite_pow",
    "dite_prop_iff_and",
    "dite_prop_iff_or",
    "div_div",
    "div_div_cancel",
    "div_div_cancel_left",
    "div_div_div_cancel_left",
    "div_div_div_cancel_right",
    "div_div_div_comm",
    "div_div_div_eq",
    "div_div_eq_mul_div",
    "div_div_self",
    "div_eq_div_iff_comm",
    "div_eq_div_iff_div_eq_div",
    "div_eq_div_iff_mul_eq_mul",
    "div_eq_div_mul_div",
    "div_eq_iff_eq_mul",
    "div_eq_inv_mul",
    "div_eq_inv_self",
    "div_eq_mul_inv",
    "div_eq_mul_one_div",
    "div_eq_of_eq_mul",
    "div_eq_one",
    "div_eq_self",
    "div_inv_eq_mul",
    "div_left_inj",
    "div_left_injective",
    "div_mul",
    "div_mul_cancel",
    "div_mul_cancel_left",
    "div_mul_cancel_right",
    "div_mul_comm",
    "div_mul_div_cancel",
    "div_mul_div_comm",
    "div_mul_eq_div_div",
    "div_mul_eq_div_div_swap",
    "div_mul_eq_div_mul_one_div",
    "div_mul_eq_mul_div",
    "div_mul_mul_cancel",
    "div_ne_one",
    "div_ne_one_of_ne",
    "div_one",
    "div_pow",
    "div_right_comm",
    "div_right_inj",
    "div_right_injective",
    "div_self",
    "div_two_mul_two_add_one_of_odd",
    "div_two_mul_two_of_even",
    "div_zpow",
    "em",
    "empty_relation_apply",
    "eqRec_heq",
    "eq_cast_iff_heq",
    "eq_div_iff_mul_eq",
    "eq_div_of_mul_eq",
    "eq_equivalence",
    "eq_false_intro",
    "eq_iff_eq_of_div_eq_div",
    "eq_inv_iff_mul_eq_one",
    "eq_inv_mul_iff_mul_eq",
    "eq_inv_mul_of_mul_eq",
    "eq_inv_of_mul_eq_one_left",
    "eq_inv_of_mul_eq_one_right",
    "eq_ite_iff",
    "eq_mul_inv_iff_mul_eq",
    "eq_mul_inv_of_mul_eq",
    "eq_mul_of_div_eq",
    "eq_mul_of_inv_mul_eq",
    "eq_mul_of_mul_inv_eq",
    "eq_of_div_eq_one",
    "eq_of_inv_mul_eq_one",
    "eq_of_mul_inv_eq_one",
    "eq_of_one_div_eq_one_div",
    "eq_one_div_of_mul_eq_one_left",
    "eq_one_div_of_mul_eq_one_right",
    "eq_one_iff_eq_one_of_mul_eq_one",
    "eq_or_lt_of_le",
    "eq_or_ne",
    "eq_true_intro",
    "eq_zero_or_one_of_sq_eq_self",
    "even_add",
    "even_div",
    "even_iff",
    "even_iff_exists_two_mul",
    "even_iff_two_dvd",
    "even_mul_pred_self",
    "even_mul_succ_self",
    "even_neg_two",
    "even_ofMul_iff",
    "even_or_odd",
    "even_pow",
    "even_sub",
    "even_toAdd_iff",
    "even_two_mul",
    "even_xor_odd",
    "exists_and_exists_comm",
    "exists_apply_eq",
    "exists_apply_eq_apply",
    "exists_apply_eq_apply2",
    "exists_apply_eq_apply3",
    "exists_iff_of_forall",
    "exists_mem_of_exists",
    "exists_mem_or",
    "exists_mem_or_left",
    "exists_of_exists_mem",
    "exists_or_forall_not",
    "exists_prop_of_false",
    "exists_swap",
    "exists_zpow_surjective",
    "exists\u2082_comm",
    "ext_cauchy",
    "ext_cauchy_iff",
    "extensional_of_trichotomous_of_irrefl",
    "fact_iff",
    "forall_and_left",
    "forall_and_right",
    "forall_apply_eq_imp_iff",
    "forall_cond_comm",
    "forall_eq_apply_imp_iff",
    "forall_imp_iff_exists_imp",
    "forall_mem_comm",
    "forall_or_exists_not",
    "forall_or_left",
    "forall_or_of_or_forall",
    "forall_or_right",
    "forall_prop_congr",
    "forall_swap",
    "forall_true_iff",
    "forall\u2082_and",
    "forall\u2082_imp",
    "forall\u2082_or_left",
    "forall\u2082_swap",
    "forall\u2082_true_iff",
    "forall\u2083_imp",
    "forall\u2083_true_iff",
    "gt_irrefl",
    "heq_cast_iff_heq",
    "heq_of_eq_cast",
    "heq_rec_iff_heq",
    "hom_coe_pow",
    "if_congr",
    "if_ctx_congr",
    "iff_eq_eq",
    "iff_iff_and_or_not_and_not",
    "iff_iff_not_or_and_or_not",
    "iff_mpr_iff_true_intro",
    "iff_not_comm",
    "imp_and_neg_imp_iff",
    "imp_congr_ctx_eq",
    "imp_congr_eq",
    "imp_forall_iff",
    "imp_forall_iff_forall",
    "imp_iff_not_or",
    "imp_iff_or_not",
    "imp_iff_right_iff",
    "imp_or",
    "inner_add_add_self",
    "inner_add_left",
    "inner_add_right",
    "inner_conj_symm",
    "inner_im_symm",
    "inner_mul_inner_self_le",
    "inner_mul_symm_re_eq_norm",
    "inner_neg_left",
    "inner_neg_right",
    "inner_re_symm",
    "inner_self_eq_norm_mul_norm",
    "inner_self_eq_zero",
    "inner_self_im",
    "inner_self_ne_zero",
    "inner_self_nonneg",
    "inner_self_ofReal_re",
    "inner_self_of_eq_zero",
    "inner_smul_left",
    "inner_smul_ofReal_left",
    "inner_smul_ofReal_right",
    "inner_smul_right",
    "inner_sub_left",
    "inner_sub_right",
    "inner_sub_sub_self",
    "inner_zero_left",
    "inner_zero_right",
    "inv_comp_inv",
    "inv_div",
    "inv_div_inv",
    "inv_div_left",
    "inv_eq_iff_eq_inv",
    "inv_eq_iff_mul_eq_one",
    "inv_eq_of_mul_eq_one_left",
    "inv_eq_of_mul_eq_one_right",
    "inv_eq_one",
    "inv_eq_one_div",
    "inv_inj",
    "inv_injective",
    "inv_inv",
    "inv_inv_div_inv",
    "inv_involutive",
    "inv_mul",
    "inv_mul_cancel",
    "inv_mul_cancel_left",
    "inv_mul_cancel_right",
    "inv_mul_eq_div",
    "inv_mul_eq_iff_eq_mul",
    "inv_mul_eq_of_eq_mul",
    "inv_mul_eq_one",
    "inv_ne_one",
    "inv_one",
    "inv_pow",
    "inv_pow_sub",
    "inv_surjective",
    "inv_unique",
    "inv_zpow",
    "irrefl",
    "isSquare_iff_exists_sq",
    "isSquare_op_iff",
    "isSquare_toMul_iff",
    "isSquare_unop_iff",
    "ite_and",
    "ite_apply",
    "ite_eq_iff",
    "ite_eq_or_eq",
    "ite_ite_comm",
    "ite_mem",
    "ite_mul_one",
    "ite_ne_left_iff",
    "ite_ne_right_iff",
    "ite_one_mul",
    "ite_or",
    "ite_pow",
    "ite_prop_iff_and",
    "ite_prop_iff_or",
    "ite_zero_mul",
    "ite_zero_mul_ite_zero",
    "iterate_bit0",
    "iterate_bit1",
    "iterate_eq_id",
    "iterate_eq_self",
    "iterate_even",
    "iterate_odd",
    "iterate_two_mul",
    "lawful_beq_subsingleton",
    "le_antisymm",
    "le_antisymm_iff",
    "le_iff_lt_or_eq",
    "le_mk_of_forall_le",
    "le_of_eq",
    "le_of_eq_or_lt",
    "le_of_lt",
    "le_of_lt_or_eq",
    "le_rfl",
    "leftInverse_div_mul_left",
    "leftInverse_inv",
    "leftInverse_inv_mul_mul_right",
    "leftInverse_mul_left_div",
    "leftInverse_mul_right_inv_mul",
    "left_distrib",
    "left_eq_mul",
    "left_ne_mul",
    "lt_asymm",
    "lt_cauchy",
    "lt_iff_le_not_le",
    "lt_irrefl",
    "lt_of_le_not_le",
    "lt_of_le_of_ne",
    "lt_or_eq_of_le",
    "mem_dite",
    "mem_ite",
    "mk_add",
    "mk_const",
    "mk_eq",
    "mk_inf",
    "mk_le",
    "mk_le_of_forall_le",
    "mk_lt",
    "mk_mul",
    "mk_near_of_forall_near",
    "mk_neg",
    "mk_one",
    "mk_pos",
    "mk_sup",
    "mk_zero",
    "mod_two_add_add_odd_mod_two",
    "mul_add_one",
    "mul_add_one_le_add_one_pow",
    "mul_assoc",
    "mul_boole",
    "mul_comm",
    "mul_comm_div",
    "mul_div",
    "mul_div_assoc",
    "mul_div_cancel",
    "mul_div_cancel_left",
    "mul_div_cancel_right",
    "mul_div_div_cancel",
    "mul_div_left_comm",
    "mul_div_mul_comm",
    "mul_div_mul_left_eq_div",
    "mul_div_mul_right_eq_div",
    "mul_div_right_comm",
    "mul_eq_left",
    "mul_eq_of_eq_div",
    "mul_eq_of_eq_inv_mul",
    "mul_eq_of_eq_mul_inv",
    "mul_eq_one_iff_eq_inv",
    "mul_eq_one_iff_inv_eq",
    "mul_eq_right",
    "mul_eq_zero",
    "mul_eq_zero_comm",
    "mul_eq_zero_iff_left",
    "mul_eq_zero_iff_right",
    "mul_eq_zero_of_left",
    "mul_eq_zero_of_right",
    "mul_inv",
    "mul_inv_cancel",
    "mul_inv_cancel_comm",
    "mul_inv_cancel_left",
    "mul_inv_cancel_left\u2080",
    "mul_inv_cancel_right",
    "mul_inv_cancel_right\u2080",
    "mul_inv_eq_iff_eq_mul",
    "mul_inv_eq_of_eq_mul",
    "mul_inv_eq_one",
    "mul_inv_rev",
    "mul_ite_zero",
    "mul_left_cancel",
    "mul_left_cancel_iff",
    "mul_left_cancel\u2080",
    "mul_left_comm",
    "mul_left_inj",
    "mul_left_injective",
    "mul_left_injective\u2080",
    "mul_left_iterate",
    "mul_left_iterate_apply_one",
    "mul_left_surjective",
    "mul_mul_div_cancel",
    "mul_mul_inv_cancel",
    "mul_mul_mul_comm",
    "mul_ne_left",
    "mul_ne_mul_left",
    "mul_ne_mul_right",
    "mul_ne_right",
    "mul_ne_zero_comm",
    "mul_ne_zero_iff",
    "mul_ne_zero_iff_left",
    "mul_ne_zero_iff_right",
    "mul_neg",
    "mul_neg_one",
    "mul_one",
    "mul_one_add",
    "mul_one_div",
    "mul_one_eq_id",
    "mul_one_sub",
    "mul_pow_sub_one",
    "mul_right_cancel",
    "mul_right_cancel_iff",
    "mul_right_cancel\u2080",
    "mul_right_comm",
    "mul_right_inj",
    "mul_right_injective",
    "mul_right_injective\u2080",
    "mul_right_iterate",
    "mul_right_iterate_apply_one",
    "mul_right_surjective",
    "mul_rotate",
    "mul_self_eq_zero",
    "mul_self_ne_zero",
    "mul_self_zpow",
    "mul_sub_left_distrib",
    "mul_sub_one",
    "mul_sub_right_distrib",
    "mul_two",
    "mul_zpow_neg_one",
    "mul_zpow_self",
    "multiplicative_of_isTotal",
    "multiplicative_of_symmetric_of_isTotal",
    "natCast_eq_one_of_odd_of_two_eq_zero",
    "natCast_eq_zero_of_even_of_two_eq_zero",
    "natCast_eq_zero_or_one_of_two_eq_zero",
    "ne_and_eq_iff_right",
    "ne_of_eq_of_ne",
    "ne_of_gt",
    "ne_of_irrefl",
    "ne_of_lt",
    "ne_of_ne_of_eq",
    "ne_of_odd_add",
    "ne_or_eq",
    "ne_zero_of_inner_self_ne_zero",
    "negSucc_zsmul",
    "neg_eq_neg_one_mul",
    "neg_mul",
    "neg_mul_comm",
    "neg_mul_eq_mul_neg",
    "neg_mul_eq_neg_mul",
    "neg_mul_neg",
    "neg_one_mul",
    "neg_one_pow_eq_ite",
    "neg_one_pow_eq_one_iff_even",
    "normSq_eq_zero",
    "normSq_eq_zero_of_eq_zero",
    "norm_eq_sqrt_inner",
    "norm_inner_le_norm",
    "norm_inner_symm",
    "not_and_not_right",
    "not_and_or",
    "not_beq_of_ne",
    "not_even_iff",
    "not_even_two_mul_add_one",
    "not_exists_mem",
    "not_forall_not",
    "not_forall\u2082",
    "not_forall\u2082_of_exists\u2082_not",
    "not_iff",
    "not_iff_comm",
    "not_iff_not",
    "not_imp",
    "not_imp_comm",
    "not_imp_not",
    "not_le_of_gt",
    "not_le_of_lt",
    "not_lt_of_ge",
    "not_lt_of_le",
    "not_ne_iff",
    "not_odd_iff",
    "not_or_of_imp",
    "not_rel_of_subsingleton",
    "npowBinRec.go_spec",
    "npowRec",
    "npowRec_eq",
    "npowRec_eq_npowBinRec",
    "npow_eq_pow",
    "odd_add",
    "odd_add_one",
    "odd_iff",
    "odd_iff_exists_bit1",
    "odd_mul",
    "odd_neg_one",
    "odd_sub",
    "odd_two_mul_add_one",
    "ofCauchy_add",
    "ofCauchy_div",
    "ofCauchy_inf",
    "ofCauchy_intCast",
    "ofCauchy_inv",
    "ofCauchy_mul",
    "ofCauchy_natCast",
    "ofCauchy_neg",
    "ofCauchy_nnratCast",
    "ofCauchy_one",
    "ofCauchy_ratCast",
    "ofCauchy_sub",
    "ofCauchy_sup",
    "ofCauchy_zero",
    "ofRat_rat",
    "ofReal_normSq_eq_inner_self",
    "of_eq",
    "of_not_imp",
    "of_not_not",
    "one_add_div_two_mul_two_of_odd",
    "one_add_mul",
    "one_div",
    "one_div_div",
    "one_div_mul_eq_div",
    "one_div_mul_one_div",
    "one_div_mul_one_div_rev",
    "one_div_one",
    "one_div_one_div",
    "one_div_pow",
    "one_div_zpow",
    "one_eq_inv",
    "one_lt_of_ne_zero_of_even",
    "one_mul",
    "one_mul_eq_id",
    "one_sub_mul",
    "one_zpow",
    "or_congr_left",
    "or_congr_right",
    "or_iff_not_and_not",
    "or_not",
    "or_not_of_imp",
    "peirce",
    "pow_add",
    "pow_boole",
    "pow_dite",
    "pow_eq_pow_mod",
    "pow_ite",
    "pow_iterate",
    "pow_mul",
    "pow_mul_apply_eq_pow_mul",
    "pow_mul_comm",
    "pow_mul_pow_sub",
    "pow_natAbs_eq_one",
    "pow_one",
    "pow_right_comm",
    "pow_sub",
    "pow_sub_mul_pow",
    "pow_sub_one_mul",
    "pow_succ",
    "pow_three",
    "pow_zero",
    "ratCast_lt",
    "re_inner_smul_ofReal_smul_self",
    "rec_heq_iff_heq",
    "rec_heq_of_heq",
    "refl",
    "rel_congr",
    "rel_congr_left",
    "rel_congr_right",
    "rel_of_subsingleton",
    "rightInverse_inv",
    "right_distrib",
    "right_eq_mul",
    "right_ne_mul",
    "some_spec\u2082",
    "sqrt_normSq_eq_norm",
    "sub_one_mul",
    "succ_mod_two_eq_one_iff",
    "succ_mod_two_eq_zero_iff",
    "symm",
    "total_of",
    "trans",
    "trans_trichotomous_left",
    "trans_trichotomous_right",
    "transitive_of_trans",
    "trichotomous",
    "trichotomous_of",
    "two_mul",
    "two_mul_div_two_add_one_of_odd",
    "two_mul_div_two_of_even",
    "two_not_dvd_two_mul_add_one",
    "two_not_dvd_two_mul_sub_one",
    "xor_comm",
    "xor_iff_iff_not",
    "xor_iff_not_iff",
    "xor_iff_or_and_not_and",
    "xor_not_not",
    "zero_eq_mul",
    "zero_eq_mul_self",
    "zero_ne_mul_self",
    "zpow_add",
    "zpow_add_one",
    "zpow_comm",
    "zpow_eq_zpow_emod",
    "zpow_induction_left",
    "zpow_induction_right",
    "zpow_iterate",
    "zpow_mul",
    "zpow_natCast",
    "zpow_natCast_sub_natCast",
    "zpow_natCast_sub_one",
    "zpow_neg",
    "zpow_negSucc",
    "zpow_neg_coe_of_pos",
    "zpow_neg_one",
    "zpow_ofNat",
    "zpow_one",
    "zpow_one_add",
    "zpow_one_sub_natCast",
    "zpow_sub_one"
  ]
}