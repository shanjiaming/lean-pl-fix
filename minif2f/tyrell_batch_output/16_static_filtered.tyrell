enum Theorem {
    "Antitone.const_mul",
    "Antitone.mul",
    "Antitone.mul_const",
    "Antitone.mul_strictAnti",
    "AntitoneOn.const_mul",
    "AntitoneOn.mul",
    "AntitoneOn.mul_const",
    "AntitoneOn.mul_strictAnti",
    "CommMagma.IsLeftCancelMul.toIsCancelMul",
    "CommMagma.IsLeftCancelMul.toIsRightCancelMul",
    "CommMagma.IsRightCancelMul.toIsCancelMul",
    "CommMagma.IsRightCancelMul.toIsLeftCancelMul",
    "Contravariant.MulLECancellable",
    "GroupWithZero.mul_left_injective",
    "GroupWithZero.mul_right_injective",
    "IsUnit.mk0",
    "IsUnit.ring_inverse",
    "Left.mul_le_one",
    "Left.mul_lt_mul",
    "Left.mul_lt_one",
    "Left.mul_lt_one_of_le_of_lt",
    "Left.mul_lt_one_of_lt_of_le",
    "Left.one_le_mul",
    "Left.one_lt_mul",
    "Left.one_lt_mul_of_le_of_lt",
    "Left.one_lt_mul_of_lt_of_le",
    "Monotone.const_mul",
    "Monotone.mul",
    "Monotone.mul_const",
    "Monotone.mul_strictMono",
    "MonotoneOn.const_mul",
    "MonotoneOn.mul",
    "MonotoneOn.mul_const",
    "MonotoneOn.mul_strictMono",
    "MulOneClass.ext",
    "Nat.pos_of_neZero",
    "NeZero.ne",
    "Right.mul_le_one",
    "Right.mul_lt_mul",
    "Right.mul_lt_one",
    "Right.mul_lt_one_of_le_of_lt",
    "Right.mul_lt_one_of_lt_of_le",
    "Right.one_le_mul",
    "Right.one_lt_mul",
    "Right.one_lt_mul_of_le_of_lt",
    "Right.one_lt_mul_of_lt_of_le",
    "Ring.inverse_eq_inv",
    "SMul.smul_eq_hSMul",
    "StrictAnti.const_mul",
    "StrictAnti.mul",
    "StrictAnti.mul_antitone",
    "StrictAnti.mul_const",
    "StrictAntiOn.const_mul",
    "StrictAntiOn.mul",
    "StrictAntiOn.mul_antitone",
    "StrictAntiOn.mul_const",
    "StrictMono.const_mul",
    "StrictMono.mul",
    "StrictMono.mul_const",
    "StrictMono.mul_monotone",
    "StrictMonoOn.const_mul",
    "StrictMonoOn.mul",
    "StrictMonoOn.mul_const",
    "StrictMonoOn.mul_monotone",
    "Units.mk0_mul",
    "_root_.GroupWithZero.eq_zero_or_unit",
    "add_lt_add_iff_left",
    "add_mul_self_eq",
    "add_one_mul",
    "add_sq",
    "bit0_add",
    "bit0_eq_two_mul",
    "bit0_mono",
    "bit0_neg",
    "bit0_strictMono",
    "bit0_zero",
    "bit1_add",
    "bit1_zero",
    "boole_mul",
    "bot_eq_one",
    "cauchy_add",
    "cauchy_intCast",
    "cauchy_inv",
    "cauchy_mul",
    "cauchy_natCast",
    "cauchy_neg",
    "cauchy_nnratCast",
    "cauchy_one",
    "cauchy_ratCast",
    "cauchy_sub",
    "cauchy_zero",
    "cmp_mul_left",
    "cmp_mul_right",
    "comp_mul_left",
    "comp_mul_right",
    "conj_eq_one_iff",
    "distrib_three_right",
    "dite_pow",
    "div_div",
    "div_div_cancel",
    "div_div_cancel_left",
    "div_div_div_cancel_left",
    "div_div_div_cancel_right",
    "div_div_div_comm",
    "div_div_div_eq",
    "div_div_eq_mul_div",
    "div_div_self",
    "div_eq_div_iff_comm",
    "div_eq_div_iff_div_eq_div",
    "div_eq_div_iff_mul_eq_mul",
    "div_eq_div_mul_div",
    "div_eq_iff_eq_mul",
    "div_eq_iff_mul_eq",
    "div_eq_inv_mul",
    "div_eq_inv_self",
    "div_eq_mul_inv",
    "div_eq_mul_one_div",
    "div_eq_of_eq_mul",
    "div_eq_one",
    "div_eq_one_iff_eq",
    "div_eq_self",
    "div_eq_zero_iff",
    "div_helper",
    "div_inv_eq_mul",
    "div_left_inj",
    "div_left_injective",
    "div_mul",
    "div_mul_cancel",
    "div_mul_cancel_left",
    "div_mul_cancel_left₀",
    "div_mul_cancel_of_imp",
    "div_mul_cancel_right",
    "div_mul_cancel_right₀",
    "div_mul_comm",
    "div_mul_div_cancel",
    "div_mul_div_comm",
    "div_mul_eq_div_div",
    "div_mul_eq_div_div_swap",
    "div_mul_eq_div_mul_one_div",
    "div_mul_eq_mul_div",
    "div_mul_eq_mul_div₀",
    "div_mul_left",
    "div_mul_mul_cancel",
    "div_mul_right",
    "div_ne_one",
    "div_ne_one_of_ne",
    "div_ne_zero",
    "div_ne_zero_iff",
    "div_one",
    "div_pow",
    "div_right_comm",
    "div_right_inj",
    "div_right_injective",
    "div_self",
    "div_self_mul_self",
    "div_sq_cancel",
    "div_zero",
    "div_zpow",
    "eq_div_iff_mul_eq",
    "eq_div_of_mul_eq",
    "eq_iff_eq_of_div_eq_div",
    "eq_inv_iff_mul_eq_one",
    "eq_inv_mul_iff_mul_eq",
    "eq_inv_mul_iff_mul_eq₀",
    "eq_inv_mul_of_mul_eq",
    "eq_inv_of_mul_eq_one_left",
    "eq_inv_of_mul_eq_one_right",
    "eq_mul_inv_iff_mul_eq",
    "eq_mul_inv_iff_mul_eq₀",
    "eq_mul_inv_of_mul_eq",
    "eq_mul_inverse_iff_mul_eq",
    "eq_mul_of_div_eq",
    "eq_mul_of_inv_mul_eq",
    "eq_mul_of_inv_mul_eq₀",
    "eq_mul_of_mul_inv_eq",
    "eq_mul_of_mul_inv_eq₀",
    "eq_of_div_eq_one",
    "eq_of_inv_mul_eq_one",
    "eq_of_mul_inv_eq_one",
    "eq_of_one_div_eq_one_div",
    "eq_of_zero_eq_one",
    "eq_one_div_of_mul_eq_one_left",
    "eq_one_div_of_mul_eq_one_right",
    "eq_one_iff_eq_one_of_mul_eq_one",
    "eq_one_of_mul_le_one_left",
    "eq_one_of_mul_le_one_right",
    "eq_one_of_one_le_mul_left",
    "eq_one_of_one_le_mul_right",
    "eq_one_or_one_lt",
    "eq_zero_of_mul_eq_self_left",
    "eq_zero_of_mul_eq_self_right",
    "eq_zero_of_mul_self_eq_zero",
    "eq_zero_of_one_div_eq_zero",
    "eq_zero_of_zero_eq_one",
    "eq_zero_of_zpow_eq_zero",
    "eq_zero_or_neZero",
    "exists0",
    "exists_iff_ne_zero",
    "exists_one_lt_mul_of_lt",
    "exists_pow_eq_one_of_zpow_eq_one",
    "exists_square_le",
    "ext_cauchy",
    "ext_cauchy_iff",
    "four_ne_zero",
    "inv_comp_inv",
    "inv_div",
    "inv_div_inv",
    "inv_div_left",
    "inv_eq_iff_eq_inv",
    "inv_eq_iff_mul_eq_one",
    "inv_eq_of_mul_eq_one_left",
    "inv_eq_of_mul_eq_one_right",
    "inv_eq_one",
    "inv_eq_one_div",
    "inv_eq_zero",
    "inv_inj",
    "inv_injective",
    "inv_inv",
    "inv_inv_div_inv",
    "inv_involutive",
    "inv_mul",
    "inv_mul_cancel_left",
    "inv_mul_cancel_left₀",
    "inv_mul_cancel_right",
    "inv_mul_cancel_right₀",
    "inv_mul_eq_div",
    "inv_mul_eq_iff_eq_mul",
    "inv_mul_eq_iff_eq_mul₀",
    "inv_mul_eq_of_eq_mul",
    "inv_mul_eq_one",
    "inv_mul_eq_one₀",
    "inv_mul_mul_self",
    "inv_mul_self",
    "inv_ne_one",
    "inv_one",
    "inv_pow",
    "inv_pow_sub",
    "inv_pow_sub_of_lt",
    "inv_pow_sub₀",
    "inv_surjective",
    "inv_unique",
    "inv_zpow",
    "inverse_mul_cancel",
    "inverse_mul_cancel_left",
    "inverse_mul_cancel_right",
    "inverse_mul_eq_iff_eq_mul",
    "inverse_non_unit",
    "inverse_one",
    "inverse_unit",
    "inverse_zero",
    "isUnit_iff_ne_zero",
    "isUnit_ring_inverse",
    "isUnit_zero_iff",
    "ite_add_ite",
    "ite_mul",
    "ite_mul_one",
    "ite_one_mul",
    "ite_pow",
    "ite_sub_ite",
    "ite_zero_mul",
    "ite_zero_mul_ite_zero",
    "le_iff_exists_mul",
    "le_iff_forall_one_lt_lt_mul",
    "le_mk_of_forall_le",
    "le_mul_iff_one_le_left",
    "le_mul_iff_one_le_right",
    "le_mul_left",
    "le_mul_of_le_left",
    "le_mul_of_le_mul_left",
    "le_mul_of_le_mul_right",
    "le_mul_of_le_of_one_le",
    "le_mul_of_le_right",
    "le_mul_of_one_le_left",
    "le_mul_of_one_le_of_le",
    "le_mul_of_one_le_right",
    "le_mul_right",
    "le_mul_self",
    "le_of_forall_one_lt_le_mul",
    "le_of_forall_one_lt_lt_mul",
    "le_of_le_mul_of_le_one_left",
    "le_of_le_mul_of_le_one_right",
    "le_of_mul_le_left",
    "le_of_mul_le_mul_left",
    "le_of_mul_le_mul_right",
    "le_of_mul_le_of_one_le_left",
    "le_of_mul_le_of_one_le_right",
    "le_of_mul_le_right",
    "le_one_iff_eq_one",
    "le_one_of_mul_le_left",
    "le_one_of_mul_le_right",
    "le_self_mul",
    "leftInverse_div_mul_left",
    "leftInverse_inv",
    "leftInverse_inv_mul_mul_right",
    "leftInverse_mul_left_div",
    "leftInverse_mul_right_inv_mul",
    "left_distrib",
    "left_eq_mul₀",
    "left_ne_zero_of_mul",
    "left_ne_zero_of_mul_eq_one",
    "lt_cauchy",
    "lt_iff_exists_mul",
    "lt_mul_iff_one_lt_left",
    "lt_mul_iff_one_lt_right",
    "lt_mul_of_le_of_one_lt",
    "lt_mul_of_lt_mul_left",
    "lt_mul_of_lt_mul_right",
    "lt_mul_of_lt_of_one_le",
    "lt_mul_of_lt_of_one_lt",
    "lt_mul_of_one_le_of_lt",
    "lt_mul_of_one_lt_left",
    "lt_mul_of_one_lt_of_le",
    "lt_mul_of_one_lt_of_lt",
    "lt_mul_of_one_lt_right",
    "lt_of_lt_mul_of_le_one_left",
    "lt_of_lt_mul_of_le_one_right",
    "lt_of_mul_lt_mul_left",
    "lt_of_mul_lt_mul_right",
    "lt_of_mul_lt_of_one_le_left",
    "lt_of_mul_lt_of_one_le_right",
    "lt_one_of_mul_lt_left",
    "lt_one_of_mul_lt_right",
    "max_mul_mul_le_max_mul_max",
    "min_mul_distrib",
    "min_mul_min_le_min_mul_mul",
    "min_one",
    "mk0_inj",
    "mk0_one",
    "mk0_val",
    "mk_add",
    "mk_eq",
    "mk_inf",
    "mk_le",
    "mk_le_of_forall_le",
    "mk_lt",
    "mk_mul",
    "mk_near_of_forall_near",
    "mk_neg",
    "mk_one",
    "mk_pos",
    "mk_sup",
    "mk_zero",
    "mulLECancellable_one",
    "mul_add_one",
    "mul_assoc",
    "mul_boole",
    "mul_comm",
    "mul_comm_div",
    "mul_div",
    "mul_div_assoc",
    "mul_div_cancel",
    "mul_div_cancel_left",
    "mul_div_cancel_left_of_imp",
    "mul_div_cancel_of_imp",
    "mul_div_cancel_right",
    "mul_div_cancel₀",
    "mul_div_div_cancel",
    "mul_div_left_comm",
    "mul_div_mul_comm",
    "mul_div_mul_left",
    "mul_div_mul_left_eq_div",
    "mul_div_mul_right",
    "mul_div_mul_right_eq_div",
    "mul_div_right_comm",
    "mul_eq_left₀",
    "mul_eq_mul_left_iff",
    "mul_eq_mul_of_div_eq_div",
    "mul_eq_mul_right_iff",
    "mul_eq_of_eq_div",
    "mul_eq_of_eq_inv_mul",
    "mul_eq_of_eq_inv_mul₀",
    "mul_eq_of_eq_mul_inv",
    "mul_eq_of_eq_mul_inv₀",
    "mul_eq_one_iff",
    "mul_eq_one_iff_eq_inv",
    "mul_eq_one_iff_eq_inv₀",
    "mul_eq_one_iff_inv_eq",
    "mul_eq_one_iff_inv_eq₀",
    "mul_eq_right₀",
    "mul_eq_zero_of_ne_zero_imp_eq_zero",
    "mul_inv",
    "mul_inv_cancel_comm",
    "mul_inv_cancel_left",
    "mul_inv_cancel_right",
    "mul_inv_eq_iff_eq_mul",
    "mul_inv_eq_iff_eq_mul₀",
    "mul_inv_eq_of_eq_mul",
    "mul_inv_eq_one",
    "mul_inv_eq_one₀",
    "mul_inv_mul_self",
    "mul_inv_rev",
    "mul_inv_self",
    "mul_inverse_cancel",
    "mul_inverse_cancel_left",
    "mul_inverse_cancel_right",
    "mul_ite",
    "mul_ite_zero",
    "mul_le_iff_le_one_left",
    "mul_le_iff_le_one_right",
    "mul_le_mul",
    "mul_le_mul_iff_left",
    "mul_le_mul_iff_right",
    "mul_le_mul_left",
    "mul_le_mul_right",
    "mul_le_mul_three",
    "mul_le_of_le_of_le_one",
    "mul_le_of_le_one_left",
    "mul_le_of_le_one_of_le",
    "mul_le_of_le_one_right",
    "mul_le_of_mul_le_left",
    "mul_le_of_mul_le_right",
    "mul_left_cancel",
    "mul_left_cancel_iff",
    "mul_left_comm",
    "mul_left_eq_self",
    "mul_left_eq_self₀",
    "mul_left_eq_zero",
    "mul_left_inj",
    "mul_left_injective",
    "mul_left_inv",
    "mul_left_ne_self",
    "mul_left_surjective",
    "mul_left_surjective₀",
    "mul_lt_iff_lt_one_left",
    "mul_lt_iff_lt_one_right",
    "mul_lt_mul_iff_left",
    "mul_lt_mul_iff_right",
    "mul_lt_mul_left",
    "mul_lt_mul_of_le_of_lt",
    "mul_lt_mul_of_lt_of_le",
    "mul_lt_mul_of_lt_of_lt",
    "mul_lt_mul_right",
    "mul_lt_of_le_of_lt_one",
    "mul_lt_of_le_one_of_lt",
    "mul_lt_of_lt_of_le_one",
    "mul_lt_of_lt_of_lt_one",
    "mul_lt_of_lt_one_left",
    "mul_lt_of_lt_one_of_le",
    "mul_lt_of_lt_one_of_lt",
    "mul_lt_of_lt_one_right",
    "mul_lt_of_mul_lt_left",
    "mul_lt_of_mul_lt_right",
    "mul_mul_div",
    "mul_mul_div_cancel",
    "mul_mul_inv_cancel",
    "mul_mul_mul_comm",
    "mul_ne_mul_left",
    "mul_ne_mul_right",
    "mul_ne_zero",
    "mul_neg",
    "mul_neg_one",
    "mul_one",
    "mul_one_add",
    "mul_one_div",
    "mul_one_div_cancel",
    "mul_one_eq_id",
    "mul_one_sub",
    "mul_pow_sub_one",
    "mul_right_cancel",
    "mul_right_cancel_iff",
    "mul_right_comm",
    "mul_right_eq_self",
    "mul_right_eq_self₀",
    "mul_right_eq_zero",
    "mul_right_inj",
    "mul_right_injective",
    "mul_right_inv",
    "mul_right_ne_self",
    "mul_right_surjective",
    "mul_right_surjective₀",
    "mul_rotate",
    "mul_self_div_self",
    "mul_self_mul_inv",
    "mul_self_zpow",
    "mul_sub_left_distrib",
    "mul_sub_one",
    "mul_sub_right_distrib",
    "mul_two",
    "mul_zero_eq_const",
    "mul_zpow_neg_one",
    "mul_zpow_self",
    "multiplicative_of_isTotal",
    "multiplicative_of_symmetric_of_isTotal",
    "neZero_iff",
    "ne_zero",
    "ne_zero_and_ne_zero_of_mul",
    "ne_zero_of_eq_one",
    "ne_zero_of_one_div_ne_zero",
    "ne_zero_pow",
    "negSucc_zsmul",
    "neg_eq_neg_one_mul",
    "neg_mul",
    "neg_mul_comm",
    "neg_mul_eq_mul_neg",
    "neg_mul_eq_neg_mul",
    "neg_mul_neg",
    "neg_one_mul",
    "not_isUnit_zero",
    "not_neZero",
    "npow_eq_pow",
    "ofCauchy_add",
    "ofCauchy_div",
    "ofCauchy_inf",
    "ofCauchy_intCast",
    "ofCauchy_inv",
    "ofCauchy_mul",
    "ofCauchy_natCast",
    "ofCauchy_neg",
    "ofCauchy_nnratCast",
    "ofCauchy_one",
    "ofCauchy_ratCast",
    "ofCauchy_sub",
    "ofCauchy_sup",
    "ofCauchy_zero",
    "ofRat_rat",
    "of_gt",
    "of_pos",
    "one_add_mul",
    "one_div",
    "one_div_div",
    "one_div_mul_cancel",
    "one_div_mul_eq_div",
    "one_div_mul_one_div",
    "one_div_mul_one_div_rev",
    "one_div_ne_zero",
    "one_div_one",
    "one_div_one_div",
    "one_div_pow",
    "one_div_zpow",
    "one_eq_inv",
    "one_le",
    "one_le_of_le_mul_left",
    "one_le_of_le_mul_right",
    "one_lt_iff_ne_one",
    "one_lt_mul_iff",
    "one_lt_of_lt_mul_left",
    "one_lt_of_lt_mul_right",
    "one_min",
    "one_mul",
    "one_mul_eq_id",
    "one_ne_zero",
    "one_sub_mul",
    "one_zpow",
    "pos",
    "pos_of_gt",
    "pow_add",
    "pow_boole",
    "pow_dite",
    "pow_eq_pow_mod",
    "pow_eq_zero",
    "pow_eq_zero_of_le",
    "pow_ite",
    "pow_mul",
    "pow_mul_comm",
    "pow_mul_pow_sub",
    "pow_natAbs_eq_one",
    "pow_ne_zero",
    "pow_ne_zero_iff",
    "pow_one",
    "pow_right_comm",
    "pow_sub",
    "pow_sub_mul_pow",
    "pow_sub_of_lt",
    "pow_sub_one_mul",
    "pow_sub₀",
    "pow_succ",
    "pow_three",
    "pow_zero",
    "ratCast_lt",
    "rightInverse_inv",
    "right_distrib",
    "right_eq_mul₀",
    "right_ne_zero_of_mul",
    "right_ne_zero_of_mul_eq_one",
    "self_eq_mul_left",
    "self_eq_mul_right",
    "self_le_mul_left",
    "self_le_mul_right",
    "self_ne_mul_left",
    "self_ne_mul_right",
    "sq_eq_zero_iff",
    "sub_one_mul",
    "subsingleton_iff_zero_eq_one",
    "three_ne_zero",
    "two_mul",
    "two_ne_zero",
    "val_mk0",
    "zero_div",
    "zero_eq_inv",
    "zero_mul_eq_const",
    "zero_ne_one",
    "zero_ne_one_or_forall_eq_0",
    "zero_pow_eq",
    "zero_pow_eq_zero",
    "zero_zpow",
    "zero_zpow_eq",
    "zpow_add",
    "zpow_add_one",
    "zpow_add_one₀",
    "zpow_add₀",
    "zpow_eq_zero_iff",
    "zpow_eq_zpow_emod",
    "zpow_induction_left",
    "zpow_induction_right",
    "zpow_mul",
    "zpow_natCast",
    "zpow_ne_zero",
    "zpow_ne_zero_iff",
    "zpow_neg",
    "zpow_negSucc",
    "zpow_neg_coe_of_pos",
    "zpow_neg_mul_zpow_self",
    "zpow_neg_one",
    "zpow_ofNat",
    "zpow_one",
    "zpow_one_add",
    "zpow_one_add₀",
    "zpow_sub_one",
    "zpow_sub_one₀",
    "zpow_sub₀"
}

enum OnelineTactic {
    "simp",
    "field_simp",
    "norm_num",
    "ring",
    "ring_nf",
    "omega",
    "linarith",
    "nlinarith"
}

enum AtTactic {
    "rw",
    "rwhat"
}

value Empty;
value Str;
value Bool;

program Lean() -> Bool;
func use_theorem_tactic: Str -> AtTactic, Theorem;
func oneline: Str -> OnelineTactic;
func checker: Bool -> Str;
func empty: Empty -> Empty;
