enum Theorem {
    "And.exists",
    "BAll.imp_left",
    "BAll.imp_right",
    "BEx.elim",
    "BEx.imp_left",
    "BEx.imp_right",
    "BEx.intro",
    "Continuous.sqrt",
    "ContinuousOn.sqrt",
    "Decidable.and_forall_ne",
    "Decidable.eq_or_ne",
    "Decidable.ne_or_eq",
    "Eq.rec_eq_cast",
    "Even.mod_even",
    "Even.mod_even_iff",
    "Even.pow_abs",
    "Exists.fst",
    "Exists.snd",
    "ExistsUnique.elim₂",
    "ExistsUnique.exists₂",
    "ExistsUnique.intro₂",
    "ExistsUnique.unique₂",
    "Exists₂.imp",
    "Exists₃.imp",
    "Fact.elim",
    "Filter.Tendsto.sqrt",
    "Iff.ne_left",
    "Iff.ne_right",
    "Iff.not_left",
    "Iff.not_right",
    "Imp.swap",
    "Ne.ne_or_ne",
    "Not.imp_symm",
    "Odd.mod_even",
    "Odd.mod_even_iff",
    "Odd.ne_two_of_dvd_nat",
    "Odd.of_dvd_nat",
    "Or.elim3",
    "Or.imp3",
    "PLift.down_injective",
    "Prop.exists_iff",
    "Prop.forall_iff",
    "ULift.down_injective",
    "abs_abs_sub_abs_le_abs_sub",
    "abs_add",
    "abs_add_three",
    "abs_cases",
    "abs_def",
    "abs_dvd",
    "abs_dvd_abs",
    "abs_dvd_self",
    "abs_eq",
    "abs_eq_iff_mul_self_eq",
    "abs_eq_neg_self",
    "abs_eq_self",
    "abs_le",
    "abs_le_iff_mul_self_le",
    "abs_le_max_abs_abs",
    "abs_le_of_sq_le_sq",
    "abs_le_one_iff_mul_self_le_one",
    "abs_le_sqrt",
    "abs_lt_iff_mul_self_lt",
    "abs_lt_of_sq_lt_sq",
    "abs_max_le_max_abs_abs",
    "abs_min_le_max_abs_abs",
    "abs_mul",
    "abs_mul_self",
    "abs_neg_one_pow",
    "abs_pow",
    "abs_pow_eq_one",
    "abs_sq",
    "abs_sub",
    "abs_sub_abs_le_abs_sub",
    "abs_sub_le",
    "abs_sub_le_iff",
    "abs_sub_le_of_nonneg_of_le",
    "abs_sub_lt_iff",
    "abs_sub_lt_of_nonneg_of_lt",
    "abs_sub_nonpos",
    "abs_sub_pos",
    "abs_sub_sq",
    "abs_two",
    "add_lt_add_iff_left",
    "and_forall_ne",
    "and_iff_not_or_not",
    "and_or_imp",
    "and_symm_left",
    "and_symm_right",
    "apply_abs_le_mul_of_one_le",
    "apply_dite₂",
    "apply_ite₂",
    "ball_of_forall",
    "beq_eq_decide",
    "beq_ext",
    "bex_def",
    "bex_eq_left",
    "bit0_add",
    "bit0_neg",
    "bit0_zero",
    "bit1_add",
    "bit1_zero",
    "by_cases",
    "by_contradiction",
    "cauchy_add",
    "cauchy_intCast",
    "cauchy_inv",
    "cauchy_mul",
    "cauchy_natCast",
    "cauchy_neg",
    "cauchy_nnratCast",
    "cauchy_one",
    "cauchy_ratCast",
    "cauchy_sub",
    "cauchy_zero",
    "closure_singleton",
    "coe_sqrt",
    "comp_mul_left",
    "comp_mul_right",
    "congr_arg_heq",
    "congr_arg_refl",
    "congr_fun_congr_arg",
    "congr_fun_rfl",
    "congr_heq",
    "congr_refl_left",
    "congr_refl_right",
    "conj_eq_one_iff",
    "continuous_iff_Ici",
    "continuous_iff_Iic",
    "continuous_of_Iic",
    "continuous_sqrt",
    "dec_em",
    "dist_bdd_within_interval",
    "dite_apply",
    "dite_dite_comm",
    "dite_eq_iff",
    "dite_eq_or_eq",
    "dite_ne_left_iff",
    "dite_ne_right_iff",
    "dite_pow",
    "dite_prop_iff_and",
    "dite_prop_iff_or",
    "div_div",
    "div_div_cancel",
    "div_div_cancel_left",
    "div_div_div_cancel_left",
    "div_div_div_cancel_right",
    "div_div_div_comm",
    "div_div_div_eq",
    "div_div_eq_mul_div",
    "div_div_self",
    "div_eq_div_iff_comm",
    "div_eq_div_iff_div_eq_div",
    "div_eq_div_iff_mul_eq_mul",
    "div_eq_div_mul_div",
    "div_eq_iff_eq_mul",
    "div_eq_inv_mul",
    "div_eq_inv_self",
    "div_eq_mul_one_div",
    "div_eq_of_eq_mul",
    "div_eq_one",
    "div_eq_self",
    "div_inv_eq_mul",
    "div_left_inj",
    "div_left_injective",
    "div_mul",
    "div_mul_cancel",
    "div_mul_cancel_left",
    "div_mul_cancel_right",
    "div_mul_comm",
    "div_mul_div_cancel",
    "div_mul_div_comm",
    "div_mul_eq_div_div",
    "div_mul_eq_div_div_swap",
    "div_mul_eq_div_mul_one_div",
    "div_mul_eq_mul_div",
    "div_mul_mul_cancel",
    "div_ne_one",
    "div_ne_one_of_ne",
    "div_one",
    "div_pow",
    "div_right_comm",
    "div_right_inj",
    "div_right_injective",
    "div_self",
    "div_sqrt",
    "div_zpow",
    "dvd_abs",
    "em",
    "eqRec_heq",
    "eq_div_iff_mul_eq",
    "eq_div_of_mul_eq",
    "eq_equivalence",
    "eq_false_intro",
    "eq_iff_eq_of_div_eq_div",
    "eq_inv_iff_mul_eq_one",
    "eq_inv_mul_iff_mul_eq",
    "eq_inv_mul_of_mul_eq",
    "eq_inv_of_mul_eq_one_right",
    "eq_ite_iff",
    "eq_mul_inv_iff_mul_eq",
    "eq_mul_inv_of_mul_eq",
    "eq_mul_of_div_eq",
    "eq_mul_of_inv_mul_eq",
    "eq_mul_of_mul_inv_eq",
    "eq_of_abs_sub_eq_zero",
    "eq_of_abs_sub_nonpos",
    "eq_of_div_eq_one",
    "eq_of_inv_mul_eq_one",
    "eq_of_mul_inv_eq_one",
    "eq_of_one_div_eq_one_div",
    "eq_one_div_of_mul_eq_one_left",
    "eq_one_div_of_mul_eq_one_right",
    "eq_one_iff_eq_one_of_mul_eq_one",
    "eq_or_ne",
    "eq_true_intro",
    "exists_abs_lt",
    "exists_apply_eq",
    "exists_apply_eq_apply",
    "exists_apply_eq_apply2",
    "exists_apply_eq_apply3",
    "exists_iff_of_forall",
    "exists_mem_of_exists",
    "exists_mem_or",
    "exists_mem_or_left",
    "exists_of_exists_mem",
    "exists_or_forall_not",
    "exists_pow_eq_one_of_zpow_eq_one",
    "exists_prop_congr",
    "exists_prop_of_false",
    "exists_prop_of_true",
    "exists_swap",
    "exists_unique_const",
    "exists_unique_prop",
    "exists_unique_prop_of_true",
    "exists₂_comm",
    "exists₂_imp",
    "ext_cauchy",
    "ext_cauchy_iff",
    "fact_iff",
    "floor_real_sqrt_eq_nat_sqrt",
    "forall_apply_eq_imp_iff",
    "forall_cond_comm",
    "forall_eq_apply_imp_iff",
    "forall_imp_iff_exists_imp",
    "forall_mem_comm",
    "forall_of_ball",
    "forall_or_exists_not",
    "forall_or_left",
    "forall_or_of_or_forall",
    "forall_or_right",
    "forall_prop_congr",
    "forall_swap",
    "forall_true_iff",
    "forall₂_and",
    "forall₂_imp",
    "forall₂_or_left",
    "forall₂_swap",
    "forall₂_true_iff",
    "forall₃_imp",
    "forall₃_true_iff",
    "heq_rec_iff_heq",
    "iff_eq_eq",
    "iff_iff_and_or_not_and_not",
    "iff_iff_not_or_and_or_not",
    "iff_mpr_iff_true_intro",
    "iff_not_comm",
    "imp_and_neg_imp_iff",
    "imp_congr_ctx_eq",
    "imp_congr_eq",
    "imp_forall_iff",
    "imp_iff_not_or",
    "imp_iff_or_not",
    "imp_iff_right_iff",
    "imp_or",
    "inf_sq_eq_mul_div_mabs_div",
    "inv_comp_inv",
    "inv_div",
    "inv_div_inv",
    "inv_div_left",
    "inv_eq_iff_eq_inv",
    "inv_eq_iff_mul_eq_one",
    "inv_eq_one",
    "inv_eq_one_div",
    "inv_inj",
    "inv_injective",
    "inv_inv_div_inv",
    "inv_involutive",
    "inv_mul",
    "inv_mul_eq_div",
    "inv_mul_eq_iff_eq_mul",
    "inv_mul_eq_of_eq_mul",
    "inv_mul_eq_one",
    "inv_ne_one",
    "inv_pow",
    "inv_pow_sub",
    "inv_sign",
    "inv_surjective",
    "inv_unique",
    "inv_zpow",
    "isClosed_lowerClosure",
    "isClosed_upperClosure",
    "isLowerSet_of_isClosed",
    "isLowerSet_of_isOpen",
    "isLower_orderDual",
    "isOpen_def",
    "isOpen_iff_generate_Ici_compl",
    "isOpen_iff_generate_Iic_compl",
    "isOpen_preimage_ofLower",
    "isOpen_preimage_ofUpper",
    "isSolid_solidClosure",
    "isUpperSet_of_isClosed",
    "isUpperSet_of_isOpen",
    "isUpper_orderDual",
    "ite_and",
    "ite_apply",
    "ite_eq_iff",
    "ite_eq_or_eq",
    "ite_ite_comm",
    "ite_mul_one",
    "ite_ne_left_iff",
    "ite_ne_right_iff",
    "ite_one_mul",
    "ite_pow",
    "ite_prop_iff_and",
    "ite_prop_iff_or",
    "lawful_beq_subsingleton",
    "le_abs",
    "le_mk_of_forall_le",
    "le_of_abs_le",
    "le_sqrt",
    "le_sqrt_iff_sq_le",
    "le_sqrt_of_sq_le",
    "leftInverse_div_mul_left",
    "leftInverse_inv",
    "leftInverse_inv_mul_mul_right",
    "leftInverse_mul_left_div",
    "leftInverse_mul_right_inv_mul",
    "lt_add_one",
    "lt_cauchy",
    "lt_of_le_of_ne",
    "lt_one_add",
    "lt_sq_of_sqrt_lt",
    "lt_sqrt",
    "lt_sqrt_of_sq_lt",
    "m_Birkhoff_inequalities",
    "mabs_div_sup_mul_mabs_div_inf",
    "mabs_mabs_div_mabs_le",
    "mabs_mul_le",
    "max_zero_add_max_neg_zero_eq_abs_self",
    "min_abs_abs_le_abs_max",
    "min_abs_abs_le_abs_min",
    "mk_add",
    "mk_eq",
    "mk_inf",
    "mk_le",
    "mk_le_of_forall_le",
    "mk_lt",
    "mk_mul",
    "mk_near_of_forall_near",
    "mk_neg",
    "mk_one",
    "mk_pos",
    "mk_sup",
    "mk_zero",
    "mul_comm_div",
    "mul_div",
    "mul_div_assoc",
    "mul_div_cancel",
    "mul_div_cancel_left",
    "mul_div_cancel_right",
    "mul_div_div_cancel",
    "mul_div_left_comm",
    "mul_div_mul_comm",
    "mul_div_mul_left_eq_div",
    "mul_div_mul_right_eq_div",
    "mul_div_right_comm",
    "mul_eq_of_eq_div",
    "mul_eq_of_eq_inv_mul",
    "mul_eq_of_eq_mul_inv",
    "mul_eq_one_iff_eq_inv",
    "mul_eq_one_iff_inv_eq",
    "mul_inv",
    "mul_inv_eq_iff_eq_mul",
    "mul_inv_eq_of_eq_mul",
    "mul_inv_eq_one",
    "mul_left_comm",
    "mul_left_eq_self",
    "mul_left_inj",
    "mul_left_injective",
    "mul_left_ne_self",
    "mul_left_surjective",
    "mul_mul_div_cancel",
    "mul_mul_inv_cancel",
    "mul_mul_mul_comm",
    "mul_ne_mul_left",
    "mul_ne_mul_right",
    "mul_one_div",
    "mul_one_eq_id",
    "mul_pow_sub_one",
    "mul_right_comm",
    "mul_right_eq_self",
    "mul_right_inj",
    "mul_right_injective",
    "mul_right_ne_self",
    "mul_right_surjective",
    "mul_rotate",
    "mul_self_sqrt",
    "mul_self_zpow",
    "mul_zpow_neg_one",
    "mul_zpow_self",
    "multiplicative_of_isTotal",
    "multiplicative_of_symmetric_of_isTotal",
    "nat_floor_real_sqrt_eq_nat_sqrt",
    "nat_sqrt_le_real_sqrt",
    "ne_and_eq_iff_right",
    "ne_of_eq_of_ne",
    "ne_of_ne_of_eq",
    "ne_or_eq",
    "neg_le_of_abs_le",
    "neg_sqrt_le_of_sq_le",
    "neg_sqrt_lt_of_sq_lt",
    "nonneg_of_isNat",
    "nonneg_of_isRat",
    "not_and_not_right",
    "not_and_or",
    "not_beq_of_ne",
    "not_exists_mem",
    "not_forall_not",
    "not_forall₂",
    "not_forall₂_of_exists₂_not",
    "not_iff",
    "not_iff_comm",
    "not_iff_not",
    "not_imp",
    "not_imp_comm",
    "not_imp_not",
    "not_ne_iff",
    "not_or_of_imp",
    "nz_of_isNegNat",
    "nz_of_isRat",
    "odd_abs",
    "ofCauchy_add",
    "ofCauchy_div",
    "ofCauchy_inf",
    "ofCauchy_intCast",
    "ofCauchy_inv",
    "ofCauchy_mul",
    "ofCauchy_natCast",
    "ofCauchy_neg",
    "ofCauchy_nnratCast",
    "ofCauchy_one",
    "ofCauchy_ratCast",
    "ofCauchy_sub",
    "ofCauchy_sup",
    "ofCauchy_zero",
    "ofLower_inj",
    "ofRat_rat",
    "ofUpper_inj",
    "of_not_imp",
    "of_not_not",
    "one_div",
    "one_div_div",
    "one_div_mul_eq_div",
    "one_div_mul_one_div",
    "one_div_mul_one_div_rev",
    "one_div_one",
    "one_div_one_div",
    "one_div_pow",
    "one_div_zpow",
    "one_eq_inv",
    "one_le_two",
    "one_lt_two",
    "one_mul_eq_id",
    "one_zpow",
    "or_congr_left",
    "or_congr_right",
    "or_iff_not_and_not",
    "or_not",
    "or_not_of_imp",
    "or_of_or_of_imp_left",
    "or_of_or_of_imp_of_imp",
    "or_of_or_of_imp_right",
    "peirce",
    "pi_congr",
    "pos_of_isNat",
    "pos_of_isRat",
    "pow_abs",
    "pow_boole",
    "pow_dite",
    "pow_eq_neg_one_iff",
    "pow_eq_neg_pow_iff",
    "pow_eq_one_iff_cases",
    "pow_eq_one_iff_of_ne_zero",
    "pow_eq_pow_iff_cases",
    "pow_eq_pow_iff_of_ne_zero",
    "pow_eq_pow_mod",
    "pow_ite",
    "pow_mul_pow_sub",
    "pow_natAbs_eq_one",
    "pow_sub",
    "pow_sub_mul_pow",
    "pow_sub_one_mul",
    "ratCast_lt",
    "real_sqrt_le_nat_sqrt_succ",
    "real_sqrt_lt_nat_sqrt_succ",
    "rec_heq_iff_heq",
    "rec_heq_of_heq",
    "rightInverse_inv",
    "self_dvd_abs",
    "self_eq_mul_left",
    "self_eq_mul_right",
    "self_ne_mul_left",
    "self_ne_mul_right",
    "sign_apply_eq",
    "sign_apply_eq_of_ne_zero",
    "sign_eq_zero_iff",
    "sign_intCast",
    "sign_inv",
    "sign_mul_nonneg",
    "sign_mul_pos_of_ne_zero",
    "sign_neg",
    "sign_of_neg",
    "sign_of_pos",
    "sign_one",
    "sign_zero",
    "solidClosure_min",
    "some_spec₂",
    "sq_eq_sq_iff_abs_eq_abs",
    "sq_le",
    "sq_le_sq",
    "sq_lt",
    "sq_lt_sq",
    "sq_sqrt",
    "sqrt_div",
    "sqrt_div_self",
    "sqrt_eq_cases",
    "sqrt_eq_iff_eq_sq",
    "sqrt_eq_iff_mul_self_eq",
    "sqrt_eq_iff_mul_self_eq_of_pos",
    "sqrt_eq_iff_sq_eq",
    "sqrt_eq_one",
    "sqrt_eq_zero",
    "sqrt_eq_zero_of_nonpos",
    "sqrt_inj",
    "sqrt_inv",
    "sqrt_le_iff",
    "sqrt_le_iff_le_sq",
    "sqrt_le_left",
    "sqrt_le_sqrt",
    "sqrt_le_sqrt_iff",
    "sqrt_lt",
    "sqrt_lt_sqrt",
    "sqrt_lt_sqrt_iff",
    "sqrt_lt_sqrt_iff_of_pos",
    "sqrt_mul",
    "sqrt_mul_self",
    "sqrt_mul_self_eq_abs",
    "sqrt_ne_zero",
    "sqrt_nonneg",
    "sqrt_one",
    "sqrt_one_add_le",
    "sqrt_pos",
    "sqrt_sq",
    "sqrt_sq_eq_abs",
    "sqrt_zero",
    "sub_le_of_abs_sub_le_left",
    "sub_le_of_abs_sub_le_right",
    "sub_lt_of_abs_sub_lt_left",
    "sub_lt_of_abs_sub_lt_right",
    "sum_mul_le_sqrt_mul_sqrt",
    "sum_sqrt_mul_sqrt_le",
    "sup_sq_eq_mul_mul_mabs_div",
    "toLower_inj",
    "toUpper_inj",
    "topology_eq",
    "xor_comm",
    "xor_iff_iff_not",
    "xor_iff_not_iff",
    "xor_not_not",
    "zero_le_four",
    "zero_le_three",
    "zero_le_two",
    "zero_lt_four",
    "zero_lt_three",
    "zero_lt_two",
    "zpow_add",
    "zpow_add_one",
    "zpow_eq_zpow_emod",
    "zpow_induction_left",
    "zpow_induction_right",
    "zpow_mul",
    "zpow_neg",
    "zpow_one_add",
    "zpow_sub_one"
}

enum OnelineTactic {
    "simp",
    "field_simp",
    "norm_num",
    "ring",
    "ring_nf",
    "omega",
    "linarith",
    "nlinarith"
}

enum AtTactic {
    "rw",
    "rwhat"
}

value Empty;
value Str;
value Bool;

program Lean() -> Bool;
func use_theorem_tactic: Str -> AtTactic, Theorem;
func oneline: Str -> OnelineTactic;
func checker: Bool -> Str;
func empty: Empty -> Empty;
