{
  "config": {
    "repair_mode": "hole_filling",
    "repair_modes": {
      "hole_filling": {
        "description": "修复包含hole的代码",
        "skip_correct_main_problems": false,
        "skip_correct_sub_problems": true
      },
      "error_fixing": {
        "description": "修复有错误的代码",
        "skip_correct_main_problems": true,
        "skip_correct_sub_problems": true,
        "only_fix_error_sub_problems": true
      }
    },
    "options": {
      "skip_correct_main_problems": {
        "description": "是否跳过所有正确的大题",
        "default": false,
        "applicable_modes": [
          "hole_filling"
        ]
      },
      "skip_correct_sub_problems": {
        "description": "是否跳过所有正确的小题",
        "default": true,
        "applicable_modes": [
          "hole_filling",
          "error_fixing"
        ]
      }
    }
  },
  "datasets": {
    "demo": {
      "description": "演示数据集",
      "problems": {
        "demo/nested_have": {
          "name": "nested_have",
          "main_problem": {
            "header_path": "unified_problems/demo/nested_have/header.lean",
            "problem_path": "unified_problems/demo/nested_have/problem.lean",
            "combined_path": "unified_problems/demo/nested_have/combined.lean",
            "original_solvable": false,
            "description": "嵌套have语句的证明"
          },
          "decomposed_problems": {
            "count": 6,
            "directory": "unified_problems/demo/nested_have/decomposed",
            "files": [
              {
                "name": "decomposed_00_h1.lean",
                "path": "unified_problems/demo/nested_have/decomposed/decomposed_00_h1.lean",
                "original_solvable": true,
                "description": "第一个have语句"
              },
              {
                "name": "decomposed_01_h2.lean",
                "path": "unified_problems/demo/nested_have/decomposed/decomposed_01_h2.lean",
                "original_solvable": true,
                "description": "第二个have语句"
              },
              {
                "name": "decomposed_02_h3.lean",
                "path": "unified_problems/demo/nested_have/decomposed/decomposed_02_h3.lean",
                "original_solvable": true,
                "description": "第三个have语句"
              },
              {
                "name": "decomposed_03_h4.lean",
                "path": "unified_problems/demo/nested_have/decomposed/decomposed_03_h4.lean",
                "original_solvable": true,
                "description": "第四个have语句"
              },
              {
                "name": "decomposed_04_h5.lean",
                "path": "unified_problems/demo/nested_have/decomposed/decomposed_04_h5.lean",
                "original_solvable": true,
                "description": "第五个have语句"
              },
              {
                "name": "decomposed_05_h6.lean",
                "path": "unified_problems/demo/nested_have/decomposed/decomposed_05_h6.lean",
                "original_solvable": true,
                "description": "第六个have语句"
              }
            ]
          },
          "fixed_problems": {
            "hole_filled": {
              "directory": "unified_problems/demo/nested_have/hole",
              "main_problem": {
                "name": "hole_nested_have.lean",
                "path": "unified_problems/demo/nested_have/hole/hole_nested_have.lean",
                "fixed_solvable": false
              },
              "sub_problems": []
            },
            "error_fixed": {
              "directory": "unified_problems/demo/nested_have/fixed",
              "main_problem": null,
              "sub_problems": []
            }
          },
          "synthesis": {
            "synthesized_path": null,
            "synthesis_solvable": null
          }
        },
        "demo/complex_have": {
          "name": "complex_have",
          "main_problem": {
            "header_path": "unified_problems/demo/complex_have/header.lean",
            "problem_path": "unified_problems/demo/complex_have/problem.lean",
            "combined_path": "unified_problems/demo/complex_have/combined.lean",
            "original_solvable": null,
            "description": "复杂have语句的证明"
          },
          "decomposed_problems": {
            "count": 0,
            "directory": "unified_problems/demo/complex_have/decomposed",
            "files": []
          },
          "fixed_problems": {
            "hole_filled": {
              "directory": "unified_problems/demo/complex_have/hole",
              "main_problem": null,
              "sub_problems": []
            },
            "error_fixed": {
              "directory": "unified_problems/demo/complex_have/fixed",
              "main_problem": null,
              "sub_problems": []
            }
          },
          "synthesis": {
            "synthesized_path": null,
            "synthesis_solvable": null
          }
        },
        "demo/broken_add": {
          "name": "broken_add",
          "main_problem": {
            "header_path": "unified_problems/demo/broken_add/header.lean",
            "problem_path": "unified_problems/demo/broken_add/problem.lean",
            "combined_path": "unified_problems/demo/broken_add/combined.lean",
            "original_solvable": false,
            "description": "有错误的加法证明"
          },
          "decomposed_problems": {
            "count": 0,
            "directory": "unified_problems/demo/broken_add/decomposed",
            "files": []
          },
          "fixed_problems": {
            "hole_filled": {
              "directory": "unified_problems/demo/broken_add/hole",
              "main_problem": null,
              "sub_problems": []
            },
            "error_fixed": {
              "directory": "unified_problems/demo/broken_add/fixed",
              "main_problem": null,
              "sub_problems": []
            }
          },
          "synthesis": {
            "synthesized_path": null,
            "synthesis_solvable": null
          }
        },
        "demo/simple_add": {
          "name": "simple_add",
          "main_problem": {
            "header_path": "unified_problems/demo/simple_add/header.lean",
            "problem_path": "unified_problems/demo/simple_add/problem.lean",
            "combined_path": "unified_problems/demo/simple_add/combined.lean",
            "original_solvable": true,
            "description": "简单的加法证明"
          },
          "decomposed_problems": {
            "count": 0,
            "directory": "unified_problems/demo/simple_add/decomposed",
            "files": []
          },
          "fixed_problems": {
            "hole_filled": {
              "directory": "unified_problems/demo/simple_add/hole",
              "main_problem": null,
              "sub_problems": []
            },
            "error_fixed": {
              "directory": "unified_problems/demo/simple_add/fixed",
              "main_problem": null,
              "sub_problems": []
            }
          },
          "synthesis": {
            "synthesized_path": null,
            "synthesis_solvable": null
          }
        },
        "demo/simple_mul": {
          "name": "simple_mul",
          "main_problem": {
            "header_path": "unified_problems/demo/simple_mul/header.lean",
            "problem_path": "unified_problems/demo/simple_mul/problem.lean",
            "combined_path": "unified_problems/demo/simple_mul/combined.lean",
            "original_solvable": true,
            "description": "简单的乘法证明"
          },
          "decomposed_problems": {
            "count": 0,
            "directory": "unified_problems/demo/simple_mul/decomposed",
            "files": []
          },
          "fixed_problems": {
            "hole_filled": {
              "directory": "unified_problems/demo/simple_mul/hole",
              "main_problem": null,
              "sub_problems": []
            },
            "error_fixed": {
              "directory": "unified_problems/demo/simple_mul/fixed",
              "main_problem": null,
              "sub_problems": []
            }
          },
          "synthesis": {
            "synthesized_path": null,
            "synthesis_solvable": null
          }
        },
        "demo/simple_refl": {
          "name": "simple_refl",
          "main_problem": {
            "header_path": "unified_problems/demo/simple_refl/header.lean",
            "problem_path": "unified_problems/demo/simple_refl/problem.lean",
            "combined_path": "unified_problems/demo/simple_refl/combined.lean",
            "original_solvable": true,
            "description": "简单的反射性证明"
          },
          "decomposed_problems": {
            "count": 0,
            "directory": "unified_problems/demo/simple_refl/decomposed",
            "files": []
          },
          "fixed_problems": {
            "hole_filled": {
              "directory": "unified_problems/demo/simple_refl/hole",
              "main_problem": null,
              "sub_problems": []
            },
            "error_fixed": {
              "directory": "unified_problems/demo/simple_refl/fixed",
              "main_problem": null,
              "sub_problems": []
            }
          },
          "synthesis": {
            "synthesized_path": null,
            "synthesis_solvable": null
          }
        }
      }
    },
    "minif2f": {
      "description": "MinIF2F数据集",
      "problems": {}
    },
    "putnam": {
      "description": "Putnam数学竞赛数据集",
      "problems": {}
    },
    "proverbench": {
      "description": "ProverBench数据集",
      "problems": {}
    }
  },
  "metadata": {
    "version": "1.0.0",
    "created": "2024-12-28",
    "description": "Lean证明修复系统的测试数据配置文件",
    "total_datasets": 4,
    "total_problems": 6,
    "status_codes": {
      "original_solvable": {
        "true": "原始大题可以被解决",
        "false": "原始大题不能被解决",
        "null": "未知状态"
      },
      "fixed_solvable": {
        "true": "修复后可以被解决",
        "false": "修复后仍不能被解决",
        "null": "未修复或未知状态"
      }
    }
  }
}