{
  "problem_id": "algebra_amgm_sum1toneqn_prod1tonleq1",
  "dataset": "minif2f",
  "timestamp": "2025-06-18T23:33:10.804833",
  "original_verification_pass": false,
  "hole_verification_pass": true,
  "holes": [
    {
      "hole_id": "hole_1",
      "original_proof": "exact_mod_cast h\u2080"
    },
    {
      "hole_id": "hole_2",
      "original_proof": "calc\n  (\u220f x in Finset.range n, (a x : \u211d)) = \u220f x in Finset.range n, (a x : \u211d) := rfl\n  _ = 0 := by\n    apply Finset.prod_eq_zero h\u2088\n    simp [h\u2089]"
    },
    {
      "hole_id": "hole_3",
      "original_proof": "exact h\u2081\u2080"
    },
    {
      "hole_id": "hole_4",
      "original_proof": "contradiction"
    },
    {
      "hole_id": "hole_5",
      "original_proof": "exact_mod_cast (a i).prop"
    },
    {
      "hole_id": "hole_6",
      "original_proof": "contrapose! h\u2087\nlinarith"
    },
    {
      "hole_id": "hole_7",
      "original_proof": "exact h\u2088"
    },
    {
      "hole_id": "hole_8",
      "original_proof": "linarith [Real.log_le_sub_one_of_pos h\u2089]"
    },
    {
      "hole_id": "hole_9",
      "original_proof": "exact h\u2081\u2081"
    },
    {
      "hole_id": "hole_10",
      "original_proof": "exact h\u2081\u2080"
    },
    {
      "hole_id": "hole_11",
      "original_proof": "calc\n  \u2211 x in Finset.range n, ((a x : \u211d) - 1) = \u2211 x in Finset.range n, ((a x : \u211d) - 1) := rfl\n  _ = (\u2211 x in Finset.range n, (a x : \u211d)) - \u2211 x in Finset.range n, (1 : \u211d) := by rw [Finset.sum_sub_distrib]\n  _ = (\u2211 x in Finset.range n, (a x : \u211d)) - n := by simp [Finset.sum_const, Finset.card_range] <;> ring\n  _ = (\u2211 x in Finset.range n, (a x : \u211d)) - n := by simp"
    },
    {
      "hole_id": "hole_12",
      "original_proof": "linarith"
    },
    {
      "hole_id": "hole_13",
      "original_proof": "rw [h\u2082]\nring"
    },
    {
      "hole_id": "hole_14",
      "original_proof": "linarith"
    },
    {
      "hole_id": "hole_15",
      "original_proof": "calc\n  Real.log (\u220f x in Finset.range n, (a x : \u211d)) = \u2211 x in Finset.range n, Real.log ((a x : \u211d)) := by\n    rw [Real.log_prod _ _ fun i hi => by\n        have h\u2089 : (a i : \u211d) > 0 := h\u2085' i hi\n        positivity]\n  _ \u2264 0 := h\u2087"
    },
    {
      "hole_id": "hole_16",
      "original_proof": "linarith"
    },
    {
      "hole_id": "hole_17",
      "original_proof": "apply Real.log_pos\nexact by\n  have h\u2081\u2083 : (\u220f x in Finset.range n, (a x : \u211d)) > 1 := h\u2081\u2080\n  linarith"
    },
    {
      "hole_id": "hole_18",
      "original_proof": "linarith"
    },
    {
      "hole_id": "hole_19",
      "original_proof": "linarith"
    },
    {
      "hole_id": "hole_20",
      "original_proof": "exact h\u2089"
    },
    {
      "hole_id": "hole_21",
      "original_proof": "exact h\u2086"
    },
    {
      "hole_id": "hole_22",
      "original_proof": "exact h\u2081"
    },
    {
      "hole_id": "hole_23",
      "original_proof": "simp"
    },
    {
      "hole_id": "hole_24",
      "original_proof": "simpa [h\u2085] using h\u2081"
    },
    {
      "hole_id": "hole_25",
      "original_proof": "norm_cast at h\u2086 \u22a2"
    },
    {
      "hole_id": "hole_26",
      "original_proof": "simpa using h\u2087"
    },
    {
      "hole_id": "hole_27",
      "original_proof": "exact h\u2082"
    }
  ]
}