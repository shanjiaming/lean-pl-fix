{
  "problem_id": "amc12b_2020_p21",
  "dataset": "minif2f",
  "verification_count": 1,
  "max_verifications": 3,
  "original_verification_pass": true,
  "hole_verification_pass": true,
  "filled_verification_pass": true,
  "synthesized_verification_pass": true,
  "complete_solve_success": false,
  "original_tactics_test": {
    "hole_1": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact_mod_cast h\u2082"
    },
    "hole_2": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact_mod_cast h\u2082"
    },
    "hole_3": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact_mod_cast h\u2082"
    },
    "hole_4": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_5": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_6": {
      "success": true,
      "error_message": null,
      "original_tactic": "norm_cast at h\u2081\u2080 \u22a2"
    },
    "hole_7": {
      "success": true,
      "error_message": null,
      "original_tactic": "rw [Int.ModEq]\nomega"
    },
    "hole_8": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2081\u2082"
    },
    "hole_9": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2087"
    },
    "hole_10": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact_mod_cast h\u2085"
    },
    "hole_11": {
      "success": true,
      "error_message": null,
      "original_tactic": "omega"
    },
    "hole_12": {
      "success": true,
      "error_message": null,
      "original_tactic": "omega"
    },
    "hole_13": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact_mod_cast h\u2082"
    },
    "hole_14": {
      "success": true,
      "error_message": null,
      "original_tactic": "rw [h\u2086]\nring_nf at *\nnorm_num\nfield_simp at *\nring_nf at *"
    },
    "hole_15": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_16": {
      "success": true,
      "error_message": null,
      "original_tactic": "norm_cast at h\u2081\u2080 \u22a2"
    },
    "hole_17": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact_mod_cast h\u2081\u2081"
    },
    "hole_18": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact_mod_cast h\u2087"
    },
    "hole_19": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact Int.floor_le (Real.sqrt n)"
    },
    "hole_20": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_21": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2081\u2080"
    },
    "hole_22": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith [Real.sq_sqrt (by positivity : 0 \u2264 (n : \u211d)), h\u2089]"
    },
    "hole_23": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2081\u2081"
    },
    "hole_24": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact_mod_cast h\u2087"
    },
    "hole_25": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_26": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith [Int.floor_le (Real.sqrt n), Int.lt_floor_add_one (Real.sqrt n)]"
    },
    "hole_27": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_28": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2081\u2081"
    },
    "hole_29": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith [Real.sq_sqrt (by positivity : 0 \u2264 (n : \u211d)), h\u2081\u2080]"
    },
    "hole_30": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2081\u2082"
    },
    "hole_31": {
      "success": true,
      "error_message": null,
      "original_tactic": "norm_cast at h\u2088 \u22a2"
    },
    "hole_32": {
      "success": true,
      "error_message": null,
      "original_tactic": "norm_cast at h\u2089 \u22a2"
    },
    "hole_33": {
      "success": true,
      "error_message": null,
      "original_tactic": "omega"
    },
    "hole_34": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith"
    },
    "hole_35": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith"
    },
    "hole_36": {
      "success": true,
      "error_message": null,
      "original_tactic": "omega"
    },
    "hole_37": {
      "success": true,
      "error_message": null,
      "original_tactic": "omega"
    },
    "hole_38": {
      "success": true,
      "error_message": null,
      "original_tactic": "omega"
    },
    "hole_39": {
      "success": true,
      "error_message": null,
      "original_tactic": "tauto"
    },
    "hole_40": {
      "success": true,
      "error_message": null,
      "original_tactic": "rw [Int.floor_eq_iff]\nconstructor\nnorm_num [Real.le_sqrt, Real.sqrt_lt]\nnorm_num [Real.le_sqrt, Real.sqrt_lt]"
    },
    "hole_41": {
      "success": true,
      "error_message": null,
      "original_tactic": "rw [Int.floor_eq_iff]\nconstructor\nnorm_num [Real.le_sqrt, Real.sqrt_lt]\nnorm_num [Real.le_sqrt, Real.sqrt_lt]"
    },
    "hole_42": {
      "success": true,
      "error_message": null,
      "original_tactic": "rw [Int.floor_eq_iff]\nconstructor\nnorm_num [Real.le_sqrt, Real.sqrt_lt]\nnorm_num [Real.le_sqrt, Real.sqrt_lt]"
    },
    "hole_43": {
      "success": true,
      "error_message": null,
      "original_tactic": "rw [Int.floor_eq_iff]\nconstructor\nnorm_num [Real.le_sqrt, Real.sqrt_lt]\nnorm_num [Real.le_sqrt, Real.sqrt_lt]"
    },
    "hole_44": {
      "success": true,
      "error_message": null,
      "original_tactic": "rw [Int.floor_eq_iff]\nconstructor\nnorm_num [Real.le_sqrt, Real.sqrt_lt]\nnorm_num [Real.le_sqrt, Real.sqrt_lt]"
    },
    "hole_45": {
      "success": true,
      "error_message": null,
      "original_tactic": "rw [Int.floor_eq_iff]\nconstructor\nnorm_num [Real.le_sqrt, Real.sqrt_lt]\nnorm_num [Real.le_sqrt, Real.sqrt_lt]"
    },
    "hole_46": {
      "success": true,
      "error_message": null,
      "original_tactic": "norm_num [h\u2082]"
    },
    "hole_47": {
      "success": true,
      "error_message": null,
      "original_tactic": "rw [h_main]\nnorm_num"
    },
    "hole_48": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h_card"
    }
  },
  "successful_tactics": {
    "hole_1": "linarith",
    "hole_2": "linarith",
    "hole_3": "linarith",
    "hole_4": "linarith",
    "hole_5": "linarith",
    "hole_8": "simpa",
    "hole_10": "linarith",
    "hole_11": "omega",
    "hole_12": "linarith",
    "hole_13": "linarith",
    "hole_15": "linarith",
    "hole_17": "linarith",
    "hole_18": "norm_cast",
    "hole_20": "linarith",
    "hole_21": "linarith",
    "hole_23": "linarith",
    "hole_24": "norm_cast",
    "hole_25": "linarith",
    "hole_27": "linarith",
    "hole_28": "linarith",
    "hole_30": "linarith",
    "hole_33": "linarith",
    "hole_34": "nlinarith",
    "hole_35": "linarith",
    "hole_36": "omega",
    "hole_37": "linarith",
    "hole_38": "norm_num",
    "hole_39": "omega",
    "hole_40": "norm_num",
    "hole_45": "norm_num",
    "hole_46": "norm_num",
    "hole_48": "linarith"
  },
  "tactic_mapping": {
    "hole_1": "linarith",
    "hole_2": "linarith",
    "hole_3": "linarith",
    "hole_4": "linarith",
    "hole_5": "linarith",
    "hole_8": "simpa",
    "hole_10": "linarith",
    "hole_11": "omega",
    "hole_12": "linarith",
    "hole_13": "linarith",
    "hole_15": "linarith",
    "hole_17": "linarith",
    "hole_18": "norm_cast",
    "hole_20": "linarith",
    "hole_21": "linarith",
    "hole_23": "linarith",
    "hole_24": "norm_cast",
    "hole_25": "linarith",
    "hole_27": "linarith",
    "hole_28": "linarith",
    "hole_30": "linarith",
    "hole_33": "linarith",
    "hole_34": "nlinarith",
    "hole_35": "linarith",
    "hole_36": "omega",
    "hole_37": "linarith",
    "hole_38": "norm_num",
    "hole_39": "omega",
    "hole_40": "norm_num",
    "hole_45": "norm_num",
    "hole_46": "norm_num",
    "hole_48": "linarith",
    "hole_7": "admit",
    "hole_32": "admit",
    "hole_14": "admit",
    "hole_22": "admit",
    "hole_41": "admit",
    "hole_47": "admit",
    "hole_26": "admit",
    "hole_43": "admit",
    "hole_44": "admit",
    "hole_29": "admit",
    "hole_9": "admit",
    "hole_16": "admit",
    "hole_42": "admit",
    "hole_6": "admit",
    "hole_19": "admit",
    "hole_31": "admit"
  },
  "proof_state_tests": 0,
  "tactic_attempts": {},
  "processing_time_seconds": 1673.72977,
  "constraint_satisfied": true,
  "tactics_replaced": 32,
  "timestamp": "2025-06-20T02:05:49.787036"
}