{
  "problem_id": "amc12b_2020_p6",
  "dataset": "minif2f",
  "timestamp": "2025-06-18T23:08:55.832497",
  "original_verification_pass": true,
  "hole_verification_pass": true,
  "holes": [
    {
      "hole_id": "hole_1",
      "original_proof": "calc\n  (n + 2 : \u2115)! = (n + 2 : \u2115) * (n + 1 : \u2115)! := by simp [Nat.factorial_succ, Nat.mul_succ] <;> ring_nf\n  _ = (n + 2 : \u2115) * ((n + 1 : \u2115) * n !) := by simp [Nat.factorial_succ, Nat.mul_succ] <;> ring_nf\n  _ = (n + 2 : \u2115) * (n + 1 : \u2115) * n ! := by ring_nf <;> simp [Nat.mul_assoc] <;> ring_nf"
    },
    {
      "hole_id": "hole_2",
      "original_proof": "exact h\u2083"
    },
    {
      "hole_id": "hole_3",
      "original_proof": "calc\n  (n + 1 : \u2115)! = (n + 1 : \u2115) * n ! := by simp [Nat.factorial_succ, Nat.mul_succ] <;> ring_nf\n  _ = (n + 1 : \u2115) * n ! := by rfl"
    },
    {
      "hole_id": "hole_4",
      "original_proof": "exact h\u2084"
    },
    {
      "hole_id": "hole_5",
      "original_proof": "norm_cast"
    },
    {
      "hole_id": "hole_6",
      "original_proof": "norm_cast"
    },
    {
      "hole_id": "hole_7",
      "original_proof": "rw [h\u2084, h\u2085]\nnorm_num\nring_nf"
    },
    {
      "hole_id": "hole_8",
      "original_proof": "norm_cast\nexact Nat.factorial_ne_zero n"
    },
    {
      "hole_id": "hole_9",
      "original_proof": "field_simp [h\u2088]"
    },
    {
      "hole_id": "hole_10",
      "original_proof": "simpa using h\u2087"
    },
    {
      "hole_id": "hole_11",
      "original_proof": "refine' \u27e8n + 1, _\u27e9\nsimpa using h\u2081"
    },
    {
      "hole_id": "hole_12",
      "original_proof": "apply h\u2082"
    }
  ]
}