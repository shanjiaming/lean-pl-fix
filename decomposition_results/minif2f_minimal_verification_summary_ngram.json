{
  "dataset": "minif2f",
  "total_problems": 2,
  "constraint_violations": 0,
  "constraint_satisfaction_rate": 100.0,
  "successful_problems": 2,
  "complete_solve_success_problems": 0,
  "complete_solve_success_rate": 0.0,
  "total_original_tactics_tests": 35,
  "successful_original_tactics_tests": 35,
  "original_tactics_success_rate": 100.0,
  "total_proof_state_tests": 0,
  "total_verifications": 2,
  "average_processing_time": 287.36697749999996,
  "timestamp": "2025-06-19T23:47:06.801070",
  "results": [
    {
      "problem_id": "aime_1990_p4",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": false,
      "original_tactics_test": {
        "hole_1": {
          "success": true,
          "error_message": null,
          "original_tactic": "simpa using h\u2082"
        },
        "hole_2": {
          "success": true,
          "error_message": null,
          "original_tactic": "simpa using h\u2081"
        },
        "hole_3": {
          "success": true,
          "error_message": null,
          "original_tactic": "simpa using h\u2083"
        },
        "hole_4": {
          "success": true,
          "error_message": null,
          "original_tactic": "field_simp [h\u2085, h\u2086, h\u2087, sub_eq_zero, add_eq_zero_iff_eq_neg] at h\u2088\nnlinarith [sq_pos_of_ne_zero (sub_ne_zero.mpr h\u2086), sq_pos_of_ne_zero (sub_ne_zero.mpr h\u2085),\n  sq_pos_of_ne_zero (sub_ne_zero.mpr h\u2087)]"
        },
        "hole_5": {
          "success": true,
          "error_message": null,
          "original_tactic": "exact h\u2089\u2081"
        },
        "hole_6": {
          "success": true,
          "error_message": null,
          "original_tactic": "nlinarith [sq_pos_of_ne_zero (sub_ne_zero.mpr h\u2086), sq_pos_of_ne_zero (sub_ne_zero.mpr h\u2085),\n  sq_pos_of_ne_zero (sub_ne_zero.mpr h\u2087)]"
        },
        "hole_7": {
          "success": true,
          "error_message": null,
          "original_tactic": "exact h\u2081\u2080"
        },
        "hole_8": {
          "success": true,
          "error_message": null,
          "original_tactic": "nlinarith"
        },
        "hole_9": {
          "success": true,
          "error_message": null,
          "original_tactic": "nlinarith"
        },
        "hole_10": {
          "success": true,
          "error_message": null,
          "original_tactic": "apply eq_zero_or_eq_zero_of_mul_eq_zero h\u2085\u2083"
        },
        "hole_13": {
          "success": true,
          "error_message": null,
          "original_tactic": "cases h\u2085\u2084 with\n| inl h\u2085\u2084 =>\n  have h\u2085\u2085 : x = 13 := by linarith\n  exact Or.inl h\u2085\u2085\n| inr h\u2085\u2084 =>\n  have h\u2085\u2085 : x = -3 := by linarith\n  exact Or.inr h\u2085\u2085"
        },
        "hole_14": {
          "success": true,
          "error_message": null,
          "original_tactic": "cases h\u2085\u2081 with\n| inl h\u2085\u2081 => exact h\u2085\u2081\n| inr h\u2085\u2081 =>\n  have h\u2085\u2082 : x > 0 := h\u2080\n  have h\u2085\u2083 : x = -3 := h\u2085\u2081\n  linarith"
        },
        "hole_15": {
          "success": true,
          "error_message": null,
          "original_tactic": "exact h\u2085"
        },
        "hole_16": {
          "success": true,
          "error_message": null,
          "original_tactic": "exact h_final"
        }
      },
      "successful_tactics": {
        "hole_1": "simpa",
        "hole_2": "simpa",
        "hole_3": "simpa",
        "hole_5": "linarith",
        "hole_6": "linarith",
        "hole_7": "linarith",
        "hole_8": "linarith",
        "hole_9": "linarith",
        "hole_14": "nlinarith",
        "hole_15": "linarith",
        "hole_16": "linarith"
      },
      "tactic_mapping": {
        "hole_1": "simpa",
        "hole_2": "simpa",
        "hole_3": "simpa",
        "hole_5": "linarith",
        "hole_6": "linarith",
        "hole_7": "linarith",
        "hole_8": "linarith",
        "hole_9": "linarith",
        "hole_14": "nlinarith",
        "hole_15": "linarith",
        "hole_16": "linarith",
        "hole_4": "admit",
        "hole_13": "admit",
        "hole_10": "admit"
      },
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 238.82898,
      "constraint_satisfied": true,
      "timestamp": "2025-06-19T23:47:06.801055"
    },
    {
      "problem_id": "algebra_absxm1pabsxpabsxp1eqxp2_0leqxleq1",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": false,
      "original_tactics_test": {
        "hole_1": {
          "success": true,
          "error_message": null,
          "original_tactic": "linarith"
        },
        "hole_2": {
          "success": true,
          "error_message": null,
          "original_tactic": "rw [abs_of_neg (by linarith)]"
        },
        "hole_3": {
          "success": true,
          "error_message": null,
          "original_tactic": "rw [abs_of_neg (by linarith)]"
        },
        "hole_4": {
          "success": true,
          "error_message": null,
          "original_tactic": "rw [abs_of_neg (by linarith)]"
        },
        "hole_5": {
          "success": true,
          "error_message": null,
          "original_tactic": "linarith"
        },
        "hole_6": {
          "success": true,
          "error_message": null,
          "original_tactic": "linarith"
        },
        "hole_7": {
          "success": true,
          "error_message": null,
          "original_tactic": "linarith"
        },
        "hole_8": {
          "success": true,
          "error_message": null,
          "original_tactic": "rw [abs_of_neg (by linarith)]"
        },
        "hole_9": {
          "success": true,
          "error_message": null,
          "original_tactic": "rw [abs_of_neg (by linarith)]"
        },
        "hole_10": {
          "success": true,
          "error_message": null,
          "original_tactic": "rw [abs_of_nonneg (by linarith)]"
        },
        "hole_11": {
          "success": true,
          "error_message": null,
          "original_tactic": "linarith"
        },
        "hole_12": {
          "success": true,
          "error_message": null,
          "original_tactic": "linarith"
        },
        "hole_13": {
          "success": true,
          "error_message": null,
          "original_tactic": "linarith"
        },
        "hole_14": {
          "success": true,
          "error_message": null,
          "original_tactic": "linarith"
        },
        "hole_15": {
          "success": true,
          "error_message": null,
          "original_tactic": "rw [abs_of_nonneg (by linarith)]"
        },
        "hole_16": {
          "success": true,
          "error_message": null,
          "original_tactic": "rw [abs_of_nonneg (by linarith)]"
        },
        "hole_17": {
          "success": true,
          "error_message": null,
          "original_tactic": "rw [abs_of_nonneg (by linarith)]"
        },
        "hole_18": {
          "success": true,
          "error_message": null,
          "original_tactic": "linarith"
        },
        "hole_19": {
          "success": true,
          "error_message": null,
          "original_tactic": "linarith"
        },
        "hole_20": {
          "success": true,
          "error_message": null,
          "original_tactic": "exact \u27e8h\u2081, h\u2082\u27e9"
        },
        "hole_21": {
          "success": true,
          "error_message": null,
          "original_tactic": "exact h\u2083"
        }
      },
      "successful_tactics": {
        "hole_1": "linarith",
        "hole_3": "norm_num ; linarith",
        "hole_5": "linarith",
        "hole_6": "linarith",
        "hole_7": "linarith",
        "hole_9": "norm_num ; linarith",
        "hole_10": "norm_num ; linarith",
        "hole_11": "linarith",
        "hole_12": "linarith",
        "hole_13": "linarith",
        "hole_14": "linarith",
        "hole_15": "norm_num ; linarith",
        "hole_16": "simpa",
        "hole_17": "norm_num ; linarith",
        "hole_18": "linarith",
        "hole_19": "linarith",
        "hole_20": "norm_cast",
        "hole_21": "simpa"
      },
      "tactic_mapping": {
        "hole_1": "linarith",
        "hole_3": "norm_num ; linarith",
        "hole_5": "linarith",
        "hole_6": "linarith",
        "hole_7": "linarith",
        "hole_9": "norm_num ; linarith",
        "hole_10": "norm_num ; linarith",
        "hole_11": "linarith",
        "hole_12": "linarith",
        "hole_13": "linarith",
        "hole_14": "linarith",
        "hole_15": "norm_num ; linarith",
        "hole_16": "simpa",
        "hole_17": "norm_num ; linarith",
        "hole_18": "linarith",
        "hole_19": "linarith",
        "hole_20": "norm_cast",
        "hole_21": "simpa",
        "hole_2": "admit",
        "hole_4": "admit",
        "hole_8": "admit"
      },
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 335.904975,
      "constraint_satisfied": true,
      "timestamp": "2025-06-19T23:47:06.801061"
    }
  ]
}