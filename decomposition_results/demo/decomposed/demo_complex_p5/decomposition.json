{
  "problem_id": "demo_complex_p5",
  "dataset": "demo",
  "timestamp": "2025-06-13T18:56:15.252920",
  "header_file": "header.lean",
  "problem_file": "problem.lean",
  "original_verification_pass": true,
  "synthesized_verification_pass": true,
  "holes": [
    {
      "hole_id": "step_0001",
      "original_content": "-- Original: hole_3 := exact h6",
      "hole_content": "-- Hole: hole_3",
      "filled_content": "-- Filled: hole_3 := linarith",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "additional_info": {
        "method": "unigram_tactics",
        "hole_id": "hole_3",
        "original_proof": "exact h6",
        "replacement": "linarith",
        "tactics_tried": [
          "norm_num",
          "linarith",
          "nlinarith",
          "omega",
          "ring",
          "ring_nf",
          "simp",
          "simpa",
          "field_simp",
          "positivity",
          "norm_cast"
        ],
        "successful_tactics": [
          "linarith",
          "nlinarith",
          "omega",
          "simpa",
          "norm_cast"
        ],
        "failed_tactics": [
          "norm_num",
          "ring",
          "ring_nf",
          "simp",
          "field_simp",
          "positivity"
        ],
        "best_tactic": "linarith",
        "sanity_check_pass": true
      }
    },
    {
      "hole_id": "step_0002",
      "original_content": "-- Original: hole_4 := exact Nat.lt_of_le_of_ne h9 h10",
      "hole_content": "-- Hole: hole_4",
      "filled_content": "-- Filled: hole_4 := omega",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "additional_info": {
        "method": "unigram_tactics",
        "hole_id": "hole_4",
        "original_proof": "exact Nat.lt_of_le_of_ne h9 h10",
        "replacement": "omega",
        "tactics_tried": [
          "norm_num",
          "linarith",
          "nlinarith",
          "omega",
          "ring",
          "ring_nf",
          "simp",
          "simpa",
          "field_simp",
          "positivity",
          "norm_cast"
        ],
        "successful_tactics": [
          "omega"
        ],
        "failed_tactics": [
          "norm_num",
          "linarith",
          "nlinarith",
          "ring",
          "ring_nf",
          "simp",
          "simpa",
          "field_simp",
          "positivity",
          "norm_cast"
        ],
        "best_tactic": "omega",
        "sanity_check_pass": true
      }
    },
    {
      "hole_id": "step_0003",
      "original_content": "-- Original: hole_2 := exact h8",
      "hole_content": "-- Hole: hole_2",
      "filled_content": "-- Filled: hole_2 := linarith",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "additional_info": {
        "method": "unigram_tactics",
        "hole_id": "hole_2",
        "original_proof": "exact h8",
        "replacement": "linarith",
        "tactics_tried": [
          "norm_num",
          "linarith",
          "nlinarith",
          "omega",
          "ring",
          "ring_nf",
          "simp",
          "simpa",
          "field_simp",
          "positivity",
          "norm_cast"
        ],
        "successful_tactics": [
          "linarith",
          "nlinarith",
          "omega",
          "simpa",
          "norm_cast"
        ],
        "failed_tactics": [
          "norm_num",
          "ring",
          "ring_nf",
          "simp",
          "field_simp",
          "positivity"
        ],
        "best_tactic": "linarith",
        "sanity_check_pass": true
      }
    },
    {
      "hole_id": "step_0004",
      "original_content": "-- Original: hole_5 := exact h12",
      "hole_content": "-- Hole: hole_5",
      "filled_content": "-- Filled: hole_5 := linarith",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "additional_info": {
        "method": "unigram_tactics",
        "hole_id": "hole_5",
        "original_proof": "exact h12",
        "replacement": "linarith",
        "tactics_tried": [
          "norm_num",
          "linarith",
          "nlinarith",
          "omega",
          "ring",
          "ring_nf",
          "simp",
          "simpa",
          "field_simp",
          "positivity",
          "norm_cast"
        ],
        "successful_tactics": [
          "linarith",
          "nlinarith",
          "omega",
          "simpa",
          "norm_cast"
        ],
        "failed_tactics": [
          "norm_num",
          "ring",
          "ring_nf",
          "simp",
          "field_simp",
          "positivity"
        ],
        "best_tactic": "linarith",
        "sanity_check_pass": true
      }
    },
    {
      "hole_id": "step_0005",
      "original_content": "-- Original: hole_1 := exact h_final",
      "hole_content": "-- Hole: hole_1",
      "filled_content": "-- Filled: hole_1 := linarith",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "additional_info": {
        "method": "unigram_tactics",
        "hole_id": "hole_1",
        "original_proof": "exact h_final",
        "replacement": "linarith",
        "tactics_tried": [
          "norm_num",
          "linarith",
          "nlinarith",
          "omega",
          "ring",
          "ring_nf",
          "simp",
          "simpa",
          "field_simp",
          "positivity",
          "norm_cast"
        ],
        "successful_tactics": [
          "linarith",
          "nlinarith",
          "omega",
          "simpa",
          "norm_cast"
        ],
        "failed_tactics": [
          "norm_num",
          "ring",
          "ring_nf",
          "simp",
          "field_simp",
          "positivity"
        ],
        "best_tactic": "linarith",
        "sanity_check_pass": true
      }
    }
  ]
}