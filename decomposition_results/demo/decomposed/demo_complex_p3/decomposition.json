{
  "problem_id": "demo_complex_p3",
  "dataset": "demo",
  "timestamp": "2025-06-13T18:55:33.429705",
  "header_file": "header.lean",
  "problem_file": "problem.lean",
  "original_verification_pass": false,
  "synthesized_verification_pass": false,
  "holes": [
    {
      "hole_id": "step_0001",
      "original_content": "-- Original: hole_1 := by_contra h_contra\nsimp at h_contra\ncases' h_contra with ha hb",
      "hole_content": "-- Hole: hole_1",
      "filled_content": "-- Filled: hole_1 := admit",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "additional_info": {
        "method": "unigram_tactics",
        "hole_id": "hole_1",
        "original_proof": "by_contra h_contra\nsimp at h_contra\ncases' h_contra with ha hb",
        "replacement": "admit",
        "tactics_tried": [
          "norm_num",
          "linarith",
          "nlinarith",
          "omega",
          "ring",
          "ring_nf",
          "simp",
          "simpa",
          "field_simp",
          "positivity",
          "norm_cast"
        ],
        "successful_tactics": [],
        "failed_tactics": [],
        "best_tactic": null,
        "sanity_check_pass": false,
        "failed_content_preview": "macro \"hole\" : tactic => `(tactic| sorry)\n\ntheorem contradiction_with_have (a b : \u2115) (h : a + b = 0) : a = 0 \u2227 b = 0 := by\n  hole\n  \u00b7 \n    have h1 : a > 0 := Nat.pos_of_ne_zero ha\n    have h2 : a + b ...",
        "skip_reason": "sanity_check_failed"
      }
    }
  ]
}