[
  {
    "problem_id": "number_theory__p17",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.160967,
    "timestamp": "2025-06-15T17:30:35.953718"
  },
  {
    "problem_id": "number_theory__p18_4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.025972,
    "timestamp": "2025-06-15T17:30:35.980308"
  },
  {
    "problem_id": "number_theory__p23",
    "dataset": "proverbench",
    "error_message": "Problem number_theory__p23 skipped: code too long (756 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 756,
    "processing_time_seconds": 0.000192,
    "timestamp": "2025-06-15T17:30:40.723371"
  },
  {
    "problem_id": "elementary_algebra__p3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 17.353279,
    "timestamp": "2025-06-15T17:32:18.559377"
  },
  {
    "problem_id": "elementary_algebra__p13",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.204352,
    "timestamp": "2025-06-15T17:32:21.384860"
  },
  {
    "problem_id": "elementary_algebra__p17",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 2.941336,
    "timestamp": "2025-06-15T17:32:25.724521"
  },
  {
    "problem_id": "linear_algebra__p1_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.051959,
    "timestamp": "2025-06-15T17:32:29.067549"
  },
  {
    "problem_id": "linear_algebra__p6",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.497784,
    "timestamp": "2025-06-15T17:32:31.588806"
  },
  {
    "problem_id": "linear_algebra__p10_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.057857,
    "timestamp": "2025-06-15T17:32:32.528816"
  },
  {
    "problem_id": "linear_algebra__p13_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.109328,
    "timestamp": "2025-06-15T17:32:32.638871"
  },
  {
    "problem_id": "linear_algebra__p14_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.072734,
    "timestamp": "2025-06-15T17:32:32.712384"
  },
  {
    "problem_id": "linear_algebra__p17",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.085986,
    "timestamp": "2025-06-15T17:32:32.799148"
  },
  {
    "problem_id": "linear_algebra__p19_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.972329,
    "timestamp": "2025-06-15T17:32:33.772302"
  },
  {
    "problem_id": "linear_algebra__p23_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.062889,
    "timestamp": "2025-06-15T17:32:36.677707"
  },
  {
    "problem_id": "abstract_algebra__p7",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 11.909222,
    "timestamp": "2025-06-15T17:32:51.896974"
  },
  {
    "problem_id": "abstract_algebra__p20",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.482551,
    "timestamp": "2025-06-15T17:33:03.934748"
  },
  {
    "problem_id": "real_analysis__p7_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.352217,
    "timestamp": "2025-06-15T17:33:37.029449"
  },
  {
    "problem_id": "abstract_algebra__p31",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.163875,
    "timestamp": "2025-06-15T17:34:58.586543"
  },
  {
    "problem_id": "calculus__p23_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.165879,
    "timestamp": "2025-06-15T17:35:03.889071"
  },
  {
    "problem_id": "real_analysis__p3_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.358226,
    "timestamp": "2025-06-15T17:36:53.720201"
  },
  {
    "problem_id": "abstract_algebra__p16",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 1.29927,
    "timestamp": "2025-06-15T17:37:03.954687"
  },
  {
    "problem_id": "calculus__p10",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem calculus__p10 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.070878,
    "timestamp": "2025-06-15T17:37:09.399358"
  },
  {
    "problem_id": "probability__p3_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.173557,
    "timestamp": "2025-06-15T17:37:09.574258"
  },
  {
    "problem_id": "real_analysis__p6_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.038814,
    "timestamp": "2025-06-15T17:37:09.614462"
  },
  {
    "problem_id": "calculus__p45",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.115195,
    "timestamp": "2025-06-15T17:37:15.084881"
  },
  {
    "problem_id": "probability__p1_4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 1.441897,
    "timestamp": "2025-06-15T17:37:29.258729"
  },
  {
    "problem_id": "real_analysis__p13_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.183026,
    "timestamp": "2025-06-15T17:37:29.443267"
  },
  {
    "problem_id": "aime_2024ii_p7",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.272078,
    "timestamp": "2025-06-15T17:38:01.310223"
  },
  {
    "problem_id": "aime_2025ii_p4",
    "dataset": "proverbench",
    "error_message": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1168, in process_problem\n    original_verification_pass, verification_error = self.verify_lean_code(header_content, original_content, with_macro=False, return_error_string=True)\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 391, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "error_type": "TimeoutError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1168, in process_problem\n    original_verification_pass, verification_error = self.verify_lean_code(header_content, original_content, with_macro=False, return_error_string=True)\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 391, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "processing_time_seconds": 225.813049,
    "timestamp": "2025-06-15T17:41:48.435767"
  },
  {
    "problem_id": "number_theory__p15",
    "dataset": "proverbench",
    "error_message": "Problem number_theory__p15 skipped: code too long (512 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 512,
    "processing_time_seconds": 0.000135,
    "timestamp": "2025-06-15T17:42:26.539920"
  },
  {
    "problem_id": "number_theory__p18_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.067786,
    "timestamp": "2025-06-15T17:42:54.670049"
  },
  {
    "problem_id": "elementary_algebra__p2",
    "dataset": "proverbench",
    "error_message": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1168, in process_problem\n    original_verification_pass, verification_error = self.verify_lean_code(header_content, original_content, with_macro=False, return_error_string=True)\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 391, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "error_type": "TimeoutError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1168, in process_problem\n    original_verification_pass, verification_error = self.verify_lean_code(header_content, original_content, with_macro=False, return_error_string=True)\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 391, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "processing_time_seconds": 125.448267,
    "timestamp": "2025-06-15T17:45:35.139187"
  },
  {
    "problem_id": "elementary_algebra__p6",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 5.93488,
    "timestamp": "2025-06-15T17:45:41.082295"
  },
  {
    "problem_id": "linear_algebra__p10_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.060442,
    "timestamp": "2025-06-15T17:46:03.029424"
  },
  {
    "problem_id": "linear_algebra__p12",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.068876,
    "timestamp": "2025-06-15T17:46:03.100220"
  },
  {
    "problem_id": "linear_algebra__p14_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.257819,
    "timestamp": "2025-06-15T17:46:03.360074"
  },
  {
    "problem_id": "linear_algebra__p15_2",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p15_2 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.201368,
    "timestamp": "2025-06-15T17:46:03.563296"
  },
  {
    "problem_id": "linear_algebra__p19_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 1.575763,
    "timestamp": "2025-06-15T17:46:05.140934"
  },
  {
    "problem_id": "linear_algebra__p20_3",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p20_3 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.216086,
    "timestamp": "2025-06-15T17:46:05.361503"
  },
  {
    "problem_id": "linear_algebra__p23_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.036449,
    "timestamp": "2025-06-15T17:46:05.402322"
  },
  {
    "problem_id": "abstract_algebra__p4_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.653771,
    "timestamp": "2025-06-15T17:46:06.939036"
  },
  {
    "problem_id": "abstract_algebra__p9",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 9.480562,
    "timestamp": "2025-06-15T17:46:17.473332"
  },
  {
    "problem_id": "abstract_algebra__p22",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.072396,
    "timestamp": "2025-06-15T17:46:18.689543"
  },
  {
    "problem_id": "calculus__p22",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.233078,
    "timestamp": "2025-06-15T17:46:18.924641"
  },
  {
    "problem_id": "calculus__p27",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.321434,
    "timestamp": "2025-06-15T17:46:23.562713"
  },
  {
    "problem_id": "calculus__p59",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.378302,
    "timestamp": "2025-06-15T17:46:24.230472"
  },
  {
    "problem_id": "real_analysis__p12_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.186105,
    "timestamp": "2025-06-15T17:46:38.734694"
  },
  {
    "problem_id": "abstract_algebra__p35",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 20.428949,
    "timestamp": "2025-06-15T17:46:59.166053"
  },
  {
    "problem_id": "abstract_algebra__p28",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 3.715119,
    "timestamp": "2025-06-15T17:47:02.883485"
  },
  {
    "problem_id": "real_analysis__p12_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.281245,
    "timestamp": "2025-06-15T17:47:03.167948"
  },
  {
    "problem_id": "abstract_algebra__p21",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 24.14694,
    "timestamp": "2025-06-15T17:47:27.317430"
  },
  {
    "problem_id": "calculus__p3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.200433,
    "timestamp": "2025-06-15T17:47:27.520358"
  },
  {
    "problem_id": "calculus__p20",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.301484,
    "timestamp": "2025-06-15T17:47:32.902221"
  },
  {
    "problem_id": "real_analysis__p6_4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.027133,
    "timestamp": "2025-06-15T17:47:36.705851"
  },
  {
    "problem_id": "calculus__p64_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 1.020528,
    "timestamp": "2025-06-15T17:47:37.729674"
  },
  {
    "problem_id": "real_analysis__p9",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.192487,
    "timestamp": "2025-06-15T17:47:57.017076"
  },
  {
    "problem_id": "complex_analysis__p4_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.035213,
    "timestamp": "2025-06-15T17:49:06.095235"
  },
  {
    "problem_id": "real_analysis__p6_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.1194,
    "timestamp": "2025-06-15T17:49:24.941259"
  },
  {
    "problem_id": "abstract_algebra__p29",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem abstract_algebra__p29 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.075154,
    "timestamp": "2025-06-15T17:49:25.397049"
  },
  {
    "problem_id": "calculus__p14",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem calculus__p14 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.121223,
    "timestamp": "2025-06-15T17:49:25.521733"
  },
  {
    "problem_id": "real_analysis__p3_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.37106,
    "timestamp": "2025-06-15T17:49:25.896205"
  },
  {
    "problem_id": "calculus__p21",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 14.969475,
    "timestamp": "2025-06-15T17:49:51.430703"
  },
  {
    "problem_id": "probability__p1_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.226661,
    "timestamp": "2025-06-15T17:49:51.660846"
  },
  {
    "problem_id": "calculus__p1",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem calculus__p1 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.12357,
    "timestamp": "2025-06-15T17:49:53.654611"
  },
  {
    "problem_id": "abstract_algebra__p2",
    "dataset": "proverbench",
    "error_message": "Problem abstract_algebra__p2 skipped: code too long (459 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 459,
    "processing_time_seconds": 0.000129,
    "timestamp": "2025-06-15T17:49:53.657493"
  },
  {
    "problem_id": "number_theory__p4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 1.266909,
    "timestamp": "2025-06-15T17:52:56.463065"
  },
  {
    "problem_id": "number_theory__p18_6",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.060879,
    "timestamp": "2025-06-15T17:54:36.064102"
  },
  {
    "problem_id": "elementary_algebra__p8_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.50204,
    "timestamp": "2025-06-15T17:55:17.037306"
  },
  {
    "problem_id": "elementary_algebra__p23",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.245445,
    "timestamp": "2025-06-15T17:55:37.652565"
  },
  {
    "problem_id": "linear_algebra__p3_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.228603,
    "timestamp": "2025-06-15T17:55:38.279696"
  },
  {
    "problem_id": "linear_algebra__p5_2",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p5_2 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.035221,
    "timestamp": "2025-06-15T17:55:38.317909"
  },
  {
    "problem_id": "linear_algebra__p10_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.463186,
    "timestamp": "2025-06-15T17:55:55.390402"
  },
  {
    "problem_id": "linear_algebra__p11_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.0515,
    "timestamp": "2025-06-15T17:55:55.445884"
  },
  {
    "problem_id": "linear_algebra__p14_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.067754,
    "timestamp": "2025-06-15T17:55:55.516960"
  },
  {
    "problem_id": "linear_algebra__p15_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.078552,
    "timestamp": "2025-06-15T17:55:55.598709"
  },
  {
    "problem_id": "linear_algebra__p18_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.054306,
    "timestamp": "2025-06-15T17:55:55.656439"
  },
  {
    "problem_id": "linear_algebra__p20_2",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p20_2 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.077952,
    "timestamp": "2025-06-15T17:55:55.737728"
  },
  {
    "problem_id": "abstract_algebra__p4_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.481741,
    "timestamp": "2025-06-15T17:55:57.480106"
  },
  {
    "problem_id": "abstract_algebra__p1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 6.983651,
    "timestamp": "2025-06-15T17:56:04.466896"
  },
  {
    "problem_id": "abstract_algebra__p15",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.164479,
    "timestamp": "2025-06-15T17:56:04.634625"
  },
  {
    "problem_id": "linear_algebra__p20_1",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p20_1 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.055385,
    "timestamp": "2025-06-15T17:56:12.405269"
  },
  {
    "problem_id": "real_analysis__p7_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.04634,
    "timestamp": "2025-06-15T17:56:46.147450"
  },
  {
    "problem_id": "abstract_algebra__p34",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 2.053416,
    "timestamp": "2025-06-15T17:56:56.212967"
  },
  {
    "problem_id": "abstract_algebra__p33",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 10.88775,
    "timestamp": "2025-06-15T17:57:07.104361"
  },
  {
    "problem_id": "real_analysis__p11",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.281874,
    "timestamp": "2025-06-15T17:57:24.286042"
  },
  {
    "problem_id": "calculus__p62",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.157513,
    "timestamp": "2025-06-15T17:57:25.170539"
  },
  {
    "problem_id": "real_analysis__p1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.023934,
    "timestamp": "2025-06-15T17:57:29.081657"
  },
  {
    "problem_id": "calculus__p64_4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.279809,
    "timestamp": "2025-06-15T17:57:30.370736"
  },
  {
    "problem_id": "complex_analysis__p4_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.075299,
    "timestamp": "2025-06-15T17:58:16.158291"
  },
  {
    "problem_id": "functional_analysis__p1_4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.164627,
    "timestamp": "2025-06-15T17:58:16.330630"
  },
  {
    "problem_id": "real_analysis__p10",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.288495,
    "timestamp": "2025-06-15T17:58:19.054730"
  },
  {
    "problem_id": "abstract_algebra__p25",
    "dataset": "proverbench",
    "error_message": "Problem abstract_algebra__p25 skipped: code too long (420 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 420,
    "processing_time_seconds": 0.00024,
    "timestamp": "2025-06-15T17:58:19.063273"
  },
  {
    "problem_id": "linear_algebra__p7",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p7 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.28091,
    "timestamp": "2025-06-15T17:58:19.352455"
  },
  {
    "problem_id": "calculus__p64_5",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.174805,
    "timestamp": "2025-06-15T17:58:49.057409"
  },
  {
    "problem_id": "complex_analysis__p1",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem complex_analysis__p1 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.018329,
    "timestamp": "2025-06-15T17:58:51.952197"
  },
  {
    "problem_id": "number_theory__p5",
    "dataset": "proverbench",
    "error_message": "Problem number_theory__p5 skipped: code too long (419 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 419,
    "processing_time_seconds": 0.000131,
    "timestamp": "2025-06-15T18:03:07.894074"
  },
  {
    "problem_id": "number_theory__p18_5",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 594, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.05864,
    "timestamp": "2025-06-15T18:03:08.279666"
  }
]