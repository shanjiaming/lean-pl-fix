[
  {
    "problem_id": "number_theory__p17",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.163072,
    "timestamp": "2025-06-14T17:48:59.883941"
  },
  {
    "problem_id": "number_theory__p18_4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.026658,
    "timestamp": "2025-06-14T17:48:59.911225"
  },
  {
    "problem_id": "number_theory__p23",
    "dataset": "proverbench",
    "error_message": "Problem number_theory__p23 skipped: code too long (756 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 756,
    "processing_time_seconds": 0.000188,
    "timestamp": "2025-06-14T17:49:04.468563"
  },
  {
    "problem_id": "elementary_algebra__p3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 17.011813,
    "timestamp": "2025-06-14T17:55:35.066812"
  },
  {
    "problem_id": "elementary_algebra__p13",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.19736,
    "timestamp": "2025-06-14T17:55:42.501638"
  },
  {
    "problem_id": "elementary_algebra__p17",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 2.617569,
    "timestamp": "2025-06-14T17:55:46.950560"
  },
  {
    "problem_id": "linear_algebra__p1_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.05413,
    "timestamp": "2025-06-14T17:55:52.471812"
  },
  {
    "problem_id": "linear_algebra__p6",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.502302,
    "timestamp": "2025-06-14T17:55:57.066871"
  },
  {
    "problem_id": "linear_algebra__p10_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.056304,
    "timestamp": "2025-06-14T17:55:58.513572"
  },
  {
    "problem_id": "linear_algebra__p13_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.106943,
    "timestamp": "2025-06-14T17:55:58.621251"
  },
  {
    "problem_id": "linear_algebra__p14_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.068407,
    "timestamp": "2025-06-14T17:55:58.690461"
  },
  {
    "problem_id": "linear_algebra__p17",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.079835,
    "timestamp": "2025-06-14T17:55:58.771072"
  },
  {
    "problem_id": "linear_algebra__p19_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.944174,
    "timestamp": "2025-06-14T17:55:59.716078"
  },
  {
    "problem_id": "linear_algebra__p23_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.061538,
    "timestamp": "2025-06-14T17:56:02.755745"
  },
  {
    "problem_id": "abstract_algebra__p7",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 11.304272,
    "timestamp": "2025-06-14T17:56:18.443494"
  },
  {
    "problem_id": "abstract_algebra__p20",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.475223,
    "timestamp": "2025-06-14T17:56:46.264016"
  },
  {
    "problem_id": "real_analysis__p7_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.360344,
    "timestamp": "2025-06-14T17:57:37.664597"
  },
  {
    "problem_id": "abstract_algebra__p31",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.28968,
    "timestamp": "2025-06-14T18:02:53.708153"
  },
  {
    "problem_id": "calculus__p23_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.15412,
    "timestamp": "2025-06-14T18:03:01.741287"
  },
  {
    "problem_id": "real_analysis__p3_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.312975,
    "timestamp": "2025-06-14T18:06:49.563341"
  },
  {
    "problem_id": "abstract_algebra__p16",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 1.287262,
    "timestamp": "2025-06-14T18:07:09.188895"
  },
  {
    "problem_id": "calculus__p10",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem calculus__p10 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.071569,
    "timestamp": "2025-06-14T18:07:17.294273"
  },
  {
    "problem_id": "probability__p3_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.178192,
    "timestamp": "2025-06-14T18:07:17.473816"
  },
  {
    "problem_id": "real_analysis__p6_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.036306,
    "timestamp": "2025-06-14T18:07:17.511615"
  },
  {
    "problem_id": "calculus__p45",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.099875,
    "timestamp": "2025-06-14T18:07:27.513895"
  },
  {
    "problem_id": "probability__p1_4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 1.43971,
    "timestamp": "2025-06-14T18:07:52.693344"
  },
  {
    "problem_id": "real_analysis__p13_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.190599,
    "timestamp": "2025-06-14T18:07:52.885691"
  },
  {
    "problem_id": "aime_2024ii_p7",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.330641,
    "timestamp": "2025-06-14T18:08:53.373011"
  },
  {
    "problem_id": "aime_2025ii_p4",
    "dataset": "proverbench",
    "error_message": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1104, in process_problem\n    original_verification_pass = self.verify_lean_code(header_content, original_content, with_macro=False)\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 384, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "error_type": "TimeoutError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1104, in process_problem\n    original_verification_pass = self.verify_lean_code(header_content, original_content, with_macro=False)\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 384, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "processing_time_seconds": 233.076124,
    "timestamp": "2025-06-14T18:12:49.401588"
  },
  {
    "problem_id": "number_theory__p15",
    "dataset": "proverbench",
    "error_message": "Problem number_theory__p15 skipped: code too long (512 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 512,
    "processing_time_seconds": 0.000138,
    "timestamp": "2025-06-14T18:16:30.570006"
  },
  {
    "problem_id": "number_theory__p18_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.078017,
    "timestamp": "2025-06-14T18:17:01.053631"
  },
  {
    "problem_id": "elementary_algebra__p2",
    "dataset": "proverbench",
    "error_message": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1104, in process_problem\n    original_verification_pass = self.verify_lean_code(header_content, original_content, with_macro=False)\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 384, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "error_type": "TimeoutError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1104, in process_problem\n    original_verification_pass = self.verify_lean_code(header_content, original_content, with_macro=False)\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 384, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "processing_time_seconds": 127.78104,
    "timestamp": "2025-06-14T18:20:26.899030"
  },
  {
    "problem_id": "elementary_algebra__p6",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 6.102467,
    "timestamp": "2025-06-14T18:20:33.003667"
  },
  {
    "problem_id": "linear_algebra__p10_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.055969,
    "timestamp": "2025-06-14T18:21:11.031843"
  },
  {
    "problem_id": "linear_algebra__p12",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.067084,
    "timestamp": "2025-06-14T18:21:11.100830"
  },
  {
    "problem_id": "linear_algebra__p14_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.256823,
    "timestamp": "2025-06-14T18:21:11.359461"
  },
  {
    "problem_id": "linear_algebra__p15_2",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p15_2 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.199826,
    "timestamp": "2025-06-14T18:21:11.561233"
  },
  {
    "problem_id": "linear_algebra__p19_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 1.352875,
    "timestamp": "2025-06-14T18:21:12.916188"
  },
  {
    "problem_id": "linear_algebra__p20_3",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p20_3 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.111272,
    "timestamp": "2025-06-14T18:21:13.029485"
  },
  {
    "problem_id": "linear_algebra__p23_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.043256,
    "timestamp": "2025-06-14T18:21:13.075227"
  },
  {
    "problem_id": "abstract_algebra__p4_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.554398,
    "timestamp": "2025-06-14T18:21:14.597202"
  },
  {
    "problem_id": "abstract_algebra__p9",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 9.096097,
    "timestamp": "2025-06-14T18:21:25.470875"
  },
  {
    "problem_id": "abstract_algebra__p22",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.085461,
    "timestamp": "2025-06-14T18:21:27.209789"
  },
  {
    "problem_id": "calculus__p22",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.390418,
    "timestamp": "2025-06-14T18:21:27.603143"
  },
  {
    "problem_id": "calculus__p27",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.287574,
    "timestamp": "2025-06-14T18:21:41.959063"
  },
  {
    "problem_id": "calculus__p59",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.32737,
    "timestamp": "2025-06-14T18:21:42.796655"
  },
  {
    "problem_id": "real_analysis__p12_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.204218,
    "timestamp": "2025-06-14T18:22:09.652410"
  },
  {
    "problem_id": "abstract_algebra__p35",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 21.299202,
    "timestamp": "2025-06-14T18:22:30.954560"
  },
  {
    "problem_id": "abstract_algebra__p28",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 3.627381,
    "timestamp": "2025-06-14T18:22:34.584273"
  },
  {
    "problem_id": "real_analysis__p12_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.282967,
    "timestamp": "2025-06-14T18:22:34.869937"
  },
  {
    "problem_id": "abstract_algebra__p21",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 23.301125,
    "timestamp": "2025-06-14T18:22:58.173377"
  },
  {
    "problem_id": "calculus__p3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.20398,
    "timestamp": "2025-06-14T18:22:58.380312"
  },
  {
    "problem_id": "calculus__p20",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.341051,
    "timestamp": "2025-06-14T18:23:06.089593"
  },
  {
    "problem_id": "real_analysis__p6_4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.023544,
    "timestamp": "2025-06-14T18:23:12.033129"
  },
  {
    "problem_id": "calculus__p64_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.953773,
    "timestamp": "2025-06-14T18:23:12.990150"
  },
  {
    "problem_id": "real_analysis__p9",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.19083,
    "timestamp": "2025-06-14T18:23:43.147269"
  },
  {
    "problem_id": "complex_analysis__p4_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.054895,
    "timestamp": "2025-06-14T18:29:46.624623"
  },
  {
    "problem_id": "real_analysis__p6_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.141142,
    "timestamp": "2025-06-14T18:30:22.644219"
  },
  {
    "problem_id": "abstract_algebra__p29",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem abstract_algebra__p29 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.067959,
    "timestamp": "2025-06-14T18:30:23.344237"
  },
  {
    "problem_id": "calculus__p14",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem calculus__p14 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.140471,
    "timestamp": "2025-06-14T18:30:23.487358"
  },
  {
    "problem_id": "real_analysis__p3_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.418473,
    "timestamp": "2025-06-14T18:30:23.908524"
  },
  {
    "problem_id": "calculus__p21",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 15.010059,
    "timestamp": "2025-06-14T18:31:06.911896"
  },
  {
    "problem_id": "probability__p1_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.204165,
    "timestamp": "2025-06-14T18:31:07.118702"
  },
  {
    "problem_id": "calculus__p1",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem calculus__p1 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.123005,
    "timestamp": "2025-06-14T18:31:09.848490"
  },
  {
    "problem_id": "abstract_algebra__p2",
    "dataset": "proverbench",
    "error_message": "Problem abstract_algebra__p2 skipped: code too long (459 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 459,
    "processing_time_seconds": 0.00013,
    "timestamp": "2025-06-14T18:31:09.851307"
  },
  {
    "problem_id": "number_theory__p4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 1.528881,
    "timestamp": "2025-06-14T18:41:36.561973"
  },
  {
    "problem_id": "number_theory__p18_6",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.034565,
    "timestamp": "2025-06-14T18:45:14.792255"
  },
  {
    "problem_id": "elementary_algebra__p8_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.464135,
    "timestamp": "2025-06-14T18:46:23.508470"
  },
  {
    "problem_id": "elementary_algebra__p23",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.219513,
    "timestamp": "2025-06-14T18:46:55.650247"
  },
  {
    "problem_id": "linear_algebra__p3_3",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.218469,
    "timestamp": "2025-06-14T18:46:56.608359"
  },
  {
    "problem_id": "linear_algebra__p5_2",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p5_2 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.034695,
    "timestamp": "2025-06-14T18:46:56.646178"
  },
  {
    "problem_id": "linear_algebra__p10_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.470888,
    "timestamp": "2025-06-14T18:47:22.733978"
  },
  {
    "problem_id": "linear_algebra__p11_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.052398,
    "timestamp": "2025-06-14T18:47:22.792955"
  },
  {
    "problem_id": "linear_algebra__p14_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.055519,
    "timestamp": "2025-06-14T18:47:22.855007"
  },
  {
    "problem_id": "linear_algebra__p15_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.098372,
    "timestamp": "2025-06-14T18:47:22.960131"
  },
  {
    "problem_id": "linear_algebra__p18_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.047521,
    "timestamp": "2025-06-14T18:47:23.014484"
  },
  {
    "problem_id": "linear_algebra__p20_2",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p20_2 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.082134,
    "timestamp": "2025-06-14T18:47:23.103552"
  },
  {
    "problem_id": "abstract_algebra__p4_1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.47708,
    "timestamp": "2025-06-14T18:47:27.042628"
  },
  {
    "problem_id": "abstract_algebra__p1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 6.879624,
    "timestamp": "2025-06-14T18:47:33.928994"
  },
  {
    "problem_id": "abstract_algebra__p15",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.154309,
    "timestamp": "2025-06-14T18:47:34.086404"
  },
  {
    "problem_id": "linear_algebra__p20_1",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p20_1 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.046195,
    "timestamp": "2025-06-14T18:47:47.421920"
  },
  {
    "problem_id": "real_analysis__p7_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.038652,
    "timestamp": "2025-06-14T18:48:48.254688"
  },
  {
    "problem_id": "abstract_algebra__p34",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 2.130303,
    "timestamp": "2025-06-14T18:49:15.580976"
  },
  {
    "problem_id": "abstract_algebra__p33",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 11.107434,
    "timestamp": "2025-06-14T18:49:26.692235"
  },
  {
    "problem_id": "real_analysis__p11",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.281096,
    "timestamp": "2025-06-14T18:49:44.560149"
  },
  {
    "problem_id": "calculus__p62",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.119116,
    "timestamp": "2025-06-14T18:49:46.006930"
  },
  {
    "problem_id": "real_analysis__p1",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.021373,
    "timestamp": "2025-06-14T18:49:53.305128"
  },
  {
    "problem_id": "calculus__p64_4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.267715,
    "timestamp": "2025-06-14T18:49:55.014400"
  },
  {
    "problem_id": "complex_analysis__p4_2",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.065872,
    "timestamp": "2025-06-14T18:51:22.134429"
  },
  {
    "problem_id": "functional_analysis__p1_4",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.130616,
    "timestamp": "2025-06-14T18:51:22.269796"
  },
  {
    "problem_id": "real_analysis__p10",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.38343,
    "timestamp": "2025-06-14T18:51:25.138068"
  },
  {
    "problem_id": "abstract_algebra__p25",
    "dataset": "proverbench",
    "error_message": "Problem abstract_algebra__p25 skipped: code too long (420 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 420,
    "processing_time_seconds": 0.000228,
    "timestamp": "2025-06-14T18:51:25.144965"
  },
  {
    "problem_id": "linear_algebra__p7",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem linear_algebra__p7 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.311314,
    "timestamp": "2025-06-14T18:51:25.460565"
  },
  {
    "problem_id": "calculus__p64_5",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.1787,
    "timestamp": "2025-06-14T18:52:58.514532"
  },
  {
    "problem_id": "complex_analysis__p1",
    "dataset": "proverbench",
    "error_message": "Decomposition failed for problem complex_analysis__p1 - no steps generated",
    "failure_reason": "decomposition_failed",
    "processing_time_seconds": 0.014686,
    "timestamp": "2025-06-14T18:53:03.276662"
  },
  {
    "problem_id": "number_theory__p5",
    "dataset": "proverbench",
    "error_message": "Problem number_theory__p5 skipped: code too long (419 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 419,
    "processing_time_seconds": 0.000152,
    "timestamp": "2025-06-14T19:11:20.783153"
  },
  {
    "problem_id": "number_theory__p18_5",
    "dataset": "proverbench",
    "error_message": "Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.",
    "error_type": "RuntimeError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1110, in process_problem\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 993, in generate_in_place_holes\n    while i < len(lines):\n           ^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 583, in _process_content_for_holes\n    top_level_nodes = _process_tactics_to_tree(tactics)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 855, in _process_tactics_to_tree\n    raise RuntimeError(\"Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\")\nRuntimeError: Failed to decompose theorem: Have statement has a 'by' block but no sub-tactics were parsed for it. This indicates a major problem decomposition failure.\n",
    "processing_time_seconds": 0.046066,
    "timestamp": "2025-06-14T19:11:21.227819"
  },
  {
    "problem_id": "number_theory__p3_2",
    "dataset": "proverbench",
    "error_message": "cannot access local variable 'content_without_imports' where it is not associated with a value",
    "error_type": "UnboundLocalError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1267, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1150, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 592, in _process_content_for_holes\n    content_lines = content_without_imports.split('\\n')\n                    ^^^^^^^^^^^^^^^^^^^^^^^\nUnboundLocalError: cannot access local variable 'content_without_imports' where it is not associated with a value\n",
    "processing_time_seconds": 4.163198,
    "timestamp": "2025-06-14T23:28:39.884088"
  },
  {
    "problem_id": "number_theory__p3_2",
    "dataset": "proverbench",
    "error_message": "cannot import name 'Position' from 'lean_interact' (/home/matheye/anaconda3/lib/python3.12/site-packages/lean_interact/__init__.py)",
    "error_type": "ImportError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1382, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1265, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 614, in _process_content_for_holes\n    additional_bullet_nodes = self._detect_missed_bullet_points(content_lines, top_level_nodes)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 785, in _detect_missed_bullet_points\n    from lean_interact import Position\nImportError: cannot import name 'Position' from 'lean_interact' (/home/matheye/anaconda3/lib/python3.12/site-packages/lean_interact/__init__.py)\n",
    "processing_time_seconds": 4.386309,
    "timestamp": "2025-06-14T23:42:09.935147"
  }
]