{
  "problem_id": "putnam_2020_b5",
  "dataset": "putnam",
  "timestamp": "2025-06-16T03:32:34.963772",
  "header_file": "header.lean",
  "problem_file": "problem.lean",
  "original_verification_pass": false,
  "filled_verification_pass": false,
  "hole_verification_pass": false,
  "holes": [
    {
      "hole_id": "hole_3",
      "original_proof": "ring_nf at h \u22a2\nsimp [Complex.ext_iff, Complex.add_re, Complex.add_im, Complex.mul_re, Complex.mul_im, Complex.sub_re, Complex.sub_im,\n  Complex.one_re, Complex.one_im] at h \u22a2\nconstructor\ntry ring_nf at h \u22a2\ntry norm_num at h \u22a2\ntry linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_5",
      "original_proof": "calc\n  \u2016z 0 + z 1 + z 2 + z 3\u2016 \u2264 \u2016z 0\u2016 + \u2016z 1\u2016 + \u2016z 2\u2016 + \u2016z 3\u2016 := by\n    calc\n      \u2016z 0 + z 1 + z 2 + z 3\u2016 \u2264 \u2016z 0 + z 1 + z 2\u2016 + \u2016z 3\u2016 := norm_add_le _ _\n      _ \u2264 \u2016z 0 + z 1\u2016 + \u2016z 2\u2016 + \u2016z 3\u2016 := by gcongr <;> apply norm_add_le\n      _ \u2264 \u2016z 0\u2016 + \u2016z 1\u2016 + \u2016z 2\u2016 + \u2016z 3\u2016 := by gcongr <;> apply norm_add_le\n  _ = 4 := by simp [hzle1] <;> norm_num",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_6",
      "original_proof": "calc\n  \u20163 + z 0 * z 1 * z 2 * z 3\u2016 \u2264 \u2016(3 : \u2102)\u2016 + \u2016z 0 * z 1 * z 2 * z 3\u2016 := norm_add_le _ _\n  _ = 3 + \u2016z 0 * z 1 * z 2 * z 3\u2016 := by simp [Complex.norm_eq_abs]\n  _ \u2264 3 + 1 :=\n    by\n    have h\u2085 : \u2016z 0 * z 1 * z 2 * z 3\u2016 \u2264 1 := by\n      calc\n        \u2016z 0 * z 1 * z 2 * z 3\u2016 = \u2016z 0\u2016 * \u2016z 1\u2016 * \u2016z 2\u2016 * \u2016z 3\u2016 := by simp [norm_mul, Complex.abs.map_mul]\n        _ = 1 := by simp [hzle1] <;> norm_num\n        _ \u2264 1 := by norm_num\n    linarith\n  _ = 4 := by norm_num",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_7",
      "original_proof": "calc\n  \u2016z 0 * z 1 * z 2 * z 3\u2016 = \u2016z 0\u2016 * \u2016z 1\u2016 * \u2016z 2\u2016 * \u2016z 3\u2016 := by simp [norm_mul, Complex.abs.map_mul]\n  _ = 1 := by simp [hzle1] <;> norm_num\n  _ \u2264 1 := by norm_num",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_8",
      "original_proof": "rw [h\u2081]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_15",
      "original_proof": "exact by\n  norm_num [Fin.forall_fin_succ, Complex.norm_eq_abs, Complex.abs, Complex.normSq, Real.sqrt_lt, Real.sqrt_le_sqrt,\n      add_nonneg, mul_self_nonneg, mul_self_nonneg, mul_self_nonneg, mul_self_nonneg] at h\u2087 h\u2081 hzle1 hzne1 \u22a2 <;>\n    nlinarith [sq_nonneg (z 0).re, sq_nonneg (z 0).im, sq_nonneg (z 1).re, sq_nonneg (z 1).im, sq_nonneg (z 2).re,\n      sq_nonneg (z 2).im, sq_nonneg (z 3).re, sq_nonneg (z 3).im, hzle1 0, hzle1 1, hzle1 2, hzle1 3, hzne1 0, hzne1 1,\n      hzne1 2, hzne1 3]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_14",
      "original_proof": "exact h\u2081\u2082",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_13",
      "original_proof": "exact h\u2081\u2081",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_12",
      "original_proof": "exact h\u2081\u2080",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_11",
      "original_proof": "exact h\u2089",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_10",
      "original_proof": "linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_9",
      "original_proof": "exact by\n  simp_all [Complex.norm_eq_abs, Complex.abs, Complex.normSq, Real.sqrt_lt, Real.sqrt_le_sqrt, add_nonneg,\n      mul_self_nonneg, mul_self_nonneg, mul_self_nonneg, mul_self_nonneg] <;>\n    nlinarith [sq_nonneg (z 0).re, sq_nonneg (z 0).im, sq_nonneg (z 1).re, sq_nonneg (z 1).im, sq_nonneg (z 2).re,\n      sq_nonneg (z 2).im, sq_nonneg (z 3).re, sq_nonneg (z 3).im, hzle1 0, hzle1 1, hzle1 2, hzle1 3, hzne1 0, hzne1 1,\n      hzne1 2, hzne1 3]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_21",
      "original_proof": "exact by\n  norm_num [Fin.forall_fin_succ, Complex.norm_eq_abs, Complex.abs, Complex.normSq, Real.sqrt_lt, Real.sqrt_le_sqrt,\n      add_nonneg, mul_self_nonneg, mul_self_nonneg, mul_self_nonneg, mul_self_nonneg] at h\u2087 h\u2081 hzle1 hzne1 \u22a2 <;>\n    nlinarith [sq_nonneg (z 0).re, sq_nonneg (z 0).im, sq_nonneg (z 1).re, sq_nonneg (z 1).im, sq_nonneg (z 2).re,\n      sq_nonneg (z 2).im, sq_nonneg (z 3).re, sq_nonneg (z 3).im, hzle1 0, hzle1 1, hzle1 2, hzle1 3, hzne1 0, hzne1 1,\n      hzne1 2, hzne1 3]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_20",
      "original_proof": "exact h\u2081\u2082",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_19",
      "original_proof": "exact h\u2081\u2081",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_18",
      "original_proof": "exact h\u2081\u2080",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_17",
      "original_proof": "exact h\u2089",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_16",
      "original_proof": "linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_4",
      "original_proof": "exact h\u2087",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_28",
      "original_proof": "exact by\n  norm_num [Fin.forall_fin_succ, Complex.norm_eq_abs, Complex.abs, Complex.normSq, Real.sqrt_lt, Real.sqrt_le_sqrt,\n      add_nonneg, mul_self_nonneg, mul_self_nonneg, mul_self_nonneg, mul_self_nonneg] at h\u2087 h\u2081 hzle1 hzne1 h\u2086 \u22a2 <;>\n    nlinarith [sq_nonneg (z 0).re, sq_nonneg (z 0).im, sq_nonneg (z 1).re, sq_nonneg (z 1).im, sq_nonneg (z 2).re,\n      sq_nonneg (z 2).im, sq_nonneg (z 3).re, sq_nonneg (z 3).im, hzle1 0, hzle1 1, hzle1 2, hzle1 3, hzne1 0, hzne1 1,\n      hzne1 2, hzne1 3]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_27",
      "original_proof": "exact h\u2081\u2082",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_26",
      "original_proof": "exact h\u2081\u2081",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_25",
      "original_proof": "exact h\u2081\u2080",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_24",
      "original_proof": "exact h\u2089",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_29",
      "original_proof": "calc\n  \u20163 + z 0 * z 1 * z 2 * z 3\u2016 \u2264 \u2016(3 : \u2102)\u2016 + \u2016z 0 * z 1 * z 2 * z 3\u2016 := norm_add_le _ _\n  _ = 3 + \u2016z 0 * z 1 * z 2 * z 3\u2016 := by simp [Complex.norm_eq_abs]\n  _ \u2264 3 + 1 :=\n    by\n    have h\u2081\u2080 : \u2016z 0 * z 1 * z 2 * z 3\u2016 \u2264 1 := by\n      calc\n        \u2016z 0 * z 1 * z 2 * z 3\u2016 = \u2016z 0\u2016 * \u2016z 1\u2016 * \u2016z 2\u2016 * \u2016z 3\u2016 := by simp [norm_mul, Complex.abs.map_mul]\n        _ = 1 := by simp [hzle1] <;> norm_num\n        _ \u2264 1 := by norm_num\n    linarith\n  _ = 4 := by norm_num",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_30",
      "original_proof": "calc\n  \u2016z 0 * z 1 * z 2 * z 3\u2016 = \u2016z 0\u2016 * \u2016z 1\u2016 * \u2016z 2\u2016 * \u2016z 3\u2016 := by simp [norm_mul, Complex.abs.map_mul]\n  _ = 1 := by simp [hzle1] <;> norm_num\n  _ \u2264 1 := by norm_num",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_31",
      "original_proof": "rw [h\u2081]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_23",
      "original_proof": "linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_22",
      "original_proof": "exact h\u2087",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_37",
      "original_proof": "exact by\n  norm_num [Fin.forall_fin_succ, Complex.norm_eq_abs, Complex.abs, Complex.normSq, Real.sqrt_lt, Real.sqrt_le_sqrt,\n      add_nonneg, mul_self_nonneg, mul_self_nonneg, mul_self_nonneg, mul_self_nonneg] at h\u2088 h\u2081 hzle1 hzne1 h\u2086 h\u2087 \u22a2 <;>\n    nlinarith [sq_nonneg (z 0).re, sq_nonneg (z 0).im, sq_nonneg (z 1).re, sq_nonneg (z 1).im, sq_nonneg (z 2).re,\n      sq_nonneg (z 2).im, sq_nonneg (z 3).re, sq_nonneg (z 3).im, hzle1 0, hzle1 1, hzle1 2, hzle1 3, hzne1 0, hzne1 1,\n      hzne1 2, hzne1 3]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_36",
      "original_proof": "exact h\u2081\u2082",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_35",
      "original_proof": "exact h\u2081\u2081",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_34",
      "original_proof": "exact h\u2081\u2080",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_38",
      "original_proof": "calc\n  \u20163 + z 0 * z 1 * z 2 * z 3\u2016 \u2264 \u2016(3 : \u2102)\u2016 + \u2016z 0 * z 1 * z 2 * z 3\u2016 := norm_add_le _ _\n  _ = 3 + \u2016z 0 * z 1 * z 2 * z 3\u2016 := by simp [Complex.norm_eq_abs]\n  _ \u2264 3 + 1 :=\n    by\n    have h\u2081\u2081 : \u2016z 0 * z 1 * z 2 * z 3\u2016 \u2264 1 := by\n      calc\n        \u2016z 0 * z 1 * z 2 * z 3\u2016 = \u2016z 0\u2016 * \u2016z 1\u2016 * \u2016z 2\u2016 * \u2016z 3\u2016 := by simp [norm_mul, Complex.abs.map_mul]\n        _ = 1 := by simp [hzle1] <;> norm_num\n        _ \u2264 1 := by norm_num\n    linarith\n  _ = 4 := by norm_num",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_39",
      "original_proof": "calc\n  \u2016z 0 * z 1 * z 2 * z 3\u2016 = \u2016z 0\u2016 * \u2016z 1\u2016 * \u2016z 2\u2016 * \u2016z 3\u2016 := by simp [norm_mul, Complex.abs.map_mul]\n  _ = 1 := by simp [hzle1] <;> norm_num\n  _ \u2264 1 := by norm_num",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_40",
      "original_proof": "rw [h\u2081]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_33",
      "original_proof": "linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_32",
      "original_proof": "exact h\u2088",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_43",
      "original_proof": "simpa [h\u2086, h\u2087, h\u2088] using h\u2081\u2083",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_44",
      "original_proof": "ring_nf at h\u2081\u2085 \u22a2\nsimp_all [Complex.ext_iff, pow_two, pow_three]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_48",
      "original_proof": "simp_all [Complex.ext_iff, pow_two, pow_three, Complex.abs, Complex.normSq, Real.sqrt_eq_iff_sq_eq, sq_nonneg,\n  add_nonneg, mul_self_nonneg, mul_self_nonneg, mul_self_nonneg, mul_self_nonneg]\nring_nf at *\nnorm_num at *\nnlinarith [sq_nonneg (z 0).re, sq_nonneg (z 0).im, hzle1 0, hzle1 1, hzle1 2, hzle1 3, Complex.sq_abs (z 0),\n  Complex.sq_abs (z 1), Complex.sq_abs (z 2), Complex.sq_abs (z 3)]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_47",
      "original_proof": "simp_all",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_46",
      "original_proof": "simp_all",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_45",
      "original_proof": "simp_all",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_42",
      "original_proof": "simp_all",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_41",
      "original_proof": "simp_all",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_2",
      "original_proof": "contradiction",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_1",
      "original_proof": "exact h_main",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    }
  ]
}