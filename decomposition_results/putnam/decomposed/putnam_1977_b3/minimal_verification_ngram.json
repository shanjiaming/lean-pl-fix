{
  "problem_id": "putnam_1977_b3",
  "dataset": "putnam",
  "verification_count": 1,
  "max_verifications": 3,
  "original_verification_pass": false,
  "hole_verification_pass": true,
  "filled_verification_pass": true,
  "synthesized_verification_pass": true,
  "complete_solve_success": false,
  "original_tactics_test": {
    "hole_1": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_2": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_3": {
      "success": true,
      "error_message": null,
      "original_tactic": "apply Nat.Prime.irrational_sqrt\nnorm_num"
    },
    "hole_4": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2086 \u27e82 * q + 1, by simp [h\u2085]\u27e9"
    },
    "hole_5": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_6": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_7": {
      "success": true,
      "error_message": null,
      "original_tactic": "apply Nat.Prime.irrational_sqrt\nnorm_num"
    },
    "hole_8": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2086 \u27e82 * q + 1, by simp [h\u2085]\u27e9"
    },
    "hole_9": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_10": {
      "success": true,
      "error_message": null,
      "original_tactic": "apply Nat.Prime.irrational_sqrt\nnorm_num"
    },
    "hole_11": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2085 \u27e82 - q, by simp [h\u2084]\u27e9"
    },
    "hole_12": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]"
    },
    "hole_13": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]"
    },
    "hole_14": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]"
    },
    "hole_15": {
      "success": true,
      "error_message": null,
      "original_tactic": "ring_nf"
    },
    "hole_16": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2083"
    },
    "hole_17": {
      "success": false,
      "error_message": "Lean error:\nunknown constant 'putnam_1977_b3.match_1'",
      "original_tactic": "exfalso\nsimp_all [hP, hbalanced, hB, Function.iterate_succ_apply']\nnorm_num at *\ntry contradiction\ntry linarith\ntry nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)]\ntry\n  {cases t with\n  | mk a b =>\n    cases b with\n    | mk b c =>\n      simp_all [hP, hbalanced, hB, Function.iterate_succ_apply'] <;> norm_num at * <;> (try contradiction) <;>\n          (try linarith) <;>\n        (try nlinarith [Real.sqrt_nonneg 2, Real.sq_sqrt (show 0 \u2264 2 by norm_num)])\n}"
    },
    "hole_18": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2084"
    },
    "hole_19": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2081"
    },
    "hole_20": {
      "success": true,
      "error_message": null,
      "original_tactic": "constructor\nintro h\nexact h_main h\nintro h\nexfalso\nexact h"
    },
    "hole_21": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h_final"
    }
  },
  "successful_tactics": {
    "hole_1": "linarith",
    "hole_2": "linarith",
    "hole_3": "norm_cast",
    "hole_5": "linarith",
    "hole_6": "linarith",
    "hole_7": "norm_cast",
    "hole_9": "linarith",
    "hole_10": "norm_cast",
    "hole_15": "norm_num",
    "hole_16": "norm_num",
    "hole_18": "simpa",
    "hole_19": "simpa",
    "hole_21": "norm_cast"
  },
  "tactic_mapping": {
    "hole_1": "linarith",
    "hole_2": "linarith",
    "hole_3": "norm_cast",
    "hole_5": "linarith",
    "hole_6": "linarith",
    "hole_7": "norm_cast",
    "hole_9": "linarith",
    "hole_10": "norm_cast",
    "hole_15": "norm_num",
    "hole_16": "norm_num",
    "hole_18": "simpa",
    "hole_19": "simpa",
    "hole_21": "norm_cast",
    "hole_20": "admit",
    "hole_17": "admit",
    "hole_11": "admit",
    "hole_14": "admit",
    "hole_13": "admit",
    "hole_12": "admit",
    "hole_4": "admit",
    "hole_8": "admit"
  },
  "proof_state_tests": 0,
  "tactic_attempts": {},
  "processing_time_seconds": 307.091359,
  "constraint_satisfied": true,
  "tactics_replaced": 13,
  "timestamp": "2025-06-20T15:09:32.322442"
}