theorem h₁₄ (dist_fun : ℝ → ℝ) (hdist_fun : dist_fun = fun x => min (x - ↑⌊x⌋) (↑⌈x⌉ - x)) (fact h₁ : Tendsto (fun N => ↑(∏ n ∈ Finset.Icc 1 N, 2 * n / (2 * n - 1) * (2 * n / (2 * n + 1)))) atTop (𝓝 (π / 2))) (h₂ : 3 < π) (h₃ : π ≤ 4) (h₄ : (fun N => ∏ n ∈ Finset.Icc 1 N, 2 * ↑n / (2 * ↑n - 1) * (2 * ↑n / (2 * ↑n + 1))) 1 = 4 / 3) (h₅ : ∏ n ∈ Finset.Icc 1 1, 2 * ↑n / (2 * ↑n - 1) * (2 * ↑n / (2 * ↑n + 1)) = 4 / 3) (h₆ : Tendsto (fun N => ↑(∏ n ∈ Finset.Icc 1 N, 2 * n / (2 * n - 1) * (2 * n / (2 * n + 1)))) atTop (𝓝 (π / 2))) (h₇ : ∏ n ∈ Finset.Icc 1 1, 2 * ↑n / (2 * ↑n - 1) * (2 * ↑n / (2 * ↑n + 1)) = 4 / 3) (h₈ : Tendsto (fun N => ∏ n ∈ Finset.Icc 1 N, 2 * ↑n / (2 * ↑n - 1) * (2 * ↑n / (2 * ↑n + 1))) atTop (𝓝 (π / 2))) (N✝¹ : ℕ) (hN✝ : N✝¹ ≥ 1) (h₁₀ : ∀ n ≥ 1, 2 * ↑n / (2 * ↑n - 1) * (2 * ↑n / (2 * ↑n + 1)) > 1) (N✝ N : ℕ) (hN : Nat.le 1 N) (IH : ∏ n ∈ Finset.Icc 1 N, 2 * ↑n / (2 * ↑n - 1) * (2 * ↑n / (2 * ↑n + 1)) > 1) (h₁₂ : 2 * ↑N.succ / (2 * ↑N.succ - 1) * (2 * ↑N.succ / (2 * ↑N.succ + 1)) > 1) (n : ℕ) (hn : n ∈ Finset.Icc 1 N) : n ≥ 1 := by
  simp [Finset.mem_Icc] at hn
  linarith