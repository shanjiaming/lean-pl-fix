theorem h₅₁₉ (h_main : (MvPolynomial.X 1 - 2 * MvPolynomial.X 0) * (MvPolynomial.X 1 - 2 * MvPolynomial.X 0 - 1) ≠ 0) (a : ℝ) (h₁ :  (MvPolynomial.eval fun n => if n = 0 then (↑⌊a⌋ : ℝ) else (↑⌊2 * a⌋ : ℝ) : MvPolynomial (Fin 2) ℝ → ℝ)      ((MvPolynomial.X 1 - 2 * MvPolynomial.X 0) * (MvPolynomial.X 1 - 2 * MvPolynomial.X 0 - 1)) =    ((↑⌊2 * a⌋ : ℝ) - 2 * (↑⌊a⌋ : ℝ)) * ((↑⌊2 * a⌋ : ℝ) - 2 * (↑⌊a⌋ : ℝ) - 1)) (h₃ : (↑⌊2 * a⌋ : ℝ) - 2 * (↑⌊a⌋ : ℝ) = (↑⌊2 * a⌋ : ℝ) - 2 * (↑⌊a⌋ : ℝ)) (h₅₂ : a - 1 < (↑⌊a⌋ : ℝ)) (h₅₃ : (↑⌊a⌋ : ℝ) ≤ a) (h₅₄ : 2 * a < 2 * (↑⌊a⌋ : ℝ) + 2) (h₅₅ h₅₇ : 2 * (↑⌊a⌋ : ℝ) ≤ 2 * a) (h₅₈ : 2 * a < 2 * (↑⌊a⌋ : ℝ) + 2) (h₅₁₀ : 2 * (↑⌊a⌋ : ℝ) ≤ 2 * a) (h₅₁₁ : 2 * a < 2 * (↑⌊a⌋ : ℝ) + 2) (h₅₁₄ : ⌊2 * a⌋ ≥ 2 * ⌊a⌋) (h₅₁₈ : 2 * a < 2 * (↑⌊a⌋ : ℝ) + 2) : ⌊2 * a⌋ < 2 * ⌊a⌋ + 2 := by
  --  norm_cast at h₅₁₈ ⊢ <;>
  --    linarith [Int.floor_le ((2 : ℝ) * a), Int.floor_le (a : ℝ), Int.lt_floor_add_one ((2 : ℝ) * a),
  --      Int.lt_floor_add_one (a : ℝ)]
  hole