{
  "problem_id": "putnam_2015_a2",
  "dataset": "putnam",
  "timestamp": "2025-06-14T05:41:00.320718",
  "header_file": "header.lean",
  "problem_file": "problem.lean",
  "original_verification_pass": false,
  "filled_verification_pass": false,
  "hole_verification_pass": false,
  "holes": [
    {
      "hole_id": "hole_1",
      "original_proof": "norm_num [Nat.odd_iff_not_even, Nat.even_iff, Nat.mod_eq_of_lt]\ndecide",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_2",
      "original_proof": "norm_num [Nat.Prime]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_3",
      "original_proof": "intro n\ninduction n using Nat.strong_induction_on with\n| h n ih =>\n  match n with\n  | 0 => norm_num [abase, arec]\n  | 1 => norm_num [abase, arec]\n  | 2 => norm_num [abase, arec]\n  | 3 => norm_num [abase, arec]\n  | 4 => norm_num [abase, arec]\n  | 5 => norm_num [abase, arec]\n  | 6 => norm_num [abase, arec]\n  | 7 => norm_num [abase, arec]\n  | 8 => norm_num [abase, arec]\n  | 9 => norm_num [abase, arec]\n  | 10 => norm_num [abase, arec]\n  | 11 => norm_num [abase, arec]\n  | 12 => norm_num [abase, arec]\n  | 13 => norm_num [abase, arec]\n  | 14 => norm_num [abase, arec]\n  | 15 => norm_num [abase, arec]\n  | 16 => norm_num [abase, arec]\n  | 17 => norm_num [abase, arec]\n  | 18 => norm_num [abase, arec]\n  | 19 => norm_num [abase, arec]\n  | n + 20 =>\n    have h\u2085 := ih (n + 19) (by omega)\n    have h\u2086 := ih (n + 18) (by omega)\n    have h\u2087 := ih (n + 17) (by omega)\n    have h\u2088 := ih (n + 16) (by omega)\n    have h\u2089 := ih (n + 15) (by omega)\n    have h\u2081\u2080 := ih (n + 14) (by omega)\n    have h\u2081\u2081 := ih (n + 13) (by omega)\n    have h\u2081\u2082 := ih (n + 12) (by omega)\n    have h\u2081\u2083 := ih (n + 11) (by omega)\n    have h\u2081\u2084 := ih (n + 10) (by omega)\n    have h\u2081\u2085 := ih (n + 9) (by omega)\n    have h\u2081\u2086 := ih (n + 8) (by omega)\n    have h\u2081\u2087 := ih (n + 7) (by omega)\n    have h\u2081\u2088 := ih (n + 6) (by omega)\n    have h\u2081\u2089 := ih (n + 5) (by omega)\n    have h\u2082\u2080 := ih (n + 4) (by omega)\n    have h\u2082\u2081 := ih (n + 3) (by omega)\n    have h\u2082\u2082 := ih (n + 2) (by omega)\n    have h\u2082\u2083 := ih (n + 1) (by omega)\n    have h\u2082\u2084 := ih n (by omega)\n    norm_num [abase, arec, Int.mul_emod,\n              Int.sub_emod] at h\u2085 h\u2086 h\u2087 h\u2088 h\u2089 h\u2081\u2080 h\u2081\u2081 h\u2081\u2082 h\u2081\u2083 h\u2081\u2084 h\u2081\u2085 h\u2081\u2086 h\u2081\u2087 h\u2081\u2088 h\u2081\u2089 h\u2082\u2080 h\u2082\u2081 h\u2082\u2082 h\u2082\u2083 h\u2082\u2084 \u22a2 <;>\n            (try omega) <;>\n          (try ring_nf at * <;> omega) <;>\n        (try norm_num at * <;> omega) <;>\n      (try {simp_all [Nat.mod_eq_of_lt] <;> omega\n        })",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    }
  ]
}