theorem h‚ÇÅ‚ÇÖ (h_main : ‚àÄ N ‚â• 2, ‚àè n ‚àà Finset.Icc 2 N, (‚Üën ^ 3 - 1) / (‚Üën ^ 3 + 1) = 2 * (‚ÜëN ^ 2 + ‚ÜëN + 1) / (3 * ‚ÜëN * (‚ÜëN + 1))) (h‚ÇÅ‚ÇÅ : (fun N => 2 * (‚ÜëN ^ 2 + ‚ÜëN + 1) / (3 * ‚ÜëN * (‚ÜëN + 1))) = fun N => 2 * (‚ÜëN ^ 2 + ‚ÜëN + 1) / (3 * ‚ÜëN * (‚ÜëN + 1))) : Tendsto (fun N => 2 * (‚ÜëN ^ 2 + ‚ÜëN + 1) / (3 * ‚ÜëN * (‚ÜëN + 1))) atTop (ùìù (2 / 3)) := by
  --  convert Tendsto.const_mul (2 / 3 : ‚Ñù) (tendsto_const_nhds : Tendsto (fun (N : ‚Ñ§) => (1 : ‚Ñù)) atTop (ùìù 1)) using 1 <;>
  --                    simp [mul_comm] <;>
  --                  field_simp <;>
                ring_nf <;>
              norm_num <;>
            simp_all [mul_comm] <;>
          norm_num <;>
        simp_all [mul_comm] <;>
      norm_num <;>
    linarith
  hole