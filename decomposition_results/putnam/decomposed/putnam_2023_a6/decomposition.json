{
  "problem_id": "putnam_2023_a6",
  "dataset": "putnam",
  "timestamp": "2025-06-14T04:54:11.862185",
  "header_file": "header.lean",
  "problem_file": "problem.lean",
  "original_verification_pass": false,
  "filled_verification_pass": false,
  "hole_verification_pass": false,
  "holes": [
    {
      "hole_id": "hole_1",
      "original_proof": "intro n hn\nsimp only [Set.mem_setOf_eq, Set.mem_singleton_iff] at hn \u22a2\nexact hn.1",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_2",
      "original_proof": "simpa using hn",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_3",
      "original_proof": "simpa using hg\u2081",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_4",
      "original_proof": "intro h\u2089\nsimp_all",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_5",
      "original_proof": "simpa using hg\u2081",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_6",
      "original_proof": "intro h\u2081\u2081\nsimp_all",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_7",
      "original_proof": "simpa using hg\u2081",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_8",
      "original_proof": "simpa using hg\u2081",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_9",
      "original_proof": "intro h\u2081\u2088\nsimp_all",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_10",
      "original_proof": "cases g with\n| nil => simp_all\n| cons a as =>\n  cases as with\n  | nil => use a <;> simp_all [List.length_eq_one]\n  | cons a' as' => simp_all [List.length_eq_one] <;> aesop",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    }
  ]
}