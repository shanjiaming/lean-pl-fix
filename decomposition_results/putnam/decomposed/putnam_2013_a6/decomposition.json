{
  "problem_id": "putnam_2013_a6",
  "dataset": "putnam",
  "timestamp": "2025-06-14T12:25:49.396328",
  "header_file": "header.lean",
  "problem_file": "problem.lean",
  "original_verification_pass": false,
  "filled_verification_pass": false,
  "hole_verification_pass": false,
  "holes": [
    {
      "hole_id": "hole_4",
      "original_proof": "ext\nsimp [Prod.ext_iff]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_3",
      "original_proof": "rw [h\u2087]\nsimp [hw12]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_6",
      "original_proof": "apply\n  Finset.single_le_sum\n    (fun s' _ =>\n      by\n      have h\u2089 : w (s - s').1 (s - s').2 \u2265 -4 :=\n        by\n        have h\u2081\u2080 : (|(s - s').1| > 2 \u2228 |(s - s').2| > 2) \u2192 w (s - s').1 (s - s').2 = 0 :=\n          by\n          intro h\n          exact hw0 _ _ h\n        have h\u2081\u2081 : w (s - s').1 (s - s').2 \u2265 -4 :=\n          by\n          by_cases h\u2081\u2082 : |(s - s').1| > 2 \u2228 |(s - s').2| > 2\n          \u00b7 have h\u2081\u2083 : w (s - s').1 (s - s').2 = 0 := h\u2081\u2080 h\u2081\u2082\n            rw [h\u2081\u2083]\n            norm_num\n          \u00b7 have h\u2081\u2084 : \u00ac(|(s - s').1| > 2 \u2228 |(s - s').2| > 2) := h\u2081\u2082\n            have h\u2081\u2085 : |(s - s').1| \u2264 2 := by\n              by_contra h\n              have h\u2081\u2086 : |(s - s').1| > 2 := by linarith\n              have h\u2081\u2087 : |(s - s').1| > 2 \u2228 |(s - s').2| > 2 := Or.inl h\u2081\u2086\n              contradiction\n            have h\u2081\u2086 : |(s - s').2| \u2264 2 := by\n              by_contra h\n              have h\u2081\u2087 : |(s - s').2| > 2 := by linarith\n              have h\u2081\u2088 : |(s - s').1| > 2 \u2228 |(s - s').2| > 2 := Or.inr h\u2081\u2087\n              contradiction\n            have h\u2081\u2087 : (s - s').1 = 0 \u2228 (s - s').1 = 1 \u2228 (s - s').1 = -1 \u2228 (s - s').1 = 2 \u2228 (s - s').1 = -2 :=\n              by\n              have h\u2081\u2088 : |(s - s').1| \u2264 2 := h\u2081\u2085\n              have h\u2081\u2089 : (s - s').1 \u2264 2 := by linarith [abs_le.mp h\u2081\u2088]\n              have h\u2082\u2080 : (s - s').1 \u2265 -2 := by linarith [abs_le.mp h\u2081\u2088]\n              interval_cases (s - s').1 <;> norm_num at h\u2081\u2088 \u22a2 <;> omega\n            have h\u2081\u2088 : (s - s').2 = 0 \u2228 (s - s').2 = 1 \u2228 (s - s').2 = -1 \u2228 (s - s').2 = 2 \u2228 (s - s').2 = -2 :=\n              by\n              have h\u2081\u2089 : |(s - s').2| \u2264 2 := h\u2081\u2086\n              have h\u2082\u2080 : (s - s').2 \u2264 2 := by linarith [abs_le.mp h\u2081\u2089]\n              have h\u2082\u2081 : (s - s').2 \u2265 -2 := by linarith [abs_le.mp h\u2081\u2089]\n              interval_cases (s - s').2 <;> norm_num at h\u2081\u2089 \u22a2 <;> omega\n            rcases h\u2081\u2087 with (h\u2081\u2089 | h\u2081\u2089 | h\u2081\u2089 | h\u2081\u2089 | h\u2081\u2089) <;> rcases h\u2081\u2088 with (h\u2082\u2080 | h\u2082\u2080 | h\u2082\u2080 | h\u2082\u2080 | h\u2082\u2080) <;>\n                      simp [h\u2081\u2089, h\u2082\u2080, hwn1, hwn2, hw2, hw4, hwn4, hw12, hw0] at * <;>\n                    norm_num <;>\n                  omega <;>\n                omega <;>\n              omega\n      linarith)\n    (by simp [hs])",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_7",
      "original_proof": "intro h\nexact hw0 _ _ h",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_10",
      "original_proof": "linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_9",
      "original_proof": "contradiction",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_12",
      "original_proof": "linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_11",
      "original_proof": "contradiction",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_14",
      "original_proof": "linarith [abs_le.mp h\u2081\u2088]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_15",
      "original_proof": "linarith [abs_le.mp h\u2081\u2088]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_13",
      "original_proof": "interval_cases (s - s').1\nnorm_num at h\u2081\u2088 \u22a2",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_17",
      "original_proof": "linarith [abs_le.mp h\u2081\u2089]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_18",
      "original_proof": "linarith [abs_le.mp h\u2081\u2089]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_16",
      "original_proof": "interval_cases (s - s').2\nnorm_num at h\u2081\u2089 \u22a2",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_8",
      "original_proof": "rcases h\u2081\u2087 with (h\u2081\u2089 | h\u2081\u2089 | h\u2081\u2089 | h\u2081\u2089 | h\u2081\u2089)\nrcases h\u2081\u2088 with (h\u2082\u2080 | h\u2082\u2080 | h\u2082\u2080 | h\u2082\u2080 | h\u2082\u2080)\nsimp [h\u2081\u2089, h\u2082\u2080, hwn1, hwn2, hw2, hw4, hwn4, hw12, hw0] at *",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_5",
      "original_proof": "linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_2",
      "original_proof": "linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_1",
      "original_proof": "linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_19",
      "original_proof": "calc\n  _ \u2265 \u2211 s in S, \u2211 s' in S, w (s - s').1 (s - s').2 := by rfl\n  _ \u2265 \u2211 s in S, 4 := by\n    apply Finset.sum_le_sum\n    intro s hs\n    exact h\u2084 s hs",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_20",
      "original_proof": "simp [mul_comm]",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_21",
      "original_proof": "linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_24",
      "original_proof": "apply Finset.card_pos.mpr\nexact h\u2081\u2081",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_23",
      "original_proof": "exact h\u2081\u2082",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_25",
      "original_proof": "exact_mod_cast h\u2081\u2080",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_22",
      "original_proof": "nlinarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    }
  ]
}