theorem h₁₄ (n : ℕ) (hn : n > 0) (h_base : 1 / 2 = ∑ i ∈ Finset.range 1, (↑((1 + i - 1).choose i) : ℚ) * 2 ^ (-1 - (↑i : ℤ))) (k : ℕ) (hk : k > 0) (hk_sum : 1 / 2 = ∑ i ∈ Finset.range k, (↑((k + i - 1).choose i) : ℚ) * 2 ^ (-(↑k : ℤ) - (↑i : ℤ))) (h₃ : k ≥ 0) (h₄ :  ∑ i ∈ Finset.range (k + 1), (↑((k + 1 + i - 1).choose i) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ)) =    ∑ i ∈ Finset.range (k + 1), (↑((k + i).choose i) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ))) (h₆ :  ∑ i ∈ Finset.range (k + 1), (↑((k + i).choose i) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ)) =    ∑ i ∈ Finset.range (k + 1),      ((↑((k + i - 1).choose i) : ℚ) + (↑((k + i - 1).choose (i - 1)) : ℚ)) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ))) (h₇ :  ∑ i ∈ Finset.range (k + 1),      ((↑((k + i - 1).choose i) : ℚ) + (↑((k + i - 1).choose (i - 1)) : ℚ)) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ)) =    ∑ i ∈ Finset.range (k + 1),      ((↑((k + i - 1).choose i) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ)) +        (↑((k + i - 1).choose (i - 1)) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ)))) (h₈ :  ∑ i ∈ Finset.range (k + 1),      ((↑((k + i - 1).choose i) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ)) +        (↑((k + i - 1).choose (i - 1)) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ))) =    ∑ i ∈ Finset.range (k + 1), (↑((k + i - 1).choose i) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ)) +      ∑ i ∈ Finset.range (k + 1), (↑((k + i - 1).choose (i - 1)) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ))) (h₉ :  ∑ i ∈ Finset.range (k + 1), (↑((k + i - 1).choose i) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ)) =    ∑ i ∈ Finset.range (k + 1), (↑((k + i - 1).choose i) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ))) (h₁₀ :  ∑ i ∈ Finset.range (k + 1), (↑((k + i - 1).choose (i - 1)) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ)) =    ∑ i ∈ Finset.range (k + 1), (↑((k + i - 1).choose (i - 1)) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ))) : ∑ i ∈ Finset.range (k + 1), (↑((k + i - 1).choose i) : ℚ) * 2 ^ (-((↑k : ℤ) + 1) - (↑i : ℤ)) = 1 / 2 :=
  by
  simp_all [Finset.sum_range_succ, Nat.choose_succ_succ, add_comm, add_left_comm, add_assoc] <;> ring_nf at * <;>
            norm_num at * <;>
          field_simp at * <;>
        ring_nf at * <;>
      norm_num at * <;>
    linarith