{
  "problem_id": "putnam_1986_a1",
  "dataset": "putnam",
  "verification_count": 1,
  "max_verifications": 3,
  "original_verification_pass": true,
  "hole_verification_pass": true,
  "filled_verification_pass": true,
  "synthesized_verification_pass": true,
  "complete_solve_success": false,
  "original_tactics_test": {
    "hole_1": {
      "success": true,
      "error_message": null,
      "original_tactic": "norm_num [Set.mem_setOf_eq]"
    },
    "hole_2": {
      "success": true,
      "error_message": null,
      "original_tactic": "refine' \u27e83, h\u2082, _\u27e9\nnorm_num"
    },
    "hole_3": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact hx"
    },
    "hole_4": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith [sq_nonneg (x ^ 2 - 9), sq_nonneg (x ^ 2 - 4)]"
    },
    "hole_5": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith [sq_nonneg (x ^ 2 - 9), sq_nonneg (x ^ 2 - 4)]"
    },
    "hole_6": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith"
    },
    "hole_7": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith"
    },
    "hole_8": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith"
    },
    "hole_9": {
      "success": true,
      "error_message": null,
      "original_tactic": "assumption"
    },
    "hole_10": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith [sq_nonneg (x - 3), sq_nonneg (x + 3), sq_nonneg (x - 2), sq_nonneg (x + 2)]"
    },
    "hole_11": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_12": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith"
    },
    "hole_13": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith [sq_nonneg (x - 3), sq_nonneg (x + 3), sq_nonneg (x - 2), sq_nonneg (x + 2),\n  mul_nonneg (sub_nonneg.mpr h\u2085) (sub_nonneg.mpr h\u2088\u2081)]"
    },
    "hole_14": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2088\u2083"
    },
    "hole_15": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2088"
    },
    "hole_16": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact \u27e8h\u2081, h\u2082\u27e9"
    }
  },
  "successful_tactics": {
    "hole_1": "norm_num",
    "hole_3": "simpa",
    "hole_4": "nlinarith",
    "hole_5": "nlinarith",
    "hole_6": "nlinarith",
    "hole_7": "nlinarith",
    "hole_8": "linarith",
    "hole_9": "linarith",
    "hole_10": "nlinarith",
    "hole_11": "linarith",
    "hole_12": "linarith",
    "hole_13": "nlinarith",
    "hole_14": "linarith",
    "hole_15": "norm_cast",
    "hole_16": "norm_cast"
  },
  "tactic_mapping": {
    "hole_1": "norm_num",
    "hole_3": "simpa",
    "hole_4": "nlinarith",
    "hole_5": "nlinarith",
    "hole_6": "nlinarith",
    "hole_7": "nlinarith",
    "hole_8": "linarith",
    "hole_9": "linarith",
    "hole_10": "nlinarith",
    "hole_11": "linarith",
    "hole_12": "linarith",
    "hole_13": "nlinarith",
    "hole_14": "linarith",
    "hole_15": "norm_cast",
    "hole_16": "norm_cast",
    "hole_2": "admit"
  },
  "proof_state_tests": 70,
  "tactic_attempts": {
    "hole_1": [
      {
        "tactic": "norm_num",
        "success": true,
        "error_message": null
      }
    ],
    "hole_2": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2082 : 3 \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\n\u22a2 False failed"
      },
      {
        "tactic": "nlinarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2082 : 3 \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\n\u22a2 False failed"
      },
      {
        "tactic": "omega",
        "success": false,
        "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
      },
      {
        "tactic": "ring",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "ring_nf",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "simp",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "simpa",
        "success": false,
        "error_message": "Lean error:\ntactic 'assumption' failed\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2082 : 3 \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\n\u22a2 \u2203 x, x ^ 4 + 36 \u2264 13 * x ^ 2 \u2227 x ^ 3 - 3 * x = 18"
      },
      {
        "tactic": "field_simp",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "positivity",
        "success": false,
        "error_message": "Lean error:\nnot a positivity goal"
      },
      {
        "tactic": "norm_cast",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      }
    ],
    "hole_3": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase a\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nx : \u211d\nhx : x \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\na\u271d : x ^ 4 + 36 > 13 * x ^ 2\n\u22a2 False failed"
      },
      {
        "tactic": "nlinarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase a\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nx : \u211d\nhx : x \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\na\u271d : x ^ 4 + 36 > 13 * x ^ 2\n\u22a2 False failed"
      },
      {
        "tactic": "omega",
        "success": false,
        "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
      },
      {
        "tactic": "ring",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "ring_nf",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "simp",
        "success": false,
        "error_message": "Lean error:\nsimp made no progress"
      },
      {
        "tactic": "simpa",
        "success": true,
        "error_message": null
      }
    ],
    "hole_4": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase a\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nx : \u211d\nhx : x \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nh\u2083 : x ^ 4 + 36 \u2264 13 * x ^ 2\na\u271d : x ^ 2 > 9\n\u22a2 False failed"
      },
      {
        "tactic": "nlinarith",
        "success": true,
        "error_message": null
      }
    ],
    "hole_5": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase a\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nx : \u211d\nhx : x \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nh\u2083 : x ^ 4 + 36 \u2264 13 * x ^ 2\nh\u2084 : x ^ 2 \u2264 9\na\u271d : 4 > x ^ 2\n\u22a2 False failed"
      },
      {
        "tactic": "nlinarith",
        "success": true,
        "error_message": null
      }
    ],
    "hole_6": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase a\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nx : \u211d\nhx : x \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nh\u2083 : x ^ 4 + 36 \u2264 13 * x ^ 2\nh\u2084 : x ^ 2 \u2264 9\nh\u2085 : x ^ 2 \u2265 4\na\u271d : x > 3\n\u22a2 False failed"
      },
      {
        "tactic": "nlinarith",
        "success": true,
        "error_message": null
      }
    ],
    "hole_7": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase a\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nx : \u211d\nhx : x \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nh\u2083 : x ^ 4 + 36 \u2264 13 * x ^ 2\nh\u2084 : x ^ 2 \u2264 9\nh\u2085 : x ^ 2 \u2265 4\nh\u2086 : x \u2264 3\na\u271d : -3 > x\n\u22a2 False failed"
      },
      {
        "tactic": "nlinarith",
        "success": true,
        "error_message": null
      }
    ],
    "hole_8": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": true,
        "error_message": null
      }
    ],
    "hole_9": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": true,
        "error_message": null
      }
    ],
    "hole_10": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase a\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nx : \u211d\nhx : x \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nh\u2083 : x ^ 4 + 36 \u2264 13 * x ^ 2\nh\u2084 : x ^ 2 \u2264 9\nh\u2085 : x ^ 2 \u2265 4\nh\u2086 : x \u2264 3\nh\u2087 : x \u2265 -3\nhx' : x \u2265 0\nh\u2088\u2081 : x \u2264 3\nh\u2088\u2082 : x \u2265 0\na\u271d : x ^ 3 - 3 * x > 18\n\u22a2 False failed"
      },
      {
        "tactic": "nlinarith",
        "success": true,
        "error_message": null
      }
    ],
    "hole_11": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": true,
        "error_message": null
      }
    ],
    "hole_12": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": true,
        "error_message": null
      }
    ],
    "hole_13": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase a\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nx : \u211d\nhx : x \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nh\u2083 : x ^ 4 + 36 \u2264 13 * x ^ 2\nh\u2084 : x ^ 2 \u2264 9\nh\u2085 : x ^ 2 \u2265 4\nh\u2086 : x \u2264 3\nh\u2087 : x \u2265 -3\nhx' : \u00acx \u2265 0\nh\u2088\u2081 : x \u2264 0\nh\u2088\u2082 : x \u2265 -3\na\u271d : x ^ 3 - 3 * x > 18\n\u22a2 False failed"
      },
      {
        "tactic": "nlinarith",
        "success": true,
        "error_message": null
      }
    ],
    "hole_14": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": true,
        "error_message": null
      }
    ],
    "hole_15": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase intro.intro.a\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nx : \u211d\nhx : x \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nh\u2083 : x ^ 4 + 36 \u2264 13 * x ^ 2\nh\u2084 : x ^ 2 \u2264 9\nh\u2085 : x ^ 2 \u2265 4\nh\u2086 : x \u2264 3\nh\u2087 : x \u2265 -3\nh\u2088 : x ^ 3 - 3 * x \u2264 18\na\u271d : (fun x => x ^ 3 - 3 * x) x > 18\n\u22a2 False failed"
      },
      {
        "tactic": "nlinarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase intro.intro.a\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nx : \u211d\nhx : x \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nh\u2083 : x ^ 4 + 36 \u2264 13 * x ^ 2\nh\u2084 : x ^ 2 \u2264 9\nh\u2085 : x ^ 2 \u2265 4\nh\u2086 : x \u2264 3\nh\u2087 : x \u2265 -3\nh\u2088 : x ^ 3 - 3 * x \u2264 18\na\u271d : (fun x => x ^ 3 - 3 * x) x > 18\n\u22a2 False failed"
      },
      {
        "tactic": "omega",
        "success": false,
        "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
      },
      {
        "tactic": "ring",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "ring_nf",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "simp",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "simpa",
        "success": false,
        "error_message": "Lean error:\ntactic 'assumption' failed\ncase intro.intro\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nx : \u211d\nhx : x \u2208 {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nh\u2083 : x ^ 4 + 36 \u2264 13 * x ^ 2\nh\u2084 : x ^ 2 \u2264 9\nh\u2085 : x ^ 2 \u2265 4\nh\u2086 : x \u2264 3\nh\u2087 : x \u2265 -3\nh\u2088 : x ^ 3 - 3 * x \u2264 18\n\u22a2 x ^ 3 \u2264 18 + 3 * x"
      },
      {
        "tactic": "field_simp",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "positivity",
        "success": false,
        "error_message": "Lean error:\nnot a positivity goal"
      },
      {
        "tactic": "norm_cast",
        "success": true,
        "error_message": null
      }
    ],
    "hole_16": [
      {
        "tactic": "norm_num",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "linarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nh\u2082 : \u2200 y \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}, y \u2264 18\n\u22a2 False failed"
      },
      {
        "tactic": "nlinarith",
        "success": false,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nh\u2082 : \u2200 y \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}, y \u2264 18\n\u22a2 False failed"
      },
      {
        "tactic": "omega",
        "success": false,
        "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
      },
      {
        "tactic": "ring",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "ring_nf",
        "success": false,
        "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
      },
      {
        "tactic": "simp",
        "success": false,
        "error_message": "Lean error:\nsimp made no progress"
      },
      {
        "tactic": "simpa",
        "success": false,
        "error_message": "Lean error:\ntactic 'assumption' failed\nS : Set \u211d\nf : \u211d \u2192 \u211d\nhS : S = {x | x ^ 4 + 36 \u2264 13 * x ^ 2}\nhf : f = fun x => x ^ 3 - 3 * x\nh\u2081 : 18 \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}\nh\u2082 : \u2200 y \u2208 {x | \u2203 x_1 \u2208 S, f x_1 = x}, y \u2264 18\n\u22a2 IsGreatest {x | \u2203 x_1 \u2208 S, f x_1 = x} 18"
      },
      {
        "tactic": "field_simp",
        "success": false,
        "error_message": "Lean error:\nsimp made no progress"
      },
      {
        "tactic": "positivity",
        "success": false,
        "error_message": "Lean error:\nnot a positivity goal"
      },
      {
        "tactic": "norm_cast",
        "success": true,
        "error_message": null
      }
    ]
  },
  "processing_time_seconds": 28.362919,
  "constraint_satisfied": true,
  "tactics_replaced": 15,
  "timestamp": "2025-06-19T08:20:21.551031"
}