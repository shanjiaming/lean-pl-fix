{
  "problem_id": "putnam_1964_a4",
  "dataset": "putnam",
  "timestamp": "2025-06-19T06:52:05.723117",
  "original_verification_pass": false,
  "hole_verification_pass": true,
  "holes": [
    {
      "hole_id": "hole_1",
      "original_proof": "linarith"
    },
    {
      "hole_id": "hole_2",
      "original_proof": "intro n\nexact (h_bounds n).1"
    },
    {
      "hole_id": "hole_3",
      "original_proof": "intro n\nexact (h_bounds n).2"
    },
    {
      "hole_id": "hole_4",
      "original_proof": "intro x hx\nsimp only [Set.mem_Icc, Set.mem_range] at hx \u22a2\nrcases hx with \u27e8n, rfl\u27e9\nconstructor\ntry constructor\ntry constructor\ntry constructor\ntry simp_all [h_bounds]"
    },
    {
      "hole_id": "hole_5",
      "original_proof": "apply Set.finite_Icc"
    },
    {
      "hole_id": "hole_6",
      "original_proof": "exact Set.Finite.subset h\u2081\u2084 h\u2081\u2083"
    },
    {
      "hole_id": "hole_7",
      "original_proof": "exact h\u2081\u2082"
    },
    {
      "hole_id": "hole_8",
      "original_proof": "classical\nobtain \u27e8\u27e8a, b, c, d\u27e9, h\u2081\u2086\u27e9 :=\n  Set.Finite.exists_ne_map_eq_of_mapsTo (Set.finite_univ (\u03b1 := \u2115)) (fun n _ => by exact Set.mem_range_self n)\n    (Set.toFinite _)\nuse 0, 1 <;> simp_all <;> (try omega) <;> (try linarith) <;> (try nlinarith) <;> (try ring_nf at *) <;>\n        (try ring_nf) <;>\n      (try norm_num) <;>\n    (try linarith) <;>\n  (try nlinarith)"
    },
    {
      "hole_id": "hole_10",
      "original_proof": "exact h\u2081\u2080"
    },
    {
      "hole_id": "hole_11",
      "original_proof": "exact h\u2087"
    },
    {
      "hole_id": "hole_12",
      "original_proof": "exact h\u2085"
    },
    {
      "hole_id": "hole_13",
      "original_proof": "exact h\u2082"
    },
    {
      "hole_id": "hole_14",
      "original_proof": "exact h_main"
    }
  ]
}