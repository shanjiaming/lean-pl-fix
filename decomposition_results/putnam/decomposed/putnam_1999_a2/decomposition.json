{
  "problem_id": "putnam_1999_a2",
  "dataset": "putnam",
  "timestamp": "2025-06-19T04:01:51.260039",
  "original_verification_pass": false,
  "hole_verification_pass": true,
  "holes": [
    {
      "hole_id": "hole_1",
      "original_proof": "rw [Polynomial.eq_C_of_degree_eq_bot h]"
    },
    {
      "hole_id": "hole_2",
      "original_proof": "rw [Real.sq_sqrt (by linarith)]"
    },
    {
      "hole_id": "hole_3",
      "original_proof": "rw [\u2190 Polynomial.C_pow]\nsimp [h\u2085]"
    },
    {
      "hole_id": "hole_4",
      "original_proof": "exact by\n  classical\n    exact\n    \u27e8Polynomial.X, Polynomial.C (Real.sqrt (p.eval 0)),\n      by\n      have h\u2084 := hp 0\n      have h\u2085 := hp 1\n      have h\u2086 := hp (-1)\n      have h\u2087 := hp 2\n      have h\u2088 := hp (-2)\n      norm_num at h\u2084 h\u2085 h\u2086 h\u2087 h\u2088 \u22a2 <;> (try norm_num) <;> (try ring_nf at h\u2084 h\u2085 h\u2086 h\u2087 h\u2088 \u22a2) <;>\n          (try\n              simp_all [Polynomial.eval_add, Polynomial.eval_mul, Polynomial.eval_pow, Polynomial.eval_C,\n                Polynomial.eval_X]) <;>\n        (try nlinarith)\u27e9"
    },
    {
      "hole_id": "hole_5",
      "original_proof": "exact h\u2083"
    },
    {
      "hole_id": "hole_6",
      "original_proof": "obtain \u27e8q, r, h\u2083\u27e9 := h\u2082\nexact \u27e8q, Or.inr \u27e8q, r, by simpa using h\u2083\u27e9\u27e9"
    },
    {
      "hole_id": "hole_7",
      "original_proof": "obtain \u27e8q, h\u2082\u27e9 := h\u2081\ncases h\u2082 with\n| inl h\u2082 =>\n  use 1\n  use fun _ => q\n  constructor\n  \u00b7 norm_num\n  \u00b7 intro x\n    simp [h\u2082] <;> ring_nf <;> simp_all [Polynomial.eval_pow] <;> ring_nf <;> simp_all [Polynomial.eval_pow]\n| inr h\u2082 =>\n  obtain \u27e8q, r, h\u2082\u27e9 := h\u2082\n  use 2\n  use fun i => if i = \u27e80, by decide\u27e9 then q else r\n  constructor\n  \u00b7 norm_num\n  \u00b7 intro x\n    simp [h\u2082, Fin.sum_univ_succ] <;> (try split_ifs <;> simp_all [Polynomial.eval_add, Polynomial.eval_pow]) <;>\n          (try ring_nf at * <;> simp_all [Polynomial.eval_add, Polynomial.eval_pow]) <;>\n        (try norm_num at * <;> simp_all [Polynomial.eval_add, Polynomial.eval_pow]) <;>\n      (try nlinarith)"
    },
    {
      "hole_id": "hole_8",
      "original_proof": "obtain \u27e8k, f, hk, hf\u27e9 := h_sum_of_squares\nrefine' \u27e8k, f, hk, hf\u27e9"
    }
  ]
}