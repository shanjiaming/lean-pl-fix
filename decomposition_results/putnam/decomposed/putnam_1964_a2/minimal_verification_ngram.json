{
  "problem_id": "putnam_1964_a2",
  "dataset": "putnam",
  "verification_count": 1,
  "max_verifications": 3,
  "original_verification_pass": false,
  "hole_verification_pass": false,
  "filled_verification_pass": false,
  "synthesized_verification_pass": false,
  "complete_solve_success": false,
  "original_tactics_test": {
    "hole_1": {
      "success": false,
      "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 5",
      "original_tactic": "rw [intervalIntegral.integral_sub, intervalIntegral.integral_add]\ntry {\n  apply ContinuousOn.intervalIntegrable\n  exact\n    ContinuousOn.sub (ContinuousOn.mul continuousOn_id (ContinuousOn.mul continuousOn_id h\u2082))\n      (ContinuousOn.mul (continuousOn_const) (ContinuousOn.mul continuousOn_id h\u2082))\n}\ntry {\n  apply ContinuousOn.intervalIntegrable\n  exact ContinuousOn.mul (continuousOn_const) (ContinuousOn.mul continuousOn_id h\u2082)\n}\ntry {\n  apply ContinuousOn.intervalIntegrable\n  exact ContinuousOn.mul (continuousOn_pow 2) h\u2082\n}\ntry {\n  apply ContinuousOn.intervalIntegrable\n  exact ContinuousOn.mul (continuousOn_const) h\u2082\n}\ntry {\n  apply ContinuousOn.intervalIntegrable\n  exact ContinuousOn.mul (continuousOn_pow 2) h\u2082\n}\ntry {\n  apply ContinuousOn.intervalIntegrable\n  exact ContinuousOn.mul (continuousOn_const) (ContinuousOn.mul continuousOn_id h\u2082)\n}"
    },
    "hole_2": {
      "success": true,
      "error_message": null,
      "original_tactic": "simp [intervalIntegral.integral_comp_mul_left (fun x => x * f x)]"
    },
    "hole_3": {
      "success": true,
      "error_message": null,
      "original_tactic": "simp [intervalIntegral.integral_comp_mul_left (fun x => f x)]"
    },
    "hole_5": {
      "success": true,
      "error_message": null,
      "original_tactic": "apply ContinuousOn.mul\nexact ContinuousOn.pow (ContinuousOn.sub continuousOn_id continuousOn_const) 2\nexact h\u2082"
    },
    "hole_6": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith"
    },
    "hole_7": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith"
    },
    "hole_8": {
      "success": false,
      "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1",
      "original_tactic": "by_contra h\npush_neg at h"
    },
    "hole_9": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h\u2087\u2084"
    },
    "hole_10": {
      "success": false,
      "error_message": "Lean error:\nunknown identifier 'h'",
      "original_tactic": "nlinarith [sq_pos_of_ne_zero h]"
    },
    "hole_11": {
      "success": true,
      "error_message": null,
      "original_tactic": "positivity"
    },
    "hole_12": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_13": {
      "success": true,
      "error_message": null,
      "original_tactic": "nlinarith"
    },
    "hole_14": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_15": {
      "success": true,
      "error_message": null,
      "original_tactic": "norm_num"
    },
    "hole_16": {
      "success": true,
      "error_message": null,
      "original_tactic": "norm_num"
    },
    "hole_17": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_18": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_19": {
      "success": true,
      "error_message": null,
      "original_tactic": "linarith"
    },
    "hole_20": {
      "success": true,
      "error_message": null,
      "original_tactic": "norm_num at h\u2089"
    },
    "hole_21": {
      "success": true,
      "error_message": null,
      "original_tactic": "simp only [h_main]"
    },
    "hole_22": {
      "success": true,
      "error_message": null,
      "original_tactic": "exact h_final"
    }
  },
  "successful_tactics": {
    "hole_2": "norm_num",
    "hole_3": "norm_num",
    "hole_6": "nlinarith",
    "hole_7": "nlinarith",
    "hole_9": "norm_cast",
    "hole_11": "nlinarith",
    "hole_12": "linarith",
    "hole_13": "nlinarith",
    "hole_14": "linarith",
    "hole_15": "norm_num",
    "hole_16": "norm_num",
    "hole_17": "linarith",
    "hole_18": "linarith",
    "hole_19": "linarith",
    "hole_20": "linarith",
    "hole_22": "norm_cast"
  },
  "tactic_mapping": {
    "hole_2": "norm_num",
    "hole_3": "norm_num",
    "hole_6": "nlinarith",
    "hole_7": "nlinarith",
    "hole_9": "norm_cast",
    "hole_11": "nlinarith",
    "hole_12": "linarith",
    "hole_13": "nlinarith",
    "hole_14": "linarith",
    "hole_15": "norm_num",
    "hole_16": "norm_num",
    "hole_17": "linarith",
    "hole_18": "linarith",
    "hole_19": "linarith",
    "hole_20": "linarith",
    "hole_22": "norm_cast",
    "hole_21": "admit",
    "hole_1": "admit",
    "hole_10": "admit",
    "hole_8": "admit",
    "hole_5": "admit"
  },
  "proof_state_tests": 0,
  "tactic_attempts": {},
  "processing_time_seconds": 343.692039,
  "constraint_satisfied": true,
  "tactics_replaced": 16,
  "timestamp": "2025-06-20T15:20:12.001873"
}