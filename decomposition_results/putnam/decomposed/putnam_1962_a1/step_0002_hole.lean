theorem h_main (S : Set (ℝ × ℝ)) (hS : S.ncard = 5) (hnoncol : ∀ s ⊆ S, s.ncard = 3 → ¬Collinear ℝ s) : ∃ T ⊆ S, T.ncard = 4 ∧ ¬∃ t ∈ T, t ∈ (convexHull ℝ : Set (ℝ × ℝ) → Set (ℝ × ℝ)) (T \ {t}) := by
  --  classical
  --  have h₁ : S.Nonempty := by
  --    by_contra h
  --    rw [Set.not_nonempty_iff_eq_empty] at h
  --    rw [h] at hS
  --    norm_num at hS <;> simp_all [Set.ncard_eq_zero]
  --  obtain ⟨p, hp⟩ := h₁
  --  have h₂ : ∃ (T : Set (ℝ × ℝ)), T ⊆ S ∧ T.ncard = 4 :=
  --    by
  --    have h₃ : ∃ (T : Set (ℝ × ℝ)), T ⊆ S ∧ T.ncard = 4 :=
  --      by
  --      have h₄ : (S \ { p }).ncard = 4 := by
  --        have h₅ : p ∈ S := hp
  --        have h₆ : (S \ { p }).ncard = 4 :=
  --          by
  --          have h₇ : S.ncard = (S \ { p }).ncard + 1 := by
  --            rw [← Set.ncard_insert_of_not_mem (by simp [hp])] <;> simp [hp] <;> aesop
  --          omega
  --        exact h₆
  --      refine' ⟨S \ { p }, by simp [Set.diff_subset], _⟩ <;> simp_all
  --    exact h₃
  --  obtain ⟨T, hT_sub, hT_card⟩ := h₂
  --  refine' ⟨T, hT_sub, hT_card, _⟩
  --  by_contra h
  --  obtain ⟨t, ht, ht'⟩ := h
  --  have h₃ : t ∈ convexHull ℝ (T \ { t }) := ht'
  --  have h₄ : t ∈ T := ht
  --  have h₅ : (T \ { t }).ncard = 3 := by
  --    have h₅₁ : t ∈ T := ht
  --    have h₅₂ : T.ncard = 4 := hT_card
  --    have h₅₃ : (T \ { t }).ncard = 3 :=
  --      by
  --      have h₅₄ : (T \ { t }).ncard = T.ncard - 1 :=
  --        by
  --        have h₅₅ : t ∈ T := ht
  --        have h₅₆ : (T \ { t }).ncard = T.ncard - 1 := by
  --          rw [← Set.ncard_insert_of_not_mem (by simp [h₅₁])] <;> simp [h₅₁] <;> aesop
  --        exact h₅₆
  --      rw [h₅₄]
  --      have h₅₇ : T.ncard = 4 := hT_card
  --      omega
  --    exact h₅₃
  --  have h₆ : Collinear ℝ (T \ { t }) :=
  --    by
  --    have h₆₁ : t ∈ convexHull ℝ (T \ { t }) := h₃
  --    have h₆₂ : Collinear ℝ (T \ { t }) :=
  --      by
  --      have h₆₃ : (T \ { t }).Nonempty := by
  --        by_contra h₆₄
  --        rw [Set.not_nonempty_iff_eq_empty] at h₆₄
  --        rw [h₆₄] at h₅
  --        norm_num at h₅ <;> simp_all [Set.ncard_eq_zero]
  --      have h₆₅ : Collinear ℝ (T \ { t }) :=
  --        by
  --        have h₆₆ : t ∈ convexHull ℝ (T \ { t }) := h₃
  --        have h₆₇ : Collinear ℝ (T \ { t }) := by
  --          apply collinear_of_mem_convexHull <;> simp_all [Set.subset_def] <;> aesop
  --        exact h₆₇
  --      exact h₆₅
  --    exact h₆₂
  --  have h₇ : (T \ { t }) ⊆ S := by
  --    have h₇₁ : T ⊆ S := hT_sub
  --    have h₇₂ : (T \ { t }) ⊆ T := by apply Set.diff_subset
  --    have h₇₃ : (T \ { t }) ⊆ S := Set.Subset.trans h₇₂ h₇₁
  --    exact h₇₃
  --  have h₈ : (T \ { t }).ncard = 3 := h₅
  --  have h₉ : ¬Collinear ℝ (T \ { t }) := by
  --    have h₉₁ : (T \ { t }) ⊆ S := h₇
  --    have h₉₂ : (T \ { t }).ncard = 3 := h₅
  --    have h₉₃ : ¬Collinear ℝ (T \ { t }) :=
  --      by
  --      have h₉₄ : ∀ s ⊆ S, s.ncard = 3 → ¬Collinear ℝ s := hnoncol
  --      have h₉₅ : (T \ { t }) ⊆ S := h₇
  --      have h₉₆ : (T \ { t }).ncard = 3 := h₅
  --      have h₉₇ : ¬Collinear ℝ (T \ { t }) := h₉₄ (T \ { t }) h₉₅ h₉₆
  --      exact h₉₇
  --    exact h₉₃
  --  exact h₉ h₆
  hole