theorem h₈ (p : ℕ) (hpodd : Odd p) (hpprime : Nat.Prime p) (hpmod3 : p ≡ 2 [MOD 3]) (P : Equiv.Perm (Fin p)) (hP : ∀ (i : Fin p), (P : Fin p → Fin p) i = i * i * i) (h_forward : p ≡ 3 [MOD 4] → P.signAux = 1) (h h₁ : P.signAux = 1) (h₄ : p % 4 = 1) (h₅ : p % 3 = 2) (h₆ : p ≠ 0) (h₇ : p ≥ 2) : P.signAux = 1 := by
  --  cases p with
  --  | zero => contradiction
  --  | succ p =>
  --    cases p with
  --    | zero => contradiction
  --    | succ p =>
  --      cases p with
  --      | zero => contradiction
  --      | succ p =>
  --        cases p with
  --        | zero => contradiction
  --        | succ p =>
  --          simp_all [Nat.ModEq, Equiv.Perm.signAux, Fin.forall_fin_succ, Fin.val_zero, Fin.val_succ, Nat.add_assoc,
  --                          Nat.add_comm, Nat.add_left_comm, Nat.mul_assoc, Nat.mul_comm, Nat.mul_left_comm,
  --                          Nat.mod_eq_of_lt] <;>
  --                        (try decide) <;>
  --                      (try omega) <;>
  --                    (try ring_nf at *) <;>
  --                  (try norm_num at *) <;>
  --                (try contradiction) <;>
  --              (try simp_all [Equiv.Perm.signAux]) <;>
  --            (try omega)
  simpa