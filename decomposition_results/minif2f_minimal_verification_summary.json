{
  "dataset": "minif2f",
  "total_problems": 201,
  "constraint_violations": 185,
  "constraint_satisfaction_rate": 7.960199004975125,
  "successful_problems": 16,
  "complete_solve_success_problems": 11,
  "complete_solve_success_rate": 5.472636815920398,
  "total_proof_state_tests": 532,
  "total_verifications": 16,
  "average_processing_time": 1.5642864179104476,
  "timestamp": "2025-06-18T15:54:03.759428",
  "results": [
    {
      "problem_id": "aime_1990_p4",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": false,
      "successful_tactics": {
        "hole_3": "simpa",
        "hole_4": "simpa",
        "hole_5": "simpa",
        "hole_6": "linarith",
        "hole_8": "linarith",
        "hole_2": "linarith",
        "hole_12": "linarith",
        "hole_13": "linarith",
        "hole_10": "nlinarith",
        "hole_9": "linarith",
        "hole_1": "linarith"
      },
      "tactic_mapping": {
        "hole_3": "simpa",
        "hole_4": "simpa",
        "hole_5": "simpa",
        "hole_6": "linarith",
        "hole_8": "linarith",
        "hole_2": "linarith",
        "hole_12": "linarith",
        "hole_13": "linarith",
        "hole_10": "nlinarith",
        "hole_9": "linarith",
        "hole_1": "linarith",
        "hole_14": "admit",
        "hole_11": "admit",
        "hole_7": "admit"
      },
      "proof_state_tests": 74,
      "tactic_attempts": {
        "hole_3": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\na\u271d : x ^ 2 - 10 * x - 45 = 0\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\na\u271d : x ^ 2 - 10 * x - 45 = 0\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": true,
            "error_message": null
          }
        ],
        "hole_4": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh\u2085 : x ^ 2 - 10 * x - 45 \u2260 0\na\u271d : x ^ 2 - 10 * x - 29 = 0\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh\u2085 : x ^ 2 - 10 * x - 45 \u2260 0\na\u271d : x ^ 2 - 10 * x - 29 = 0\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": true,
            "error_message": null
          }
        ],
        "hole_5": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh\u2085 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2086 : x ^ 2 - 10 * x - 29 \u2260 0\na\u271d : x ^ 2 - 10 * x - 69 = 0\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh\u2085 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2086 : x ^ 2 - 10 * x - 29 \u2260 0\na\u271d : x ^ 2 - 10 * x - 69 = 0\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": true,
            "error_message": null
          }
        ],
        "hole_7": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh\u2085 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2086 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2087 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2088 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\na\u271d :\n  (x ^ 2 - 10 * x - 45) * (x ^ 2 - 10 * x - 69) + (x ^ 2 - 10 * x - 29) * (x ^ 2 - 10 * x - 69) -\n      2 * (x ^ 2 - 10 * x - 29) * (x ^ 2 - 10 * x - 45) <\n    0\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh\u2085 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2086 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2087 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2088 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\na\u271d :\n  (x ^ 2 - 10 * x - 45) * (x ^ 2 - 10 * x - 69) + (x ^ 2 - 10 * x - 29) * (x ^ 2 - 10 * x - 69) -\n      2 * (x ^ 2 - 10 * x - 29) * (x ^ 2 - 10 * x - 45) <\n    0\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh\u2085 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2086 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2087 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2088 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\n\u22a2 (x ^ 2 - 10 * x - 45) * (x ^ 2 - 10 * x - 69) + (x ^ 2 - 10 * x - 29) * (x ^ 2 - 10 * x - 69) -\n      2 * (x ^ 2 - 10 * x - 29) * (x ^ 2 - 10 * x - 45) =\n    0"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_6": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_8": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_12": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_13": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_14": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh_y : x ^ 2 - 10 * x = 39\nh\u2085\u2082 : x ^ 2 - 10 * x - 39 = 0\nh\u2085\u2083 : (x - 13) * (x + 3) = 0\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh_y : x ^ 2 - 10 * x = 39\nh\u2085\u2082 : x ^ 2 - 10 * x - 39 = 0\nh\u2085\u2083 : (x - 13) * (x + 3) = 0\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh_y : x ^ 2 - 10 * x = 39\nh\u2085\u2082 : x ^ 2 - 10 * x - 39 = 0\nh\u2085\u2083 : (x - 13) * (x + 3) = 0\n\u22a2 x - 13 = 0 \u2228 x + 3 = 0"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_11": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh_y : x ^ 2 - 10 * x = 39\nh\u2085\u2082 : x ^ 2 - 10 * x - 39 = 0\nh\u2085\u2083 : (x - 13) * (x + 3) = 0\nh\u2085\u2084 : x - 13 = 0 \u2228 x + 3 = 0\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh_y : x ^ 2 - 10 * x = 39\nh\u2085\u2082 : x ^ 2 - 10 * x - 39 = 0\nh\u2085\u2083 : (x - 13) * (x + 3) = 0\nh\u2085\u2084 : x - 13 = 0 \u2228 x + 3 = 0\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh_y : x ^ 2 - 10 * x = 39\nh\u2085\u2082 : x ^ 2 - 10 * x - 39 = 0\nh\u2085\u2083 : (x - 13) * (x + 3) = 0\nh\u2085\u2084 : x - 13 = 0 \u2228 x + 3 = 0\n\u22a2 x = 13 \u2228 x = -3"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_10": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\nh_y : x ^ 2 - 10 * x = 39\nh\u2085\u2081 : x = 13 \u2228 x = -3\na\u271d : x < 13\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_9": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 19.538786,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759020"
    },
    {
      "problem_id": "algebra_absxm1pabsxpabsxp1eqxp2_0leqxleq1",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": false,
      "successful_tactics": {
        "hole_3": "linarith",
        "hole_7": "linarith",
        "hole_8": "linarith",
        "hole_9": "linarith",
        "hole_13": "linarith",
        "hole_14": "linarith",
        "hole_2": "linarith",
        "hole_16": "linarith",
        "hole_18": "simpa",
        "hole_20": "linarith",
        "hole_15": "linarith",
        "hole_21": "norm_cast",
        "hole_1": "simpa"
      },
      "tactic_mapping": {
        "hole_3": "linarith",
        "hole_7": "linarith",
        "hole_8": "linarith",
        "hole_9": "linarith",
        "hole_13": "linarith",
        "hole_14": "linarith",
        "hole_2": "linarith",
        "hole_16": "linarith",
        "hole_18": "simpa",
        "hole_20": "linarith",
        "hole_15": "linarith",
        "hole_21": "norm_cast",
        "hole_1": "simpa",
        "hole_10": "admit",
        "hole_4": "admit",
        "hole_17": "admit",
        "hole_12": "admit",
        "hole_5": "admit",
        "hole_11": "admit",
        "hole_6": "admit",
        "hole_19": "admit"
      },
      "proof_state_tests": 135,
      "tactic_attempts": {
        "hole_3": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_4": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : x < -1\na\u271d : |x - 1| < -(x - 1)\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : x < -1\na\u271d : |x - 1| < -(x - 1)\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : x < -1\n\u22a2 |x - 1| = 1 - x"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_5": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : x < -1\nh\u2084 : |x - 1| = -(x - 1)\na\u271d : |x| < -x\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : x < -1\nh\u2084 : |x - 1| = -(x - 1)\na\u271d : |x| < -x\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : x < -1\nh\u2084 : |x - 1| = -(x - 1)\n\u22a2 x \u2264 0"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_6": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : x < -1\nh\u2084 : |x - 1| = -(x - 1)\nh\u2085 : |x| = -x\na\u271d : |x + 1| < -(x + 1)\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : x < -1\nh\u2084 : |x - 1| = -(x - 1)\nh\u2085 : |x| = -x\na\u271d : |x + 1| < -(x + 1)\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : x < -1\nh\u2084 : |x - 1| = -(x - 1)\nh\u2085 : |x| = -x\n\u22a2 |x + 1| = -1 + -x"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_7": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_8": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_9": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_10": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : \u00acx < -1\nh\u2084 : x \u2265 -1\na\u271d : |x - 1| < -(x - 1)\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : \u00acx < -1\nh\u2084 : x \u2265 -1\na\u271d : |x - 1| < -(x - 1)\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : \u00acx < -1\nh\u2084 : x \u2265 -1\n\u22a2 |x - 1| = 1 - x"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_11": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : \u00acx < -1\nh\u2084 : x \u2265 -1\nh\u2085 : |x - 1| = -(x - 1)\na\u271d : |x| < -x\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : \u00acx < -1\nh\u2084 : x \u2265 -1\nh\u2085 : |x - 1| = -(x - 1)\na\u271d : |x| < -x\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : \u00acx < -1\nh\u2084 : x \u2265 -1\nh\u2085 : |x - 1| = -(x - 1)\n\u22a2 x \u2264 0"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_12": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : \u00acx < -1\nh\u2084 : x \u2265 -1\nh\u2085 : |x - 1| = -(x - 1)\nh\u2086 : |x| = -x\na\u271d : |x + 1| < x + 1\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : \u00acx < -1\nh\u2084 : x \u2265 -1\nh\u2085 : |x - 1| = -(x - 1)\nh\u2086 : |x| = -x\na\u271d : |x + 1| < x + 1\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh : \u00ac0 \u2264 x\nh\u2082 : x < 0\nh\u2083 : \u00acx < -1\nh\u2084 : x \u2265 -1\nh\u2085 : |x - 1| = -(x - 1)\nh\u2086 : |x| = -x\n\u22a2 0 \u2264 x + 1"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_13": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_14": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_16": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_17": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh : \u00acx \u2264 1\nh\u2083 : x > 1\na\u271d : |x - 1| < x - 1\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh : \u00acx \u2264 1\nh\u2083 : x > 1\na\u271d : |x - 1| < x - 1\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh : \u00acx \u2264 1\nh\u2083 : x > 1\n\u22a2 1 \u2264 x"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_18": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh : \u00acx \u2264 1\nh\u2083 : x > 1\nh\u2084 : |x - 1| = x - 1\na\u271d : |x| < x\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh : \u00acx \u2264 1\nh\u2083 : x > 1\nh\u2084 : |x - 1| = x - 1\na\u271d : |x| < x\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": true,
            "error_message": null
          }
        ],
        "hole_19": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh : \u00acx \u2264 1\nh\u2083 : x > 1\nh\u2084 : |x - 1| = x - 1\nh\u2085 : |x| = x\na\u271d : |x + 1| < x + 1\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh : \u00acx \u2264 1\nh\u2083 : x > 1\nh\u2084 : |x - 1| = x - 1\nh\u2085 : |x| = x\na\u271d : |x + 1| < x + 1\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh : \u00acx \u2264 1\nh\u2083 : x > 1\nh\u2084 : |x - 1| = x - 1\nh\u2085 : |x| = x\n\u22a2 0 \u2264 x + 1"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_20": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_15": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_21": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh\u2082 : x \u2264 1\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh\u2082 : x \u2264 1\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh\u2082 : x \u2264 1\n\u22a2 0 \u2264 x \u2227 x \u2264 1"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh\u2082 : x \u2264 1\nh\u2083 : 0 \u2264 x \u2227 x \u2264 1\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\nh\u2081 : 0 \u2264 x\nh\u2082 : x \u2264 1\nh\u2083 : 0 \u2264 x \u2227 x \u2264 1\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 21.204073,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759037"
    },
    {
      "problem_id": "amc12_2000_p1",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759040"
    },
    {
      "problem_id": "amc12_2000_p12",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759043"
    },
    {
      "problem_id": "amc12a_2002_p6",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": false,
      "successful_tactics": {
        "hole_1": "simpa"
      },
      "tactic_mapping": {
        "hole_1": "simpa",
        "hole_2": "admit"
      },
      "proof_state_tests": 19,
      "tactic_attempts": {
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nn : \u2115\nh\u2080 : 0 < n\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nn : \u2115\nh\u2080 : 0 < n\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  a \u2265 1\nwhere\n a := \u2191n"
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nn : \u2115\nh\u2080 : 0 < n\n\u22a2 \u2203 m, n < m \u2227 \u2203 p, m * p \u2264 m + p"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nn : \u2115\nh\u2080 : 0 < n\nh\u2081 : \u2203 m > n, \u2203 p, m * p \u2264 m + p\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nn : \u2115\nh\u2080 : 0 < n\nh\u2081 : \u2203 m > n, \u2203 p, m * p \u2264 m + p\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  d \u2265 0\n  c \u2265 0\n  b \u2265 0\n  b + c - d \u2265 0\n  a \u2265 1\n  a - b \u2264 -1\nwhere\n a := \u2191n\n b := \u2191h\u2081.choose\n c := \u2191\u22ef.choose\n d := \u2191h\u2081.choose * \u2191\u22ef.choose"
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 14.920969,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759045"
    },
    {
      "problem_id": "amc12a_2021_p18",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": true,
      "successful_tactics": {
        "hole_3": "linarith",
        "hole_4": "norm_num",
        "hole_5": "linarith",
        "hole_6": "linarith",
        "hole_2": "linarith",
        "hole_8": "norm_num",
        "hole_9": "linarith",
        "hole_7": "linarith",
        "hole_11": "norm_num",
        "hole_10": "linarith",
        "hole_13": "norm_num",
        "hole_14": "linarith",
        "hole_12": "linarith",
        "hole_16": "norm_num",
        "hole_17": "linarith",
        "hole_18": "linarith",
        "hole_15": "linarith",
        "hole_19": "linarith",
        "hole_1": "linarith"
      },
      "tactic_mapping": {
        "hole_3": "linarith",
        "hole_4": "norm_num",
        "hole_5": "linarith",
        "hole_6": "linarith",
        "hole_2": "linarith",
        "hole_8": "norm_num",
        "hole_9": "linarith",
        "hole_7": "linarith",
        "hole_11": "norm_num",
        "hole_10": "linarith",
        "hole_13": "norm_num",
        "hole_14": "linarith",
        "hole_12": "linarith",
        "hole_16": "norm_num",
        "hole_17": "linarith",
        "hole_18": "linarith",
        "hole_15": "linarith",
        "hole_19": "linarith",
        "hole_1": "linarith"
      },
      "proof_state_tests": 33,
      "tactic_attempts": {
        "hole_3": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_4": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_5": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_6": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_8": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_9": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_7": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_11": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_10": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_13": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_14": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_12": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_16": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_17": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_18": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_15": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_19": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 17.882901,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759049"
    },
    {
      "problem_id": "amc12a_2021_p19",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759051"
    },
    {
      "problem_id": "amc12a_2021_p3",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": true,
      "successful_tactics": {
        "hole_6": "omega",
        "hole_5": "linarith",
        "hole_4": "linarith",
        "hole_3": "linarith",
        "hole_2": "linarith",
        "hole_8": "linarith",
        "hole_9": "linarith",
        "hole_7": "linarith",
        "hole_10": "linarith",
        "hole_11": "linarith",
        "hole_1": "linarith"
      },
      "tactic_mapping": {
        "hole_6": "omega",
        "hole_5": "linarith",
        "hole_4": "linarith",
        "hole_3": "linarith",
        "hole_2": "linarith",
        "hole_8": "linarith",
        "hole_9": "linarith",
        "hole_7": "linarith",
        "hole_10": "linarith",
        "hole_11": "linarith",
        "hole_1": "linarith"
      },
      "proof_state_tests": 24,
      "tactic_attempts": {
        "hole_6": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx y : \u2115\nh\u2080 : x + y = 17402\nh\u2081 : 10 \u2223 x\nh\u2082 : x / 10 = y\nh\u2083\u2081\u2081 : 10 \u2223 x\na\u271d : x / 10 * 10 < x\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx y : \u2115\nh\u2080 : x + y = 17402\nh\u2081 : 10 \u2223 x\nh\u2082 : x / 10 = y\nh\u2083\u2081\u2081 : 10 \u2223 x\na\u271d : x / 10 * 10 < x\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_5": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_4": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_3": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_8": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_9": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_7": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_10": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_11": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 21.721956,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759058"
    },
    {
      "problem_id": "amc12a_2021_p9",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": true,
      "successful_tactics": {
        "hole_2": "norm_num",
        "hole_1": "norm_num"
      },
      "tactic_mapping": {
        "hole_2": "norm_num",
        "hole_1": "norm_num"
      },
      "proof_state_tests": 2,
      "tactic_attempts": {
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 14.656966,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759060"
    },
    {
      "problem_id": "mathd_numbertheory_127",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": true,
      "successful_tactics": {
        "hole_2": "norm_num",
        "hole_1": "norm_num"
      },
      "tactic_mapping": {
        "hole_2": "norm_num",
        "hole_1": "norm_num"
      },
      "proof_state_tests": 2,
      "tactic_attempts": {
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 13.902391,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759062"
    },
    {
      "problem_id": "mathd_numbertheory_207",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": true,
      "successful_tactics": {
        "hole_2": "norm_num",
        "hole_3": "norm_num",
        "hole_4": "norm_num",
        "hole_5": "norm_num",
        "hole_6": "norm_num",
        "hole_1": "norm_num"
      },
      "tactic_mapping": {
        "hole_2": "norm_num",
        "hole_3": "norm_num",
        "hole_4": "norm_num",
        "hole_5": "norm_num",
        "hole_6": "norm_num",
        "hole_1": "norm_num"
      },
      "proof_state_tests": 6,
      "tactic_attempts": {
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_3": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_4": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_5": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_6": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 16.068664,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759064"
    },
    {
      "problem_id": "mathd_numbertheory_237",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759066"
    },
    {
      "problem_id": "mathd_numbertheory_239",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": true,
      "successful_tactics": {
        "hole_2": "norm_cast",
        "hole_3": "omega",
        "hole_1": "linarith"
      },
      "tactic_mapping": {
        "hole_2": "norm_cast",
        "hole_3": "omega",
        "hole_1": "linarith"
      },
      "proof_state_tests": 17,
      "tactic_attempts": {
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na\u271d : \u2211 k \u2208 Finset.Icc 1 12, k < 78\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na\u271d : \u2211 k \u2208 Finset.Icc 1 12, k < 78\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  0 \u2264 a \u2264 77\nwhere\n a := \u2191(\u2211 k \u2208 Finset.Icc 1 12, k)"
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\n\u22a2 \u2211 k \u2208 Finset.Icc 1 12, k = 78"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": true,
            "error_message": null
          }
        ],
        "hole_3": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nh_sum : \u2211 k \u2208 Finset.Icc 1 12, k = 78\na\u271d : (\u2211 k \u2208 Finset.Icc 1 12, k) % 4 < 2\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nh_sum : \u2211 k \u2208 Finset.Icc 1 12, k = 78\na\u271d : (\u2211 k \u2208 Finset.Icc 1 12, k) % 4 < 2\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 33.281021,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759068"
    },
    {
      "problem_id": "mathd_numbertheory_247",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": true,
      "successful_tactics": {
        "hole_6": "omega",
        "hole_7": "norm_num",
        "hole_5": "norm_num",
        "hole_4": "norm_num",
        "hole_3": "linarith",
        "hole_8": "omega",
        "hole_2": "omega",
        "hole_1": "linarith"
      },
      "tactic_mapping": {
        "hole_6": "omega",
        "hole_7": "norm_num",
        "hole_5": "norm_num",
        "hole_4": "norm_num",
        "hole_3": "linarith",
        "hole_8": "omega",
        "hole_2": "omega",
        "hole_1": "linarith"
      },
      "proof_state_tests": 19,
      "tactic_attempts": {
        "hole_6": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nn : \u2115\nh\u2080 h\u2083 : 3 * n % 11 = 2\na\u271d : 3 * (n % 11) < 3 * n % 33\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nn : \u2115\nh\u2080 h\u2083 : 3 * n % 11 = 2\na\u271d : 3 * (n % 11) < 3 * n % 33\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_7": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_5": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_4": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_3": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_8": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nn : \u2115\nh\u2080 : 3 * n % 11 = 2\nh\u2082 : 3 * (n % 11) % 11 = 2\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nn : \u2115\nh\u2080 : 3 * n % 11 = 2\nh\u2082 : 3 * (n % 11) % 11 = 2\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nn : \u2115\nh\u2080 : 3 * n % 11 = 2\nh\u2082 : 3 * (n % 11) % 11 = 2\nh\u2088 :\n  n % 11 = 0 \u2228\n    n % 11 = 1 \u2228\n      n % 11 = 2 \u2228\n        n % 11 = 3 \u2228 n % 11 = 4 \u2228 n % 11 = 5 \u2228 n % 11 = 6 \u2228 n % 11 = 7 \u2228 n % 11 = 8 \u2228 n % 11 = 9 \u2228 n % 11 = 10\na\u271d : n % 11 < 8\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nn : \u2115\nh\u2080 : 3 * n % 11 = 2\nh\u2082 : 3 * (n % 11) % 11 = 2\nh\u2088 :\n  n % 11 = 0 \u2228\n    n % 11 = 1 \u2228\n      n % 11 = 2 \u2228\n        n % 11 = 3 \u2228 n % 11 = 4 \u2228 n % 11 = 5 \u2228 n % 11 = 6 \u2228 n % 11 = 7 \u2228 n % 11 = 8 \u2228 n % 11 = 9 \u2228 n % 11 = 10\na\u271d : n % 11 < 8\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 16.487382,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759070"
    },
    {
      "problem_id": "mathd_numbertheory_277",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": false,
      "successful_tactics": {
        "hole_4": "nlinarith",
        "hole_7": "omega",
        "hole_9": "omega",
        "hole_11": "linarith",
        "hole_12": "linarith",
        "hole_13": "linarith",
        "hole_15": "linarith",
        "hole_16": "nlinarith",
        "hole_14": "nlinarith",
        "hole_18": "linarith",
        "hole_19": "nlinarith",
        "hole_17": "nlinarith",
        "hole_21": "linarith",
        "hole_20": "omega",
        "hole_23": "linarith",
        "hole_22": "omega",
        "hole_1": "linarith"
      },
      "tactic_mapping": {
        "hole_4": "nlinarith",
        "hole_7": "omega",
        "hole_9": "omega",
        "hole_11": "linarith",
        "hole_12": "linarith",
        "hole_13": "linarith",
        "hole_15": "linarith",
        "hole_16": "nlinarith",
        "hole_14": "nlinarith",
        "hole_18": "linarith",
        "hole_19": "nlinarith",
        "hole_17": "nlinarith",
        "hole_21": "linarith",
        "hole_20": "omega",
        "hole_23": "linarith",
        "hole_22": "omega",
        "hole_1": "linarith",
        "hole_10": "admit",
        "hole_2": "admit",
        "hole_5": "admit",
        "hole_3": "admit",
        "hole_6": "admit",
        "hole_8": "admit"
      },
      "proof_state_tests": 113,
      "tactic_attempts": {
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\na\u271d : m = 0\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\na\u271d : m = 0\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\n\u22a2 \u00acm = 0"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nfailed to prove nonzeroness, but it would be possible to prove nonnegativity if desired"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_3": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\na\u271d : n = 0\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\na\u271d : n = 0\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  a \u2265 1\nwhere\n a := \u2191m"
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\n\u22a2 \u00acn = 0"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nfailed to prove nonzeroness, but it would be possible to prove nonnegativity if desired"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_5": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\na\u271d : m * n < m.gcd n * m.lcm n\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\na\u271d : m * n < m.gcd n * m.lcm n\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  d \u2265 1\n  c \u2265 1\n  b \u2265 0\n  a \u2265 0\n  a - b \u2265 1\nwhere\n a := \u2191(m.gcd n) * \u2191(m.lcm n)\n b := \u2191m * \u2191n\n c := \u2191n\n d := \u2191m"
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\n\u22a2 m * n = m.gcd n * m.lcm n"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_4": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084\u2081 : m * n = m.gcd n * m.lcm n\na\u271d : m * n < 756\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_7": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_6": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085\u2081 : 6 \u2223 m.gcd n\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085\u2081 : 6 \u2223 m.gcd n\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  c \u2265 1\n  a \u2265 1\n  1 \u2264 a - 6*b \u2264 5\nwhere\n a := \u2191m\n b := \u2191m / 6\n c := \u2191n"
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085\u2081 : 6 \u2223 m.gcd n\n\u22a2 6 \u2223 m"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_9": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_8": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086\u2081 : 6 \u2223 m.gcd n\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086\u2081 : 6 \u2223 m.gcd n\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  b \u2265 1\n  1 \u2264 b - 6*c \u2264 5\n  a \u2265 1\nwhere\n a := \u2191m / 6\n b := \u2191n\n c := \u2191n / 6"
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086\u2081 : 6 \u2223 m.gcd n\n\u22a2 6 \u2223 n"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_11": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_12": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_13": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_15": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_16": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086 : 6 \u2223 n\nh : \u00acm + n \u2265 60\nh\u2087\u2081 : m + n < 60\nh\u2087\u2082 : m \u2264 59\nh\u2087\u2083 : n \u2264 59\nh\u2087\u2084 : \u00acm \u2265 6\nh\u2087\u2085 : m \u2264 5\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_14": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086 : 6 \u2223 n\nh : \u00acm + n \u2265 60\nh\u2087\u2081 : m + n < 60\nh\u2087\u2082 : m \u2264 59\nh\u2087\u2083 : n \u2264 59\nh\u2087\u2084 : \u00acm \u2265 6\nh\u2087\u2085 : m \u2264 5\nh\u2087\u2086 : m = 0 \u2228 m = 1 \u2228 m = 2 \u2228 m = 3 \u2228 m = 4 \u2228 m = 5\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_18": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_19": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086 : 6 \u2223 n\nh : \u00acm + n \u2265 60\nh\u2087\u2081 : m + n < 60\nh\u2087\u2082 : m \u2264 59\nh\u2087\u2083 : n \u2264 59\nh\u2087\u2084 : m \u2265 6\nh\u2087\u2085 : \u00acn \u2265 6\nh\u2087\u2086 : n \u2264 5\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_17": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086 : 6 \u2223 n\nh : \u00acm + n \u2265 60\nh\u2087\u2081 : m + n < 60\nh\u2087\u2082 : m \u2264 59\nh\u2087\u2083 : n \u2264 59\nh\u2087\u2084 : m \u2265 6\nh\u2087\u2085 : \u00acn \u2265 6\nh\u2087\u2086 : n \u2264 5\nh\u2087\u2087 : n = 0 \u2228 n = 1 \u2228 n = 2 \u2228 n = 3 \u2228 n = 4 \u2228 n = 5\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_21": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_20": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086 : 6 \u2223 n\nh : \u00acm + n \u2265 60\nh\u2087\u2081 : m + n < 60\nh\u2087\u2082 : m \u2264 59\nh\u2087\u2083 : n \u2264 59\nh\u2087\u2084 : m \u2265 6\nh\u2087\u2085 : n \u2265 6\nh\u2087\u2087 : m \u2264 59\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086 : 6 \u2223 n\nh : \u00acm + n \u2265 60\nh\u2087\u2081 : m + n < 60\nh\u2087\u2082 : m \u2264 59\nh\u2087\u2083 : n \u2264 59\nh\u2087\u2084 : m \u2265 6\nh\u2087\u2085 : n \u2265 6\nh\u2087\u2087 : m \u2264 59\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_23": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_22": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086 : 6 \u2223 n\nh : \u00acm + n \u2265 60\nh\u2087\u2081 : m + n < 60\nh\u2087\u2082 : m \u2264 59\nh\u2087\u2083 : n \u2264 59\nh\u2087\u2084 : m \u2265 6\nh\u2087\u2085 : n \u2265 6\nh\u2087\u2086 : m = 6 \u2228 m = 12 \u2228 m = 18 \u2228 m = 24 \u2228 m = 30 \u2228 m = 36 \u2228 m = 42 \u2228 m = 48 \u2228 m = 54\nh\u2087\u2088 : n \u2264 59\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086 : 6 \u2223 n\nh : \u00acm + n \u2265 60\nh\u2087\u2081 : m + n < 60\nh\u2087\u2082 : m \u2264 59\nh\u2087\u2083 : n \u2264 59\nh\u2087\u2084 : m \u2265 6\nh\u2087\u2085 : n \u2265 6\nh\u2087\u2086 : m = 6 \u2228 m = 12 \u2228 m = 18 \u2228 m = 24 \u2228 m = 30 \u2228 m = 36 \u2228 m = 42 \u2228 m = 48 \u2228 m = 54\nh\u2087\u2088 : n \u2264 59\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_10": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086 : 6 \u2223 n\nh : \u00acm + n \u2265 60\nh\u2087\u2081 : m + n < 60\nh\u2087\u2082 : m \u2264 59\nh\u2087\u2083 : n \u2264 59\nh\u2087\u2084 : m \u2265 6\nh\u2087\u2085 : n \u2265 6\nh\u2087\u2086 : m = 6 \u2228 m = 12 \u2228 m = 18 \u2228 m = 24 \u2228 m = 30 \u2228 m = 36 \u2228 m = 42 \u2228 m = 48 \u2228 m = 54\nh\u2087\u2087 : n = 6 \u2228 n = 12 \u2228 n = 18 \u2228 n = 24 \u2228 n = 30 \u2228 n = 36 \u2228 n = 42 \u2228 n = 48 \u2228 n = 54\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086 : 6 \u2223 n\nh : \u00acm + n \u2265 60\nh\u2087\u2081 : m + n < 60\nh\u2087\u2082 : m \u2264 59\nh\u2087\u2083 : n \u2264 59\nh\u2087\u2084 : m \u2265 6\nh\u2087\u2085 : n \u2265 6\nh\u2087\u2086 : m = 6 \u2228 m = 12 \u2228 m = 18 \u2228 m = 24 \u2228 m = 30 \u2228 m = 36 \u2228 m = 42 \u2228 m = 48 \u2228 m = 54\nh\u2087\u2087 : n = 6 \u2228 n = 12 \u2228 n = 18 \u2228 n = 24 \u2228 n = 30 \u2228 n = 36 \u2228 n = 42 \u2228 n = 48 \u2228 n = 54\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\nNo usable constraints found. You may need to unfold definitions so `omega` can see linear arithmetic facts about `Nat` and `Int`, which may also involve multiplication, division, and modular remainder by constants."
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\nm n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\nh\u2082 : m \u2260 0\nh\u2083 : n \u2260 0\nh\u2084 : m * n = 756\nh\u2085 : 6 \u2223 m\nh\u2086 : 6 \u2223 n\nh : \u00acm + n \u2265 60\nh\u2087\u2081 : m + n < 60\nh\u2087\u2082 : m \u2264 59\nh\u2087\u2083 : n \u2264 59\nh\u2087\u2084 : m \u2265 6\nh\u2087\u2085 : n \u2265 6\nh\u2087\u2086 : m = 6 \u2228 m = 12 \u2228 m = 18 \u2228 m = 24 \u2228 m = 30 \u2228 m = 36 \u2228 m = 42 \u2228 m = 48 \u2228 m = 54\nh\u2087\u2087 : n = 6 \u2228 n = 12 \u2228 n = 18 \u2228 n = 24 \u2228 n = 30 \u2228 n = 36 \u2228 n = 42 \u2228 n = 48 \u2228 n = 54\n\u22a2 False"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 27.72963,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759074"
    },
    {
      "problem_id": "mathd_numbertheory_293",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": true,
      "successful_tactics": {
        "hole_2": "omega",
        "hole_1": "linarith"
      },
      "tactic_mapping": {
        "hole_2": "omega",
        "hole_1": "linarith"
      },
      "proof_state_tests": 6,
      "tactic_attempts": {
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nn : \u2115\nh\u2080 : n \u2264 9\nh\u2081 : 11 \u2223 20 * 100 + 10 * n + 7\nh\u2083 : n \u2264 9\nh\u2084 : 11 \u2223 20 * 100 + 10 * n + 7\na\u271d : n < 5\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nn : \u2115\nh\u2080 : n \u2264 9\nh\u2081 : 11 \u2223 20 * 100 + 10 * n + 7\nh\u2083 : n \u2264 9\nh\u2084 : 11 \u2223 20 * 100 + 10 * n + 7\na\u271d : n < 5\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 14.141716,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759076"
    },
    {
      "problem_id": "mathd_numbertheory_3",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": true,
      "successful_tactics": {
        "hole_2": "norm_num",
        "hole_1": "norm_num"
      },
      "tactic_mapping": {
        "hole_2": "norm_num",
        "hole_1": "norm_num"
      },
      "proof_state_tests": 2,
      "tactic_attempts": {
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 13.257201,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759080"
    },
    {
      "problem_id": "mathd_numbertheory_517",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": true,
      "successful_tactics": {
        "hole_2": "norm_num",
        "hole_3": "norm_num",
        "hole_4": "norm_num",
        "hole_5": "norm_num",
        "hole_1": "norm_num"
      },
      "tactic_mapping": {
        "hole_2": "norm_num",
        "hole_3": "norm_num",
        "hole_4": "norm_num",
        "hole_5": "norm_num",
        "hole_1": "norm_num"
      },
      "proof_state_tests": 5,
      "tactic_attempts": {
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_3": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_4": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_5": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 13.130116,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759082"
    },
    {
      "problem_id": "mathd_numbertheory_559",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": true,
      "successful_tactics": {
        "hole_5": "norm_num",
        "hole_4": "norm_num",
        "hole_6": "omega",
        "hole_7": "linarith",
        "hole_3": "linarith",
        "hole_8": "omega",
        "hole_2": "omega",
        "hole_10": "linarith",
        "hole_9": "omega",
        "hole_1": "linarith"
      },
      "tactic_mapping": {
        "hole_5": "norm_num",
        "hole_4": "norm_num",
        "hole_6": "omega",
        "hole_7": "linarith",
        "hole_3": "linarith",
        "hole_8": "omega",
        "hole_2": "omega",
        "hole_10": "linarith",
        "hole_9": "omega",
        "hole_1": "linarith"
      },
      "proof_state_tests": 26,
      "tactic_attempts": {
        "hole_5": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_4": [
          {
            "tactic": "norm_num",
            "success": true,
            "error_message": null
          }
        ],
        "hole_6": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx y : \u2115\nh\u2080 : x % 3 = 2\nh\u2081 : y % 5 = 4\nh\u2082 : x % 10 = y % 10\nh\u2085 : y % 10 % 5 = y % 5\na\u271d : x % 10 % 5 < y % 10 % 5\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\nx y : \u2115\nh\u2080 : x % 3 = 2\nh\u2081 : y % 5 = 4\nh\u2082 : x % 10 = y % 10\nh\u2085 : y % 10 % 5 = y % 5\na\u271d : x % 10 % 5 < y % 10 % 5\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_7": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_3": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_8": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx y : \u2115\nh\u2080 : x % 3 = 2\nh\u2081 : y % 5 = 4\nh\u2082 : x % 10 = y % 10\nh\u2084 : x % 10 % 5 = 4\nh\u2087 : x % 10 < 10\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx y : \u2115\nh\u2080 : x % 3 = 2\nh\u2081 : y % 5 = 4\nh\u2082 : x % 10 = y % 10\nh\u2084 : x % 10 % 5 = 4\nh\u2087 : x % 10 < 10\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx y : \u2115\nh\u2080 : x % 3 = 2\nh\u2081 : y % 5 = 4\nh\u2082 : x % 10 = y % 10\nh\u2084 : x % 10 % 5 = 4\nh\u2086 : x % 10 = 4 \u2228 x % 10 = 9\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx y : \u2115\nh\u2080 : x % 3 = 2\nh\u2081 : y % 5 = 4\nh\u2082 : x % 10 = y % 10\nh\u2084 : x % 10 % 5 = 4\nh\u2086 : x % 10 = 4 \u2228 x % 10 = 9\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_10": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_9": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx y : \u2115\nh\u2080 : x % 3 = 2\nh\u2081 : y % 5 = 4\nh\u2082 : x % 10 = y % 10\nh\u2083 : x % 10 = 4 \u2228 x % 10 = 9\nh\u2085 : x % 3 = 2\nh\u2086 : x % 10 = 4 \u2228 x % 10 = 9\nh\u2087 : \u00ac14 \u2264 x\nh\u2088 : x < 14\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\nx y : \u2115\nh\u2080 : x % 3 = 2\nh\u2081 : y % 5 = 4\nh\u2082 : x % 10 = y % 10\nh\u2083 : x % 10 = 4 \u2228 x % 10 = 9\nh\u2085 : x % 3 = 2\nh\u2086 : x % 10 = 4 \u2228 x % 10 = 9\nh\u2087 : \u00ac14 \u2264 x\nh\u2088 : x < 14\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 19.549348,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759084"
    },
    {
      "problem_id": "amc12b_2002_p7",
      "dataset": "minif2f",
      "verification_count": 1,
      "max_verifications": 3,
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "complete_solve_success": false,
      "successful_tactics": {
        "hole_3": "linarith",
        "hole_2": "linarith",
        "hole_7": "linarith",
        "hole_11": "nlinarith",
        "hole_10": "nlinarith",
        "hole_9": "linarith",
        "hole_8": "linarith",
        "hole_6": "linarith",
        "hole_12": "linarith",
        "hole_13": "linarith",
        "hole_14": "nlinarith",
        "hole_1": "linarith"
      },
      "tactic_mapping": {
        "hole_3": "linarith",
        "hole_2": "linarith",
        "hole_7": "linarith",
        "hole_11": "nlinarith",
        "hole_10": "nlinarith",
        "hole_9": "linarith",
        "hole_8": "linarith",
        "hole_6": "linarith",
        "hole_12": "linarith",
        "hole_13": "linarith",
        "hole_14": "nlinarith",
        "hole_1": "linarith",
        "hole_4": "admit",
        "hole_5": "admit"
      },
      "proof_state_tests": 49,
      "tactic_attempts": {
        "hole_3": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_2": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_4": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : b = a + 1\nh\u2082 : c = b + 1\nh\u2083 : a * b * c = 8 * (a + b + c)\nh\u2084 : c = a + 2\nh\u2085\u2081 : a * b * c = 8 * (a + b + c)\nh\u2085\u2082 : b = a + 1\nh\u2085\u2083 : c = a + 2\na\u271d : a * (a + 1) * (a + 2) < 24 * (a + 1)\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : b = a + 1\nh\u2082 : c = b + 1\nh\u2083 : a * b * c = 8 * (a + b + c)\nh\u2084 : c = a + 2\nh\u2085\u2081 : a * b * c = 8 * (a + b + c)\nh\u2085\u2082 : b = a + 1\nh\u2085\u2083 : c = a + 2\na\u271d : a * (a + 1) * (a + 2) < 24 * (a + 1)\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  e \u2265 0\n  d \u2265 3\n  d \u2265 1\n  24*d - e \u2265 25\nwhere\n d := \u2191c\n e := \u2191(a * (a + 1)) * \u2191(a + 2)"
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : b = a + 1\nh\u2082 : c = b + 1\nh\u2083 : a * b * c = 8 * (a + b + c)\nh\u2084 : c = a + 2\nh\u2085\u2081 : a * b * c = 8 * (a + b + c)\nh\u2085\u2082 : b = a + 1\nh\u2085\u2083 : c = a + 2\n\u22a2 a * (a + 1) * (a + 2) = 24 * (a + 1)"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_7": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_11": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase a\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : b = a + 1\nh\u2082 : c = b + 1\nh\u2083 : a * b * c = 8 * (a + b + c)\nh\u2084 : c = a + 2\nh\u2085 : a * (a + 1) * (a + 2) = 24 * (a + 1)\nh : \u00aca \u2264 6\nh\u2086\u2082 h\u2086\u2084 : a \u2265 7\nh\u2086\u2086 : a * (a + 1) * (a + 2) = a * (a + 1) * (a + 2)\nh\u2086\u2087 : 24 * (a + 1) = 24 * (a + 1)\na\u271d : 7 * 9 > a * (a + 2)\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_10": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : b = a + 1\nh\u2082 : c = b + 1\nh\u2083 : a * b * c = 8 * (a + b + c)\nh\u2084 : c = a + 2\nh\u2085 : a * (a + 1) * (a + 2) = 24 * (a + 1)\nh : \u00aca \u2264 6\nh\u2086\u2082 h\u2086\u2084 : a \u2265 7\nh\u2086\u2086 : a * (a + 1) * (a + 2) = a * (a + 1) * (a + 2)\nh\u2086\u2087 : 24 * (a + 1) = 24 * (a + 1)\nh\u2086\u2089 : a * (a + 2) \u2265 7 * 9\na\u271d : 24 * (a + 1) \u2265 a * (a + 1) * (a + 2)\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_9": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_8": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_6": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_5": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : b = a + 1\nh\u2082 : c = b + 1\nh\u2083 : a * b * c = 8 * (a + b + c)\nh\u2084 : c = a + 2\nh\u2085 : a * (a + 1) * (a + 2) = 24 * (a + 1)\nh\u2086\u2081 : a \u2264 6\na\u271d : a < 4\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : b = a + 1\nh\u2082 : c = b + 1\nh\u2083 : a * b * c = 8 * (a + b + c)\nh\u2084 : c = a + 2\nh\u2085 : a * (a + 1) * (a + 2) = 24 * (a + 1)\nh\u2086\u2081 : a \u2264 6\na\u271d : a < 4\n\u22a2 False failed"
          },
          {
            "tactic": "omega",
            "success": false,
            "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  3 \u2264 d \u2264 5\n  d \u2265 1\n  d \u2265 1\nwhere\n d := \u2191c"
          },
          {
            "tactic": "ring",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "ring_nf",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "simpa",
            "success": false,
            "error_message": "Lean error:\ntactic 'assumption' failed\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : b = a + 1\nh\u2082 : c = b + 1\nh\u2083 : a * b * c = 8 * (a + b + c)\nh\u2084 : c = a + 2\nh\u2085 : a * (a + 1) * (a + 2) = 24 * (a + 1)\nh\u2086\u2081 : a \u2264 6\n\u22a2 a = 4"
          },
          {
            "tactic": "field_simp",
            "success": false,
            "error_message": "Lean error:\nsimp made no progress"
          },
          {
            "tactic": "positivity",
            "success": false,
            "error_message": "Lean error:\nnot a positivity goal"
          },
          {
            "tactic": "norm_cast",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          }
        ],
        "hole_12": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_13": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_14": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": false,
            "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : b = a + 1\nh\u2082 : c = b + 1\nh\u2083 : a * b * c = 8 * (a + b + c)\nh\u2084 : c = a + 2\nh\u2085 : a * (a + 1) * (a + 2) = 24 * (a + 1)\nh\u2086 : a = 4\nh\u2087 : b = 5\nh\u2088 : c = 6\na\u271d : a ^ 2 + (b ^ 2 + c ^ 2) < 77\n\u22a2 False failed"
          },
          {
            "tactic": "nlinarith",
            "success": true,
            "error_message": null
          }
        ],
        "hole_1": [
          {
            "tactic": "norm_num",
            "success": false,
            "error_message": "Tactic status: Incomplete: open goals remain, goals remain: 1"
          },
          {
            "tactic": "linarith",
            "success": true,
            "error_message": null
          }
        ]
      },
      "processing_time_seconds": 36.94845,
      "constraint_satisfied": true,
      "timestamp": "2025-06-18T15:54:03.759087"
    },
    {
      "problem_id": "amc12b_2020_p21",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759088"
    },
    {
      "problem_id": "mathd_numbertheory_711",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759090"
    },
    {
      "problem_id": "mathd_numbertheory_728",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759092"
    },
    {
      "problem_id": "mathd_numbertheory_99",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759093"
    },
    {
      "problem_id": "numbertheory_aoddbdiv4asqpbsqmod8eq1",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759099"
    },
    {
      "problem_id": "numbertheory_fxeq4powxp6powxp9powx_f2powmdvdf2pown",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759101"
    },
    {
      "problem_id": "mathd_algebra_208",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759103"
    },
    {
      "problem_id": "mathd_numbertheory_427",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759105"
    },
    {
      "problem_id": "algebra_absapbon1pabsapbleqsumabsaon1pabsa",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759106"
    },
    {
      "problem_id": "amc12a_2002_p13",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759108"
    },
    {
      "problem_id": "amc12b_2021_p3",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759109"
    },
    {
      "problem_id": "amc12b_2021_p9",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759111"
    },
    {
      "problem_id": "imo_1964_p2",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759112"
    },
    {
      "problem_id": "imo_1981_p6",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759114"
    },
    {
      "problem_id": "induction_11div10tonmn1ton",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759116"
    },
    {
      "problem_id": "mathd_algebra_107",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759117"
    },
    {
      "problem_id": "mathd_algebra_142",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759119"
    },
    {
      "problem_id": "mathd_algebra_153",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759120"
    },
    {
      "problem_id": "mathd_algebra_158",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759122"
    },
    {
      "problem_id": "mathd_algebra_170",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759123"
    },
    {
      "problem_id": "mathd_algebra_209",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759125"
    },
    {
      "problem_id": "mathd_algebra_24",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759127"
    },
    {
      "problem_id": "mathd_algebra_400",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759128"
    },
    {
      "problem_id": "mathd_algebra_412",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759130"
    },
    {
      "problem_id": "mathd_algebra_419",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759131"
    },
    {
      "problem_id": "mathd_algebra_432",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759133"
    },
    {
      "problem_id": "mathd_algebra_478",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759134"
    },
    {
      "problem_id": "mathd_algebra_756",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759136"
    },
    {
      "problem_id": "aime_1983_p2",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759137"
    },
    {
      "problem_id": "aime_1984_p1",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759139"
    },
    {
      "problem_id": "aime_1988_p8",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759140"
    },
    {
      "problem_id": "aime_1991_p9",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759142"
    },
    {
      "problem_id": "algebra_2varlineareq_fp3zeq11_3tfm1m5zeqn68_feqn10_zeq7",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759144"
    },
    {
      "problem_id": "algebra_apbpceq2_abpbcpcaeq1_aleq1on3anbleq1ancleq4on3",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759146"
    },
    {
      "problem_id": "algebra_sqineq_at2malt1",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759147"
    },
    {
      "problem_id": "amc12_2001_p21",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759149"
    },
    {
      "problem_id": "amc12a_2003_p5",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759150"
    },
    {
      "problem_id": "amc12a_2021_p14",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759152"
    },
    {
      "problem_id": "amc12a_2021_p22",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759153"
    },
    {
      "problem_id": "amc12b_2002_p19",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759155"
    },
    {
      "problem_id": "amc12b_2002_p2",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759156"
    },
    {
      "problem_id": "amc12b_2020_p2",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759158"
    },
    {
      "problem_id": "amc12b_2021_p18",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759159"
    },
    {
      "problem_id": "amc12b_2021_p4",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759161"
    },
    {
      "problem_id": "imo_1962_p2",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759162"
    },
    {
      "problem_id": "imo_1963_p5",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759164"
    },
    {
      "problem_id": "imo_1983_p6",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759166"
    },
    {
      "problem_id": "imo_1992_p1",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759167"
    },
    {
      "problem_id": "induction_12dvd4expnp1p20",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759169"
    },
    {
      "problem_id": "induction_1pxpownlt1pnx",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759170"
    },
    {
      "problem_id": "induction_nfactltnexpnm1ngt3",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759172"
    },
    {
      "problem_id": "induction_sumkexp3eqsumksq",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759174"
    },
    {
      "problem_id": "mathd_algebra_114",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759176"
    },
    {
      "problem_id": "mathd_algebra_156",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759177"
    },
    {
      "problem_id": "mathd_algebra_196",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759179"
    },
    {
      "problem_id": "mathd_algebra_263",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759180"
    },
    {
      "problem_id": "mathd_algebra_270",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759182"
    },
    {
      "problem_id": "mathd_algebra_275",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759184"
    },
    {
      "problem_id": "mathd_algebra_302",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759186"
    },
    {
      "problem_id": "mathd_algebra_329",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759187"
    },
    {
      "problem_id": "mathd_algebra_338",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759189"
    },
    {
      "problem_id": "mathd_algebra_354",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759191"
    },
    {
      "problem_id": "mathd_algebra_392",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759193"
    },
    {
      "problem_id": "mathd_algebra_452",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759194"
    },
    {
      "problem_id": "mathd_algebra_484",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759195"
    },
    {
      "problem_id": "mathd_numbertheory_100",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759197"
    },
    {
      "problem_id": "mathd_numbertheory_135",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759198"
    },
    {
      "problem_id": "mathd_numbertheory_185",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759200"
    },
    {
      "problem_id": "mathd_numbertheory_212",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759202"
    },
    {
      "problem_id": "mathd_numbertheory_227",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759203"
    },
    {
      "problem_id": "mathd_numbertheory_296",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759204"
    },
    {
      "problem_id": "mathd_numbertheory_314",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759206"
    },
    {
      "problem_id": "mathd_numbertheory_34",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759207"
    },
    {
      "problem_id": "mathd_numbertheory_342",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759209"
    },
    {
      "problem_id": "mathd_numbertheory_435",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759210"
    },
    {
      "problem_id": "mathd_numbertheory_447",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759212"
    },
    {
      "problem_id": "mathd_numbertheory_551",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759213"
    },
    {
      "problem_id": "mathd_numbertheory_582",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759215"
    },
    {
      "problem_id": "mathd_numbertheory_66",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759216"
    },
    {
      "problem_id": "mathd_numbertheory_769",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759218"
    },
    {
      "problem_id": "mathd_algebra_184",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759219"
    },
    {
      "problem_id": "mathd_algebra_459",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759221"
    },
    {
      "problem_id": "algebra_9onxpypzleqsum2onxpy",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759222"
    },
    {
      "problem_id": "amc12_2001_p5",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759224"
    },
    {
      "problem_id": "amc12b_2020_p13",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759225"
    },
    {
      "problem_id": "aime_1983_p1",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759228"
    },
    {
      "problem_id": "aime_1987_p5",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759230"
    },
    {
      "problem_id": "aime_1990_p15",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759231"
    },
    {
      "problem_id": "aime_1997_p9",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759232"
    },
    {
      "problem_id": "algebra_sqineq_unitcircatbpamblt1",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759235"
    },
    {
      "problem_id": "amc12_2000_p6",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759236"
    },
    {
      "problem_id": "amc12a_2013_p4",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759238"
    },
    {
      "problem_id": "amc12a_2019_p12",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759239"
    },
    {
      "problem_id": "imo_1965_p2",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759241"
    },
    {
      "problem_id": "amc12b_2020_p6",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759242"
    },
    {
      "problem_id": "imo_1968_p5_1",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759245"
    },
    {
      "problem_id": "induction_prod1p1onk3le3m1onn",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759246"
    },
    {
      "problem_id": "mathd_algebra_139",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759248"
    },
    {
      "problem_id": "mathd_algebra_143",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759249"
    },
    {
      "problem_id": "mathd_algebra_148",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759251"
    },
    {
      "problem_id": "mathd_algebra_176",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759253"
    },
    {
      "problem_id": "mathd_algebra_215",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759254"
    },
    {
      "problem_id": "mathd_algebra_246",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759256"
    },
    {
      "problem_id": "mathd_algebra_288",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759257"
    },
    {
      "problem_id": "mathd_algebra_289",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759259"
    },
    {
      "problem_id": "mathd_algebra_296",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759261"
    },
    {
      "problem_id": "mathd_algebra_304",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759262"
    },
    {
      "problem_id": "mathd_algebra_314",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759264"
    },
    {
      "problem_id": "mathd_algebra_33",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759266"
    },
    {
      "problem_id": "mathd_algebra_342",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759268"
    },
    {
      "problem_id": "mathd_algebra_346",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759269"
    },
    {
      "problem_id": "mathd_algebra_427",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759270"
    },
    {
      "problem_id": "mathd_algebra_44",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759272"
    },
    {
      "problem_id": "mathd_algebra_487",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759274"
    },
    {
      "problem_id": "mathd_algebra_76",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759276"
    },
    {
      "problem_id": "mathd_numbertheory_150",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759278"
    },
    {
      "problem_id": "mathd_numbertheory_175",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759280"
    },
    {
      "problem_id": "mathd_numbertheory_222",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759281"
    },
    {
      "problem_id": "mathd_numbertheory_229",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759283"
    },
    {
      "problem_id": "mathd_numbertheory_320",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759284"
    },
    {
      "problem_id": "mathd_numbertheory_328",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759286"
    },
    {
      "problem_id": "mathd_numbertheory_341",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759287"
    },
    {
      "problem_id": "mathd_numbertheory_343",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759289"
    },
    {
      "problem_id": "mathd_numbertheory_345",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759292"
    },
    {
      "problem_id": "mathd_numbertheory_457",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759293"
    },
    {
      "problem_id": "mathd_numbertheory_483",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759296"
    },
    {
      "problem_id": "mathd_numbertheory_495",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759297"
    },
    {
      "problem_id": "mathd_numbertheory_521",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759299"
    },
    {
      "problem_id": "mathd_numbertheory_552",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759300"
    },
    {
      "problem_id": "mathd_numbertheory_765",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759302"
    },
    {
      "problem_id": "mathd_numbertheory_85",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759303"
    },
    {
      "problem_id": "numbertheory_notequiv2i2jasqbsqdiv8",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759305"
    },
    {
      "problem_id": "induction_pord1p1on2powklt5on2",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759306"
    },
    {
      "problem_id": "mathd_algebra_362",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759308"
    },
    {
      "problem_id": "numbertheory_3pow2pownm1mod2pownp3eq2pownp2",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759309"
    },
    {
      "problem_id": "algebra_apbon2pownleqapownpbpowon2",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759312"
    },
    {
      "problem_id": "amc12a_2021_p8",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759313"
    },
    {
      "problem_id": "imo_1959_p1",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759315"
    },
    {
      "problem_id": "mathd_numbertheory_1124",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759316"
    },
    {
      "problem_id": "mathd_numbertheory_12",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759318"
    },
    {
      "problem_id": "mathd_numbertheory_234",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759319"
    },
    {
      "problem_id": "mathd_numbertheory_235",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759321"
    },
    {
      "problem_id": "mathd_numbertheory_254",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759322"
    },
    {
      "problem_id": "mathd_algebra_160",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759323"
    },
    {
      "problem_id": "mathd_algebra_171",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759325"
    },
    {
      "problem_id": "mathd_algebra_188",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759327"
    },
    {
      "problem_id": "mathd_algebra_313",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759329"
    },
    {
      "problem_id": "mathd_algebra_320",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759330"
    },
    {
      "problem_id": "mathd_algebra_332",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759332"
    },
    {
      "problem_id": "mathd_algebra_113",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759333"
    },
    {
      "problem_id": "mathd_algebra_359",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759334"
    },
    {
      "problem_id": "mathd_algebra_388",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759336"
    },
    {
      "problem_id": "mathd_algebra_398",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759337"
    },
    {
      "problem_id": "aime_1984_p7",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759339"
    },
    {
      "problem_id": "mathd_algebra_440",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759341"
    },
    {
      "problem_id": "mathd_algebra_441",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759343"
    },
    {
      "problem_id": "mathd_algebra_125",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759344"
    },
    {
      "problem_id": "mathd_algebra_129",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759346"
    },
    {
      "problem_id": "mathd_algebra_137",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759348"
    },
    {
      "problem_id": "mathd_algebra_141",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759349"
    },
    {
      "problem_id": "aime_1989_p8",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759351"
    },
    {
      "problem_id": "mathd_algebra_513",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759352"
    },
    {
      "problem_id": "mathd_algebra_598",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759354"
    },
    {
      "problem_id": "aime_1994_p3",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759355"
    },
    {
      "problem_id": "algebra_amgm_sumasqdivbgeqsuma",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759357"
    },
    {
      "problem_id": "algebra_sqineq_unitcircatbpabsamblt1",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759360"
    },
    {
      "problem_id": "mathd_numbertheory_299",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759361"
    },
    {
      "problem_id": "mathd_numbertheory_353",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759362"
    },
    {
      "problem_id": "mathd_numbertheory_430",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759364"
    },
    {
      "problem_id": "amc12_2000_p20",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759366"
    },
    {
      "problem_id": "mathd_numbertheory_5",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759367"
    },
    {
      "problem_id": "mathd_numbertheory_541",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759369"
    },
    {
      "problem_id": "mathd_numbertheory_618",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759370"
    },
    {
      "problem_id": "amc12a_2009_p7",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759373"
    },
    {
      "problem_id": "numbertheory_4x3m7y3neq2003",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759374"
    },
    {
      "problem_id": "numbertheory_x5neqy2p4",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759377"
    },
    {
      "problem_id": "mathd_algebra_276",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759379"
    },
    {
      "problem_id": "numbertheory_2pownm1prime_nprime",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759380"
    },
    {
      "problem_id": "algebra_amgm_sum1toneqn_prod1tonleq1",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759382"
    },
    {
      "problem_id": "amc12a_2008_p25",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759383"
    },
    {
      "problem_id": "mathd_algebra_80",
      "dataset": "minif2f",
      "verification_count": 999,
      "max_verifications": 3,
      "original_verification_pass": false,
      "hole_verification_pass": false,
      "filled_verification_pass": false,
      "complete_solve_success": false,
      "successful_tactics": {},
      "tactic_mapping": {},
      "proof_state_tests": 0,
      "tactic_attempts": {},
      "processing_time_seconds": 0.0,
      "constraint_satisfied": false,
      "timestamp": "2025-06-18T15:54:03.759385"
    }
  ]
}