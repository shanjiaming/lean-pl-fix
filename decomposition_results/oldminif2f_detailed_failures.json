[
  {
    "problem_id": "amc12_2000_p1",
    "dataset": "minif2f",
    "error_message": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 577, in _process_content_for_holes\n    result = self.lean_verifier.run_with_header(header_content, cmd_str, all_tactics=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "error_type": "TimeoutError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 577, in _process_content_for_holes\n    result = self.lean_verifier.run_with_header(header_content, cmd_str, all_tactics=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "processing_time_seconds": 221.844836,
    "timestamp": "2025-06-15T15:58:09.415423"
  },
  {
    "problem_id": "amc12_2000_p12",
    "dataset": "minif2f",
    "error_message": "maximum recursion depth exceeded",
    "error_type": "RecursionError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 626, in _process_content_for_holes\n    process_nodes_for_holes(top_level_nodes)\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 624, in process_nodes_for_holes\n    process_nodes_for_holes(node.subhaves)\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 624, in process_nodes_for_holes\n    process_nodes_for_holes(node.subhaves)\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 624, in process_nodes_for_holes\n    process_nodes_for_holes(node.subhaves)\n  [Previous line repeated 987 more times]\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 610, in process_nodes_for_holes\n    if node.is_have():\n       ^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 97, in is_have\n    has_by = re.search(r':=\\s+by\\b', tactic_text) is not None\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/re/__init__.py\", line 177, in search\n    return _compile(pattern, flags).search(string)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nRecursionError: maximum recursion depth exceeded\n",
    "processing_time_seconds": 31.675806,
    "timestamp": "2025-06-15T15:58:41.091785"
  },
  {
    "problem_id": "amc12a_2021_p19",
    "dataset": "minif2f",
    "error_message": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1168, in process_problem\n    original_verification_pass, verification_error = self.verify_lean_code(header_content, original_content, with_macro=False, return_error_string=True)\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 391, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "error_type": "TimeoutError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1168, in process_problem\n    original_verification_pass, verification_error = self.verify_lean_code(header_content, original_content, with_macro=False, return_error_string=True)\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 391, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "processing_time_seconds": 70.507304,
    "timestamp": "2025-06-15T16:00:10.961560"
  },
  {
    "problem_id": "algebra_apbpceq2_abpbcpcaeq1_aleq1on3anbleq1ancleq4on3",
    "dataset": "minif2f",
    "error_message": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1168, in process_problem\n    original_verification_pass, verification_error = self.verify_lean_code(header_content, original_content, with_macro=False, return_error_string=True)\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 391, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "error_type": "TimeoutError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1168, in process_problem\n    original_verification_pass, verification_error = self.verify_lean_code(header_content, original_content, with_macro=False, return_error_string=True)\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 391, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "processing_time_seconds": 108.067577,
    "timestamp": "2025-06-15T16:15:05.091844"
  },
  {
    "problem_id": "amc12a_2021_p22",
    "dataset": "minif2f",
    "error_message": "Problem amc12a_2021_p22 skipped: code too long (631 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 631,
    "processing_time_seconds": 0.000191,
    "timestamp": "2025-06-15T16:17:56.931675"
  },
  {
    "problem_id": "imo_1992_p1",
    "dataset": "minif2f",
    "error_message": "Problem imo_1992_p1 skipped: code too long (580 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 580,
    "processing_time_seconds": 0.000171,
    "timestamp": "2025-06-15T16:23:02.605398"
  },
  {
    "problem_id": "imo_1965_p2",
    "dataset": "minif2f",
    "error_message": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1168, in process_problem\n    original_verification_pass, verification_error = self.verify_lean_code(header_content, original_content, with_macro=False, return_error_string=True)\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 391, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "error_type": "TimeoutError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1168, in process_problem\n    original_verification_pass, verification_error = self.verify_lean_code(header_content, original_content, with_macro=False, return_error_string=True)\n                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 391, in verify_lean_code\n    result = self.lean_verifier.run_with_header(header, content)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 999, in run_with_header\n    ret = future.result(timeout=60)  # 60 seconds timeout\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/concurrent/futures/_base.py\", line 458, in result\n    raise TimeoutError()\nTimeoutError\n",
    "processing_time_seconds": 124.167333,
    "timestamp": "2025-06-15T16:38:36.692195"
  },
  {
    "problem_id": "aime_1984_p7",
    "dataset": "minif2f",
    "error_message": "Problem aime_1984_p7 skipped: code too long (2107 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 2107,
    "processing_time_seconds": 0.00029,
    "timestamp": "2025-06-15T16:56:12.792727"
  },
  {
    "problem_id": "aime_1994_p3",
    "dataset": "minif2f",
    "error_message": "Problem aime_1994_p3 skipped: code too long (732 lines > 400 lines limit)",
    "failure_reason": "code_too_long",
    "code_lines": 732,
    "processing_time_seconds": 0.00017,
    "timestamp": "2025-06-15T16:58:00.064162"
  },
  {
    "problem_id": "mathd_numbertheory_541",
    "dataset": "minif2f",
    "error_message": "maximum recursion depth exceeded",
    "error_type": "RecursionError",
    "traceback": "Traceback (most recent call last):\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1205, in process_problem\n    steps, complete_fixed_proof = self.decompose_problem(problem, hole_filling_function)\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 73, in decompose_problem\n    hole_content, hole_list = self.generate_in_place_holes(problem)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 1055, in generate_in_place_holes\n    return self._process_content_for_holes(problem_content, header_content)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 626, in _process_content_for_holes\n    process_nodes_for_holes(top_level_nodes)\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 624, in process_nodes_for_holes\n    process_nodes_for_holes(node.subhaves)\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 624, in process_nodes_for_holes\n    process_nodes_for_holes(node.subhaves)\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 624, in process_nodes_for_holes\n    process_nodes_for_holes(node.subhaves)\n  [Previous line repeated 987 more times]\n  File \"/home/matheye/lean-pl-fix/decompose_hole_merge_pipeline.py\", line 610, in process_nodes_for_holes\n    if node.is_have():\n       ^^^^^^^^^^^^^^\n  File \"/home/matheye/lean-pl-fix/decompose_solver.py\", line 97, in is_have\n    has_by = re.search(r':=\\s+by\\b', tactic_text) is not None\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/matheye/anaconda3/lib/python3.12/re/__init__.py\", line 177, in search\n    return _compile(pattern, flags).search(string)\n           ^^^^^^^^^^^^^^^^^^^^^^^^\nRecursionError: maximum recursion depth exceeded\n",
    "processing_time_seconds": 31.767934,
    "timestamp": "2025-06-15T17:02:05.842998"
  }
]