{
  "problem_id": "elementary_algebra__p20",
  "dataset": "proverbench",
  "timestamp": "2025-06-14T18:21:01.051337",
  "header_file": "header.lean",
  "problem_file": "problem.lean",
  "original_verification_pass": false,
  "filled_verification_pass": false,
  "hole_verification_pass": false,
  "holes": [
    {
      "hole_id": "hole_3",
      "original_proof": "norm_num [h\u2081] at h\u2084 h\u2085 h\u2086 h\u2087 h\u2088 h\u2089 h\u2081\u2080 h\u2081\u2081 \u22a2",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_4",
      "original_proof": "norm_num [h\u2081, h\u2083] at h\u2085 h\u2086 h\u2087 h\u2088 h\u2089 h\u2081\u2080 h\u2081\u2081 h\u2081\u2082 \u22a2",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_5",
      "original_proof": "intro n x\ninduction n with\n| ofNat n =>\n  induction n with\n  | zero => norm_num [h\u2083, h\u2084] <;> linarith\n  | succ n ih =>\n    have h\u2086 := h\u2084 (x + n)\n    have h\u2087 := h\u2084 (x + \u2191n + 1)\n    simp [add_assoc, add_comm, add_left_comm] at * <;> simp_all [Int.ofNat_add, Int.ofNat_one, add_assoc] <;> linarith\n| negSucc n =>\n  induction n with\n  | zero =>\n    have h\u2086 := h\u2084 (x - 1)\n    have h\u2087 := h\u2084 x\n    simp [add_assoc, add_comm, add_left_comm] at * <;> simp_all [Int.ofNat_add, Int.ofNat_one, add_assoc] <;> linarith\n  | succ n ih =>\n    have h\u2086 := h\u2084 (x + (-\u2191n - 1))\n    have h\u2087 := h\u2084 (x + (-\u2191n - 1 + 1))\n    have h\u2088 := h\u2084 (x + (-\u2191n - 1 - 1))\n    simp [add_assoc, add_comm, add_left_comm] at * <;> simp_all [Int.ofNat_add, Int.ofNat_one, add_assoc] <;> linarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_7",
      "original_proof": "norm_num [h\u2081, h\u2083] at *",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_6",
      "original_proof": "exact h\u2087",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_2",
      "original_proof": "exact h\u2086",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_9",
      "original_proof": "norm_num at h\u2082 \u22a2\nlinarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_10",
      "original_proof": "ring_nf at h\u2083 h\u2084 h\u2085 h\u2086 h\u2087 \u22a2\nnlinarith",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_8",
      "original_proof": "exact \u27e8h1, h2\u27e9",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_11",
      "original_proof": "constructor\nintro h\nexact h_forward h\nintro h\nexact h_backward h",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    },
    {
      "hole_id": "hole_1",
      "original_proof": "exact h_main",
      "best_tactic": null,
      "method": "unigram_tactics",
      "original_verification_pass": true,
      "hole_verification_pass": true,
      "filled_verification_pass": true,
      "tactics_tried": [],
      "successful_tactics": [],
      "failed_tactics": []
    }
  ]
}