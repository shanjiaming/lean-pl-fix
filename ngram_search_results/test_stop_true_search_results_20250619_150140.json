{
  "search_metadata": {
    "hole_id": "test_stop_true",
    "timestamp": "2025-06-19T15:01:40.646068",
    "searcher_config": {
      "max_depth": 2,
      "stop_on_first_success": true,
      "available_tactics": [
        "norm_num",
        "linarith",
        "nlinarith",
        "omega",
        "ring",
        "ring_nf",
        "simp",
        "simpa",
        "field_simp",
        "positivity",
        "norm_cast"
      ],
      "terminal_tactics": [
        "linarith",
        "nlinarith",
        "omega"
      ]
    }
  },
  "search_results": {
    "hole_id": "test_stop_true",
    "successful_paths": [
      [
        "norm_cast",
        "linarith"
      ]
    ],
    "total_nodes": 56,
    "search_time_seconds": 3.1939327716827393,
    "cache_stats": {
      "hits": 11,
      "misses": 46,
      "hit_rate": 19.298245614035086
    },
    "node_attempts": [
      {
        "tactic_sequence": [
          "norm_num"
        ],
        "node_id": "norm_num",
        "parent_id": "root",
        "status": "incomplete",
        "depth": 1,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:37.489358",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "linarith"
        ],
        "node_id": "linarith",
        "parent_id": "root",
        "status": "error",
        "depth": 1,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b : ℕ\nh : a + b = 10\na✝ : ↑a + ↑b + 1 < 6 + 5\n⊢ False failed",
        "execution_time": "2025-06-19T15:01:37.530519",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "nlinarith"
        ],
        "node_id": "nlinarith",
        "parent_id": "root",
        "status": "error",
        "depth": 1,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b : ℕ\nh : a + b = 10\na✝ : ↑a + ↑b + 1 < 6 + 5\n⊢ False failed",
        "execution_time": "2025-06-19T15:01:37.752893",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "omega"
        ],
        "node_id": "omega",
        "parent_id": "root",
        "status": "error",
        "depth": 1,
        "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  0 ≤ c ≤ 10\nwhere\n c := ↑b",
        "execution_time": "2025-06-19T15:01:37.754237",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring"
        ],
        "node_id": "ring",
        "parent_id": "root",
        "status": "incomplete",
        "depth": 1,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:37.799549",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "ring_nf"
        ],
        "node_id": "ring_nf",
        "parent_id": "root",
        "status": "incomplete",
        "depth": 1,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:37.828586",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "simp"
        ],
        "node_id": "simp",
        "parent_id": "root",
        "status": "error",
        "depth": 1,
        "error_message": "Lean error:\nsimp made no progress",
        "execution_time": "2025-06-19T15:01:37.839153",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "simpa"
        ],
        "node_id": "simpa",
        "parent_id": "root",
        "status": "error",
        "depth": 1,
        "error_message": "Lean error:\ntactic 'assumption' failed\na b : ℕ\nh : a + b = 10\n⊢ ↑a + ↑b + 1 = 6 + 5",
        "execution_time": "2025-06-19T15:01:37.851633",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "field_simp"
        ],
        "node_id": "field_simp",
        "parent_id": "root",
        "status": "error",
        "depth": 1,
        "error_message": "Lean error:\nsimp made no progress",
        "execution_time": "2025-06-19T15:01:37.865973",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "positivity"
        ],
        "node_id": "positivity",
        "parent_id": "root",
        "status": "error",
        "depth": 1,
        "error_message": "Lean error:\nnot a positivity goal",
        "execution_time": "2025-06-19T15:01:37.867641",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_cast"
        ],
        "node_id": "norm_cast",
        "parent_id": "root",
        "status": "incomplete",
        "depth": 1,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:37.885372",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "norm_num",
          "norm_num"
        ],
        "node_id": "norm_num@norm_num",
        "parent_id": "norm_num",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:37.943091",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "norm_num",
          "linarith"
        ],
        "node_id": "norm_num@linarith",
        "parent_id": "norm_num",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b : ℕ\nh : a + b = 10\na✝ : ↑a + ↑b + 1 < 11\n⊢ False failed",
        "execution_time": "2025-06-19T15:01:38.028593",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_num",
          "nlinarith"
        ],
        "node_id": "norm_num@nlinarith",
        "parent_id": "norm_num",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b : ℕ\nh : a + b = 10\na✝ : ↑a + ↑b + 1 < 11\n⊢ False failed",
        "execution_time": "2025-06-19T15:01:38.261685",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_num",
          "omega"
        ],
        "node_id": "norm_num@omega",
        "parent_id": "norm_num",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  0 ≤ c ≤ 10\nwhere\n c := ↑b",
        "execution_time": "2025-06-19T15:01:38.302249",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_num",
          "ring"
        ],
        "node_id": "norm_num@ring",
        "parent_id": "norm_num",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:38.398987",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "norm_num",
          "ring_nf"
        ],
        "node_id": "norm_num@ring_nf",
        "parent_id": "norm_num",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:38.470646",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "norm_num",
          "simp"
        ],
        "node_id": "norm_num@simp",
        "parent_id": "norm_num",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nsimp made no progress",
        "execution_time": "2025-06-19T15:01:38.519971",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_num",
          "simpa"
        ],
        "node_id": "norm_num@simpa",
        "parent_id": "norm_num",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\ntactic 'assumption' failed\na b : ℕ\nh : a + b = 10\n⊢ ↑a + ↑b + 1 = 11",
        "execution_time": "2025-06-19T15:01:38.571255",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_num",
          "field_simp"
        ],
        "node_id": "norm_num@field_simp",
        "parent_id": "norm_num",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nsimp made no progress",
        "execution_time": "2025-06-19T15:01:38.632311",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_num",
          "positivity"
        ],
        "node_id": "norm_num@positivity",
        "parent_id": "norm_num",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nnot a positivity goal",
        "execution_time": "2025-06-19T15:01:38.675888",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_num",
          "norm_cast"
        ],
        "node_id": "norm_num@norm_cast",
        "parent_id": "norm_num",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:38.736947",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "ring",
          "norm_num"
        ],
        "node_id": "ring@norm_num",
        "parent_id": "ring",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:38.819396",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "ring",
          "linarith"
        ],
        "node_id": "ring@linarith",
        "parent_id": "ring",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b : ℕ\nh : a + b = 10\na✝ : 1 + ↑a + ↑b < 11\n⊢ False failed",
        "execution_time": "2025-06-19T15:01:38.910443",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring",
          "nlinarith"
        ],
        "node_id": "ring@nlinarith",
        "parent_id": "ring",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b : ℕ\nh : a + b = 10\na✝ : 1 + ↑a + ↑b < 11\n⊢ False failed",
        "execution_time": "2025-06-19T15:01:39.165482",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring",
          "omega"
        ],
        "node_id": "ring@omega",
        "parent_id": "ring",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  0 ≤ c ≤ 10\nwhere\n c := ↑b",
        "execution_time": "2025-06-19T15:01:39.216271",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring",
          "ring"
        ],
        "node_id": "ring@ring",
        "parent_id": "ring",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:39.294402",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "ring",
          "ring_nf"
        ],
        "node_id": "ring@ring_nf",
        "parent_id": "ring",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:39.360836",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "ring",
          "simp"
        ],
        "node_id": "ring@simp",
        "parent_id": "ring",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nsimp made no progress",
        "execution_time": "2025-06-19T15:01:39.419786",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring",
          "simpa"
        ],
        "node_id": "ring@simpa",
        "parent_id": "ring",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\ntactic 'assumption' failed\na b : ℕ\nh : a + b = 10\n⊢ 1 + ↑a + ↑b = 11",
        "execution_time": "2025-06-19T15:01:39.482090",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring",
          "field_simp"
        ],
        "node_id": "ring@field_simp",
        "parent_id": "ring",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nsimp made no progress",
        "execution_time": "2025-06-19T15:01:39.552736",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring",
          "positivity"
        ],
        "node_id": "ring@positivity",
        "parent_id": "ring",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nnot a positivity goal",
        "execution_time": "2025-06-19T15:01:39.602553",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring",
          "norm_cast"
        ],
        "node_id": "ring@norm_cast",
        "parent_id": "ring",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:39.663625",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "ring_nf",
          "norm_num"
        ],
        "node_id": "ring_nf@norm_num",
        "parent_id": "ring_nf",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:39.728583",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "ring_nf",
          "linarith"
        ],
        "node_id": "ring_nf@linarith",
        "parent_id": "ring_nf",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b : ℕ\nh : a + b = 10\na✝ : 1 + ↑a + ↑b < 11\n⊢ False failed",
        "execution_time": "2025-06-19T15:01:39.804090",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring_nf",
          "nlinarith"
        ],
        "node_id": "ring_nf@nlinarith",
        "parent_id": "ring_nf",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nlinarith failed to find a contradiction\ncase h1.h\na b : ℕ\nh : a + b = 10\na✝ : 1 + ↑a + ↑b < 11\n⊢ False failed",
        "execution_time": "2025-06-19T15:01:40.046036",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring_nf",
          "omega"
        ],
        "node_id": "ring_nf@omega",
        "parent_id": "ring_nf",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nomega could not prove the goal:\na possible counterexample may satisfy the constraints\n  0 ≤ c ≤ 10\nwhere\n c := ↑b",
        "execution_time": "2025-06-19T15:01:40.080357",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring_nf",
          "ring"
        ],
        "node_id": "ring_nf@ring",
        "parent_id": "ring_nf",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:40.143232",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "ring_nf",
          "ring_nf"
        ],
        "node_id": "ring_nf@ring_nf",
        "parent_id": "ring_nf",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:40.192105",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "ring_nf",
          "simp"
        ],
        "node_id": "ring_nf@simp",
        "parent_id": "ring_nf",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nsimp made no progress",
        "execution_time": "2025-06-19T15:01:40.235530",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring_nf",
          "simpa"
        ],
        "node_id": "ring_nf@simpa",
        "parent_id": "ring_nf",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\ntactic 'assumption' failed\na b : ℕ\nh : a + b = 10\n⊢ 1 + ↑a + ↑b = 11",
        "execution_time": "2025-06-19T15:01:40.281075",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring_nf",
          "field_simp"
        ],
        "node_id": "ring_nf@field_simp",
        "parent_id": "ring_nf",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nsimp made no progress",
        "execution_time": "2025-06-19T15:01:40.335340",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring_nf",
          "positivity"
        ],
        "node_id": "ring_nf@positivity",
        "parent_id": "ring_nf",
        "status": "error",
        "depth": 2,
        "error_message": "Lean error:\nnot a positivity goal",
        "execution_time": "2025-06-19T15:01:40.369070",
        "can_expand": true,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "ring_nf",
          "norm_cast"
        ],
        "node_id": "ring_nf@norm_cast",
        "parent_id": "ring_nf",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:40.415026",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "norm_cast",
          "norm_num"
        ],
        "node_id": "norm_cast@norm_num",
        "parent_id": "norm_cast",
        "status": "incomplete",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:40.454491",
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": 1
      },
      {
        "tactic_sequence": [
          "norm_cast",
          "linarith"
        ],
        "node_id": "norm_cast@linarith",
        "parent_id": "norm_cast",
        "status": "success",
        "depth": 2,
        "error_message": null,
        "execution_time": "2025-06-19T15:01:40.645878",
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_cast",
          "nlinarith"
        ],
        "node_id": "norm_cast@nlinarith",
        "parent_id": "norm_cast",
        "status": "pending",
        "depth": 2,
        "error_message": null,
        "execution_time": null,
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_cast",
          "omega"
        ],
        "node_id": "norm_cast@omega",
        "parent_id": "norm_cast",
        "status": "pending",
        "depth": 2,
        "error_message": null,
        "execution_time": null,
        "can_expand": false,
        "is_terminal": true,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_cast",
          "ring"
        ],
        "node_id": "norm_cast@ring",
        "parent_id": "norm_cast",
        "status": "pending",
        "depth": 2,
        "error_message": null,
        "execution_time": null,
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_cast",
          "ring_nf"
        ],
        "node_id": "norm_cast@ring_nf",
        "parent_id": "norm_cast",
        "status": "pending",
        "depth": 2,
        "error_message": null,
        "execution_time": null,
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_cast",
          "simp"
        ],
        "node_id": "norm_cast@simp",
        "parent_id": "norm_cast",
        "status": "pending",
        "depth": 2,
        "error_message": null,
        "execution_time": null,
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_cast",
          "simpa"
        ],
        "node_id": "norm_cast@simpa",
        "parent_id": "norm_cast",
        "status": "pending",
        "depth": 2,
        "error_message": null,
        "execution_time": null,
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_cast",
          "field_simp"
        ],
        "node_id": "norm_cast@field_simp",
        "parent_id": "norm_cast",
        "status": "pending",
        "depth": 2,
        "error_message": null,
        "execution_time": null,
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_cast",
          "positivity"
        ],
        "node_id": "norm_cast@positivity",
        "parent_id": "norm_cast",
        "status": "pending",
        "depth": 2,
        "error_message": null,
        "execution_time": null,
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": null
      },
      {
        "tactic_sequence": [
          "norm_cast",
          "norm_cast"
        ],
        "node_id": "norm_cast@norm_cast",
        "parent_id": "norm_cast",
        "status": "pending",
        "depth": 2,
        "error_message": null,
        "execution_time": null,
        "can_expand": true,
        "is_terminal": false,
        "remaining_goals": null
      }
    ]
  }
}